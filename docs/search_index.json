[["index.html", "DATA MINING Master Meci - Parcours PISE et CCESE - Option Data", " DATA MINING Master Meci - Parcours PISE et CCESE - Option Data Camille Signoretto, Maîtresse de conférences en économie, Université Paris Cité 2022-07-28 "],["00-Presentation.html", "Présentation À propos de ce document Prérequis Remerciements Licence", " Présentation À propos de ce document Ce document est la seconde version du cours de Data Mining dispensé aux étudiants de deuxième année de loption Data du master MECI parcours PISE et CCESE. Ce cours est partagé avec Claude Grasland, dont vous trouverez la partie de cours à ladresse suivante : https://ClaudeGrasland.github.io/DataMining1. Ce document est régulièrement corrigé et mis à jour. La version de référence est disponible en ligne à ladresse suivante : https://github.com/Camille-Sisi/Data-Mining. Pour toute suggestion ou correction, nhésitez pas à me contacter par mail. Prérequis Le seul prérequis pour suivre ce document est davoir installé R et RStudio sur votre ordinateur. Il sagit de deux logiciels libres, gratuits, téléchargeables en ligne et fonctionnant sous PC, Mac et Linux. Pour installer R, il suffit de se rendre sur une des pages suivantes1 : Installer R sous Windows Installer R sous Mac Pour installer RStudio, rendez-vous sur la page suivante et téléchargez la version adaptée à votre système : https://www.rstudio.com/products/rstudio/download/#download Remerciements Ce document a bénéficié de la relecture et des suggestions des étudiants qui en ont été les cobayes des premières versions. Ce document est généré par lextension bookdown de Yihui Xie et se base sur le template proposé par Julien Barnier pour introduire des exercices interactifs dans son cours de tidyverse. Licence Ce document est mis à disposition selon les termes de la Licence Creative Commons Attribution - Pas dUtilisation Commerciale - Partage dans les Mêmes Conditions 4.0 International. Licence Creative Commons Sous Linux, utilisez votre gestionnaire de packages habituel. "],["01-Jeu-de-donnees.html", "Section 1 Récupération du jeu de données sur une API", " Section 1 Récupération du jeu de données sur une API # On charge les librairies principales que l&#39;on va utiliser library(knitr) library(httr) library(jsonlite) library(tidyverse) library(gt) library(rstatix) library(janitor) On récupère le jeu de données sur lequel on va travailler au cours de cette séance sur le site de lopen data du Ministère de lenseignement supérieur et de la recherche : jai choisi ici de travailler sur les parcours et la réussite en licence des bacheliers nouvellement inscrits, la page présentant cette base est consultable ici. En allant dans longlet API, on peut récupérer ladresse à inscrire dans notre fonction GET. On récupère ensuite le contenu puis la base de données (cf. séance 1 de C. Grasland). get_url &lt;- GET(&quot;https://data.enseignementsup-recherche.gouv.fr/api/records/1.0/search/?dataset=fr-esr-parcours-et-reussite-des-bacheliers-en-licence&amp;q=&amp;rows=10000&amp;start=0&quot;) #liste content &lt;- fromJSON(rawToChar(get_url$content)) #liste ParcoursLic &lt;- content$records$fields La description sur le site nous donne le champ général et dautres informations sur les variables : le champ couvre lensemble des universités françaises, sauf luniversité de Nouvelle Calédonie ; les informations ne sont pas brutes dans la mesure où elles ont déjà été retravaillées ; nous navons pas, par conséquent, comme observations les individus inscrits et diplômés, mais des indicateurs déjà construits et donc plus ou moins agrégés. Plus précisément, on a en réalité deux types dinformations qui renvoient à deux champs différents : dabord sur le passage en deuxième année en un ou deux ans dont le champ des indicateurs est constitué des bacheliers 2014 inscrits en 2014-2015 en première année de licence (hors licence professionnelle) dans lenseignement supérieur public ; puis sur lobtention de la licence en trois ou quatre ans dont le champ des indicateurs est constitué des bacheliers 2012 inscrits en 2012-2013 en première année de licence dans lenseignement supérieur public. Dans les deux cas, les étudiants ayant pris une inscription parallèle en STS, DUT ou CPGE, sont exclus. Il faudra donc faire attention dans linterprétation des traitements statistiques que lon pourra faire de ces données. Lélément important est la base, cest-à-dire le dénominateur des indicateurs qui sont indiqués sur le site mentionné plus haut, cest cette variable quil faudra identifier et qui nous permettra de connaître les effectifs globaux des bacheliers inscrits selon lannée et ensuite par catégories. "],["02-Manipulation-base.html", "Section 2 Manipulation de la base 2.1 Format des données - WIDE ou LONG 2.2 Séparer les variables, séparer les données", " Section 2 Manipulation de la base On va regarder un peu à quoi ressemble la table de données téléchargée, quelles sont les variables, etc. ParcoursLic %&gt;% head() %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #yqoovcycgm .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #yqoovcycgm .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #yqoovcycgm .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #yqoovcycgm .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #yqoovcycgm .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #yqoovcycgm .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #yqoovcycgm .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #yqoovcycgm .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #yqoovcycgm .gt_column_spanner_outer:first-child { padding-left: 0; } #yqoovcycgm .gt_column_spanner_outer:last-child { padding-right: 0; } #yqoovcycgm .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #yqoovcycgm .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #yqoovcycgm .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #yqoovcycgm .gt_from_md > :first-child { margin-top: 0; } #yqoovcycgm .gt_from_md > :last-child { margin-bottom: 0; } #yqoovcycgm .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #yqoovcycgm .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #yqoovcycgm .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #yqoovcycgm .gt_row_group_first td { border-top-width: 2px; } #yqoovcycgm .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #yqoovcycgm .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #yqoovcycgm .gt_first_summary_row.thick { border-top-width: 2px; } #yqoovcycgm .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #yqoovcycgm .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #yqoovcycgm .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #yqoovcycgm .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #yqoovcycgm .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #yqoovcycgm .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #yqoovcycgm .gt_footnote { margin: 0px; font-size: 90%; padding-left: 4px; padding-right: 4px; padding-left: 5px; padding-right: 5px; } #yqoovcycgm .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #yqoovcycgm .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #yqoovcycgm .gt_left { text-align: left; } #yqoovcycgm .gt_center { text-align: center; } #yqoovcycgm .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #yqoovcycgm .gt_font_normal { font-weight: normal; } #yqoovcycgm .gt_font_bold { font-weight: bold; } #yqoovcycgm .gt_font_italic { font-style: italic; } #yqoovcycgm .gt_super { font-size: 65%; } #yqoovcycgm .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 75%; vertical-align: 0.4em; } #yqoovcycgm .gt_asterisk { font-size: 100%; vertical-align: 0; } #yqoovcycgm .gt_slash_mark { font-size: 0.7em; line-height: 0.7em; vertical-align: 0.15em; } #yqoovcycgm .gt_fraction_numerator { font-size: 0.6em; line-height: 0.6em; vertical-align: 0.45em; } #yqoovcycgm .gt_fraction_denominator { font-size: 0.6em; line-height: 0.6em; vertical-align: -0.05em; } passage_en_l2_2_ans effectif_neobacheliers_passage sect_disciplinaire_lib sexe age_au_bac_lib passage_en_l2_1_2_ans serie_bac_lib age_au_bac gd_discipline cohorte_reussite gd_discipline_lib mention_bac_lib discipline reussite_3_ans reorientation_en_dut discipline_lib reussite_3_4_ans reorientation_en_dut_1_an effectif_neobacheliers_reussite redoublement_en_l1 passage_en_l2_1_an cohorte_passage reorientation_en_dut_2_ans sect_disciplinaire sexe_lib mention_bac serie_bac reussite_4_ans 0 1 Langues et littératures étrangères 1 En retard d'un an 0 BAC STMG R1 LLSH 2012 Lettres, langues et sciences humaines Inconnue 05 0 0 Langues 0 0 3 0 0 2014 0 23 Homme Q 4 0 0 10 Sociologie, démographie 1 En retard d'un an 0 BAC STMG R1 LLSH 2012 Lettres, langues et sciences humaines Passable deuxième groupe 06 0 1 Sciences humaines et sociales 1 1 16 4 0 2014 0 33 Homme P 4 1 1 3 Langues et littératures étrangères 2 En retard de plus d'un an 3 BAC technologique hors STMG R2 LLSH 2012 Lettres, langues et sciences humaines Inconnue 05 1 0 Langues 1 0 4 1 2 2014 0 23 Femme Q 5 0 NA NA Langues et littératures étrangères 1 Non pris en compte NA BAC professionnel R4 LLSH 2012 Lettres, langues et sciences humaines Très bien 05 1 NA Langues 1 NA 1 NA NA 2014 NA 23 Homme A 6 0 1 21 Sociologie, démographie 2 En retard de plus d'un an 2 BAC technologique hors STMG R2 LLSH 2012 Lettres, langues et sciences humaines Passable deuxième groupe 06 1 1 Sciences humaines et sociales 2 1 29 12 1 2014 0 33 Femme P 5 1 0 9 Sciences de l'éducation 1 A l'heure ou en avance 9 BAC ES R0 LLSH 2012 Lettres, langues et sciences humaines Assez bien 06 NA 0 Sciences humaines et sociales NA 0 NA 0 9 2014 0 34 Homme C 2 NA ParcoursLic %&gt;% glimpse() #Note pour étudiants : en langage R de base, fonction équivalente &#39;str()&#39; Rows: 5,508 Columns: 28 $ passage_en_l2_2_ans &lt;dbl&gt; 0, 0, 1, NA, 1, 0, 20, 1, 0, 0, 0, 1, ~ $ effectif_neobacheliers_passage &lt;dbl&gt; 1, 10, 3, NA, 21, 9, 144, 10, 3, 5, 1,~ $ sect_disciplinaire_lib &lt;chr&gt; &quot;Langues et littératures étrangères&quot;, ~ $ sexe &lt;int&gt; 1, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 2, 2,~ $ age_au_bac_lib &lt;chr&gt; &quot;En retard d&#39;un an&quot;, &quot;En retard d&#39;un a~ $ passage_en_l2_1_2_ans &lt;dbl&gt; 0, 0, 3, NA, 2, 9, 86, 4, 1, 0, 1, 8, ~ $ serie_bac_lib &lt;chr&gt; &quot;BAC STMG&quot;, &quot;BAC STMG&quot;, &quot;BAC technolog~ $ age_au_bac &lt;chr&gt; &quot;R1&quot;, &quot;R1&quot;, &quot;R2&quot;, &quot;R4&quot;, &quot;R2&quot;, &quot;R0&quot;, &quot;R~ $ gd_discipline &lt;chr&gt; &quot;LLSH&quot;, &quot;LLSH&quot;, &quot;LLSH&quot;, &quot;LLSH&quot;, &quot;LLSH&quot;~ $ cohorte_reussite &lt;chr&gt; &quot;2012&quot;, &quot;2012&quot;, &quot;2012&quot;, &quot;2012&quot;, &quot;2012&quot;~ $ gd_discipline_lib &lt;chr&gt; &quot;Lettres, langues et sciences humaines~ $ mention_bac_lib &lt;chr&gt; &quot;Inconnue&quot;, &quot;Passable deuxième groupe&quot;~ $ discipline &lt;chr&gt; &quot;05&quot;, &quot;06&quot;, &quot;05&quot;, &quot;05&quot;, &quot;06&quot;, &quot;06&quot;, &quot;0~ $ reussite_3_ans &lt;dbl&gt; 0, 0, 1, 1, 1, NA, 48, 2, 0, 1, NA, 4,~ $ reorientation_en_dut &lt;dbl&gt; 0, 1, 0, NA, 1, 0, 3, 0, 0, 0, 0, 0, 0~ $ discipline_lib &lt;chr&gt; &quot;Langues&quot;, &quot;Sciences humaines et socia~ $ reussite_3_4_ans &lt;dbl&gt; 0, 1, 1, 1, 2, NA, 86, 2, 0, 1, NA, 9,~ $ reorientation_en_dut_1_an &lt;dbl&gt; 0, 1, 0, NA, 1, 0, 2, 0, 0, 0, 0, 0, 0~ $ effectif_neobacheliers_reussite &lt;dbl&gt; 3, 16, 4, 1, 29, NA, 206, 6, 2, 5, NA,~ $ redoublement_en_l1 &lt;dbl&gt; 0, 4, 1, NA, 12, 0, 39, 2, 0, 1, 0, 1,~ $ passage_en_l2_1_an &lt;dbl&gt; 0, 0, 2, NA, 1, 9, 66, 3, 1, 0, 1, 7, ~ $ cohorte_passage &lt;chr&gt; &quot;2014&quot;, &quot;2014&quot;, &quot;2014&quot;, &quot;2014&quot;, &quot;2014&quot;~ $ reorientation_en_dut_2_ans &lt;dbl&gt; 0, 0, 0, NA, 0, 0, 1, 0, 0, 0, 0, 0, 0~ $ sect_disciplinaire &lt;int&gt; 23, 33, 23, 23, 33, 34, 24, 24, 34, 34~ $ sexe_lib &lt;chr&gt; &quot;Homme&quot;, &quot;Homme&quot;, &quot;Femme&quot;, &quot;Homme&quot;, &quot;F~ $ mention_bac &lt;chr&gt; &quot;Q&quot;, &quot;P&quot;, &quot;Q&quot;, &quot;A&quot;, &quot;P&quot;, &quot;C&quot;, &quot;D&quot;, &quot;Q&quot;~ $ serie_bac &lt;int&gt; 4, 4, 5, 6, 5, 2, 2, 2, 4, 5, 4, 1, 5,~ $ reussite_4_ans &lt;dbl&gt; 0, 1, 0, 0, 1, NA, 38, 0, 0, 0, NA, 5,~ On a donc 28 colonnes ou variables et 5 508 lignes ou observations. Les variables sont en format, soit dbl (double), soit int (interger) ou encore chr (character). On remarque que certaines variables donnent la même information mais sont codées en nombre, ou en libellé : cest le cas de la variable sexe (sexe et sexe_lib), mais aussi de la série au bac, des grandes disciplines de la licence, etc. On a également 2 variables dont la modalité semble toujours la même - cohorte_passage et cohorte_reussite, on le vérifiera lorsquon travaillera spécifiquement sur les variables. Enfin, on voit également des NA, ce qui signifie que certaines variables ont des valeurs manquantes. 2.1 Format des données - WIDE ou LONG De manière plus générale, quel est le format de nos données ici ? Lobsevation de la table de données nous montre quon a une répétition de modalités pour toutes les variables catégorielles, on na donc pas une ligne par observation, car en réalité on a des données micro-agrégées, on est donc plutôt dans un format long. La question du format de la base est importante, on distingue généralement le format wide du format long : le premier renvoie au cas où chaque ligne correspond a un et un seul individu et toutes les informations le concernant sont en colonnes (ce qui peut augmenter rapidement le nombre de colonnes, cest lexemple dune information que lon a sur plusieurs années, chaque colonne correspondra à linformation de lannée en question) ; le second, au contraire, multiplie les lignes pour un seul individu mais il y a alors moins de colonnes (si lon reprend lexemple précédent, il y aura une colonne indiquant lannée et une colonne contenant linformation). Le package tidyverse contient deux fonctions qui permettent de passer dun format à un autre : pivot_longer() et pivot_wider() présentés en détails ici. Je vous présente un rapide exemple ci-dessous de la fonction pivot_wider(), mais nous aurons très probablement loccasion de les utiliser au cours de ce semestre. # On sélectionne seulement 2 variables catégorielles et une variable quanti avec # la fonction select() # Dans la fonction pivot_wider(), il est nécessaire de préciser les arguments # `values_fill=&#39; et &quot;values_fn&#39; pour que R sache quoi faire des différentes # valeurs répétées : les sommer ? en faire la moyenne ? Etc. Ici, logiquement, # on fait la somme. # Dernière chose : comme il y a des valeurs manquantes, il faut mettre un filtre # avant précisant sans valeurs manquantes, avec la fonction filter(). ParcoursLic %&gt;% select(effectif_neobacheliers_passage, serie_bac_lib, age_au_bac_lib) %&gt;% filter(!is.na(effectif_neobacheliers_passage)) %&gt;% pivot_wider(names_from = serie_bac_lib, values_from = effectif_neobacheliers_passage, values_fill = 0, values_fn = list(effectif_neobacheliers_passage=sum)) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #ifzabvhbjz .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #ifzabvhbjz .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #ifzabvhbjz .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #ifzabvhbjz .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #ifzabvhbjz .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ifzabvhbjz .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #ifzabvhbjz .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #ifzabvhbjz .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #ifzabvhbjz .gt_column_spanner_outer:first-child { padding-left: 0; } #ifzabvhbjz .gt_column_spanner_outer:last-child { padding-right: 0; } #ifzabvhbjz .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #ifzabvhbjz .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #ifzabvhbjz .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #ifzabvhbjz .gt_from_md > :first-child { margin-top: 0; } #ifzabvhbjz .gt_from_md > :last-child { margin-bottom: 0; } #ifzabvhbjz .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #ifzabvhbjz .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #ifzabvhbjz .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #ifzabvhbjz .gt_row_group_first td { border-top-width: 2px; } #ifzabvhbjz .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #ifzabvhbjz .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #ifzabvhbjz .gt_first_summary_row.thick { border-top-width: 2px; } #ifzabvhbjz .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ifzabvhbjz .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #ifzabvhbjz .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #ifzabvhbjz .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #ifzabvhbjz .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ifzabvhbjz .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #ifzabvhbjz .gt_footnote { margin: 0px; font-size: 90%; padding-left: 4px; padding-right: 4px; padding-left: 5px; padding-right: 5px; } #ifzabvhbjz .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #ifzabvhbjz .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #ifzabvhbjz .gt_left { text-align: left; } #ifzabvhbjz .gt_center { text-align: center; } #ifzabvhbjz .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #ifzabvhbjz .gt_font_normal { font-weight: normal; } #ifzabvhbjz .gt_font_bold { font-weight: bold; } #ifzabvhbjz .gt_font_italic { font-style: italic; } #ifzabvhbjz .gt_super { font-size: 65%; } #ifzabvhbjz .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 75%; vertical-align: 0.4em; } #ifzabvhbjz .gt_asterisk { font-size: 100%; vertical-align: 0; } #ifzabvhbjz .gt_slash_mark { font-size: 0.7em; line-height: 0.7em; vertical-align: 0.15em; } #ifzabvhbjz .gt_fraction_numerator { font-size: 0.6em; line-height: 0.6em; vertical-align: 0.45em; } #ifzabvhbjz .gt_fraction_denominator { font-size: 0.6em; line-height: 0.6em; vertical-align: -0.05em; } age_au_bac_lib BAC STMG BAC technologique hors STMG BAC ES BAC L BAC S BAC professionnel En retard d'un an 5484 3534 8139 6242 6226 0 En retard de plus d'un an 2043 1538 1553 1587 1500 0 A l'heure ou en avance 6432 5565 36732 23260 35404 0 Non pris en compte 0 0 0 0 0 14527 2.2 Séparer les variables, séparer les données On peut également créer de nouvelles colonnes à partir dune colonne en séparant les informations, ou le contraire rassembler 2 informations contenues dans 2 colonnes différentes dans une seule colonne. Ce sont respectivement les fonctions separate() et unite() du langage tidyverse que lon utilise alors. Là aussi, je vous montre ci-dessous un rapide exemple avec la fonction separate(), mais de même on aura sûrement loccasion de les utiliser de manière plus approfondie ce semestre. ParcoursLic %&gt;% separate(serie_bac_lib, into = c(&#39;Bac&#39;,&#39;Serie&#39;)) %&gt;% select(Bac, Serie) %&gt;% head(4) %&gt;% gt() Warning: Expected 2 pieces. Additional pieces discarded in 1055 rows [3, 5, 10, 13, 16, 18, 19, 24, 50, 52, 58, 65, 66, 79, 81, 87, 89, 99, 118, 124, ...]. html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #ysbixmqvik .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #ysbixmqvik .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #ysbixmqvik .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #ysbixmqvik .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #ysbixmqvik .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ysbixmqvik .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #ysbixmqvik .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #ysbixmqvik .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #ysbixmqvik .gt_column_spanner_outer:first-child { padding-left: 0; } #ysbixmqvik .gt_column_spanner_outer:last-child { padding-right: 0; } #ysbixmqvik .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #ysbixmqvik .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #ysbixmqvik .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #ysbixmqvik .gt_from_md > :first-child { margin-top: 0; } #ysbixmqvik .gt_from_md > :last-child { margin-bottom: 0; } #ysbixmqvik .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #ysbixmqvik .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #ysbixmqvik .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #ysbixmqvik .gt_row_group_first td { border-top-width: 2px; } #ysbixmqvik .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #ysbixmqvik .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #ysbixmqvik .gt_first_summary_row.thick { border-top-width: 2px; } #ysbixmqvik .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ysbixmqvik .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #ysbixmqvik .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #ysbixmqvik .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #ysbixmqvik .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ysbixmqvik .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #ysbixmqvik .gt_footnote { margin: 0px; font-size: 90%; padding-left: 4px; padding-right: 4px; padding-left: 5px; padding-right: 5px; } #ysbixmqvik .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #ysbixmqvik .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #ysbixmqvik .gt_left { text-align: left; } #ysbixmqvik .gt_center { text-align: center; } #ysbixmqvik .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #ysbixmqvik .gt_font_normal { font-weight: normal; } #ysbixmqvik .gt_font_bold { font-weight: bold; } #ysbixmqvik .gt_font_italic { font-style: italic; } #ysbixmqvik .gt_super { font-size: 65%; } #ysbixmqvik .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 75%; vertical-align: 0.4em; } #ysbixmqvik .gt_asterisk { font-size: 100%; vertical-align: 0; } #ysbixmqvik .gt_slash_mark { font-size: 0.7em; line-height: 0.7em; vertical-align: 0.15em; } #ysbixmqvik .gt_fraction_numerator { font-size: 0.6em; line-height: 0.6em; vertical-align: 0.45em; } #ysbixmqvik .gt_fraction_denominator { font-size: 0.6em; line-height: 0.6em; vertical-align: -0.05em; } Bac Serie BAC STMG BAC STMG BAC technologique BAC professionnel Mais attention, on a un warning car on ne lui a pas indiqué doption de séparation, et automatiquement le premier espace séparant le 1er du 2ème mot a été utilisé, mais du coup on voit que pour les expressions qui avaient plus de 2 mots on na pas les autres mots (cest le cas pour la modalité Bac technologique hors STMG qui est devenu BAC dun côté et technologique de lautre). Pour remédier à cela, il faut ajouter largument extra=\"merge\". ParcoursLic %&gt;% separate(serie_bac_lib, into = c(&#39;Bac&#39;,&#39;Serie&#39;), sep=&quot; &quot;, extra=&quot;merge&quot;) %&gt;% select(Bac, Serie) %&gt;% head(4) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #zzwtckbevn .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #zzwtckbevn .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #zzwtckbevn .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #zzwtckbevn .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #zzwtckbevn .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #zzwtckbevn .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #zzwtckbevn .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #zzwtckbevn .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #zzwtckbevn .gt_column_spanner_outer:first-child { padding-left: 0; } #zzwtckbevn .gt_column_spanner_outer:last-child { padding-right: 0; } #zzwtckbevn .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #zzwtckbevn .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #zzwtckbevn .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #zzwtckbevn .gt_from_md > :first-child { margin-top: 0; } #zzwtckbevn .gt_from_md > :last-child { margin-bottom: 0; } #zzwtckbevn .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #zzwtckbevn .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #zzwtckbevn .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #zzwtckbevn .gt_row_group_first td { border-top-width: 2px; } #zzwtckbevn .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #zzwtckbevn .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #zzwtckbevn .gt_first_summary_row.thick { border-top-width: 2px; } #zzwtckbevn .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #zzwtckbevn .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #zzwtckbevn .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #zzwtckbevn .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #zzwtckbevn .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #zzwtckbevn .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #zzwtckbevn .gt_footnote { margin: 0px; font-size: 90%; padding-left: 4px; padding-right: 4px; padding-left: 5px; padding-right: 5px; } #zzwtckbevn .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #zzwtckbevn .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #zzwtckbevn .gt_left { text-align: left; } #zzwtckbevn .gt_center { text-align: center; } #zzwtckbevn .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #zzwtckbevn .gt_font_normal { font-weight: normal; } #zzwtckbevn .gt_font_bold { font-weight: bold; } #zzwtckbevn .gt_font_italic { font-style: italic; } #zzwtckbevn .gt_super { font-size: 65%; } #zzwtckbevn .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 75%; vertical-align: 0.4em; } #zzwtckbevn .gt_asterisk { font-size: 100%; vertical-align: 0; } #zzwtckbevn .gt_slash_mark { font-size: 0.7em; line-height: 0.7em; vertical-align: 0.15em; } #zzwtckbevn .gt_fraction_numerator { font-size: 0.6em; line-height: 0.6em; vertical-align: 0.45em; } #zzwtckbevn .gt_fraction_denominator { font-size: 0.6em; line-height: 0.6em; vertical-align: -0.05em; } Bac Serie BAC STMG BAC STMG BAC technologique hors STMG BAC professionnel Enfin, comme on a dit que lon avait des informations sur deux champs différents, on peut très bien décider de créer deux nouvelles tables de données, en retenant seulement les informations correspondant au champ concerné. La première que lon peut intituler PassageL1L2 comprendrait toutes les lignes de la base initiale ParcoursLic mais sans les colonnes reussite_3_ans, reussite_4_ans, reussite_3_4_ans, effectif_neobacheliers_reussite et cohorte_reussite, alors que la seconde que lon peut intituler ReussiteLic comprendrait ces variables, ainsi que toutes les lignes. Comme vous le savez très probablement, dans le langage tidyverse, pour faire des sélections sur les lignes ou observations dans une table de données, on utilise la fonction filter() ; pour faire des sélections sur les colonnes ou variables, on utilise la fonction select() ; pour supprimer des variables, on utilise select() également (dans le langage R de base, on peut utiliser la fonction subset()). Créer donc ces deux nouvelles bases de données, de telle sorte quelles ressemblent à ce qui saffiche ci-dessous : html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #cvzjckylpj .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #cvzjckylpj .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #cvzjckylpj .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #cvzjckylpj .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #cvzjckylpj .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #cvzjckylpj .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #cvzjckylpj .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #cvzjckylpj .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #cvzjckylpj .gt_column_spanner_outer:first-child { padding-left: 0; } #cvzjckylpj .gt_column_spanner_outer:last-child { padding-right: 0; } #cvzjckylpj .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #cvzjckylpj .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #cvzjckylpj .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #cvzjckylpj .gt_from_md > :first-child { margin-top: 0; } #cvzjckylpj .gt_from_md > :last-child { margin-bottom: 0; } #cvzjckylpj .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #cvzjckylpj .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #cvzjckylpj .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #cvzjckylpj .gt_row_group_first td { border-top-width: 2px; } #cvzjckylpj .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #cvzjckylpj .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #cvzjckylpj .gt_first_summary_row.thick { border-top-width: 2px; } #cvzjckylpj .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #cvzjckylpj .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #cvzjckylpj .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #cvzjckylpj .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #cvzjckylpj .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #cvzjckylpj .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #cvzjckylpj .gt_footnote { margin: 0px; font-size: 90%; padding-left: 4px; padding-right: 4px; padding-left: 5px; padding-right: 5px; } #cvzjckylpj .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #cvzjckylpj .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #cvzjckylpj .gt_left { text-align: left; } #cvzjckylpj .gt_center { text-align: center; } #cvzjckylpj .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #cvzjckylpj .gt_font_normal { font-weight: normal; } #cvzjckylpj .gt_font_bold { font-weight: bold; } #cvzjckylpj .gt_font_italic { font-style: italic; } #cvzjckylpj .gt_super { font-size: 65%; } #cvzjckylpj .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 75%; vertical-align: 0.4em; } #cvzjckylpj .gt_asterisk { font-size: 100%; vertical-align: 0; } #cvzjckylpj .gt_slash_mark { font-size: 0.7em; line-height: 0.7em; vertical-align: 0.15em; } #cvzjckylpj .gt_fraction_numerator { font-size: 0.6em; line-height: 0.6em; vertical-align: 0.45em; } #cvzjckylpj .gt_fraction_denominator { font-size: 0.6em; line-height: 0.6em; vertical-align: -0.05em; } passage_en_l2_2_ans effectif_neobacheliers_passage sect_disciplinaire_lib sexe age_au_bac_lib passage_en_l2_1_2_ans serie_bac_lib age_au_bac gd_discipline gd_discipline_lib mention_bac_lib discipline reorientation_en_dut discipline_lib reorientation_en_dut_1_an redoublement_en_l1 passage_en_l2_1_an cohorte_passage reorientation_en_dut_2_ans sect_disciplinaire sexe_lib mention_bac serie_bac 0 1 Langues et littératures étrangères 1 En retard d'un an 0 BAC STMG R1 LLSH Lettres, langues et sciences humaines Inconnue 05 0 Langues 0 0 0 2014 0 23 Homme Q 4 0 10 Sociologie, démographie 1 En retard d'un an 0 BAC STMG R1 LLSH Lettres, langues et sciences humaines Passable deuxième groupe 06 1 Sciences humaines et sociales 1 4 0 2014 0 33 Homme P 4 1 3 Langues et littératures étrangères 2 En retard de plus d'un an 3 BAC technologique hors STMG R2 LLSH Lettres, langues et sciences humaines Inconnue 05 0 Langues 0 1 2 2014 0 23 Femme Q 5 NA NA Langues et littératures étrangères 1 Non pris en compte NA BAC professionnel R4 LLSH Lettres, langues et sciences humaines Très bien 05 NA Langues NA NA NA 2014 NA 23 Homme A 6 1 21 Sociologie, démographie 2 En retard de plus d'un an 2 BAC technologique hors STMG R2 LLSH Lettres, langues et sciences humaines Passable deuxième groupe 06 1 Sciences humaines et sociales 1 12 1 2014 0 33 Femme P 5 html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #lhgqqbvpsd .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #lhgqqbvpsd .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #lhgqqbvpsd .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #lhgqqbvpsd .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #lhgqqbvpsd .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #lhgqqbvpsd .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #lhgqqbvpsd .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #lhgqqbvpsd .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #lhgqqbvpsd .gt_column_spanner_outer:first-child { padding-left: 0; } #lhgqqbvpsd .gt_column_spanner_outer:last-child { padding-right: 0; } #lhgqqbvpsd .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #lhgqqbvpsd .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #lhgqqbvpsd .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #lhgqqbvpsd .gt_from_md > :first-child { margin-top: 0; } #lhgqqbvpsd .gt_from_md > :last-child { margin-bottom: 0; } #lhgqqbvpsd .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #lhgqqbvpsd .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #lhgqqbvpsd .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #lhgqqbvpsd .gt_row_group_first td { border-top-width: 2px; } #lhgqqbvpsd .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #lhgqqbvpsd .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #lhgqqbvpsd .gt_first_summary_row.thick { border-top-width: 2px; } #lhgqqbvpsd .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #lhgqqbvpsd .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #lhgqqbvpsd .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #lhgqqbvpsd .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #lhgqqbvpsd .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #lhgqqbvpsd .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #lhgqqbvpsd .gt_footnote { margin: 0px; font-size: 90%; padding-left: 4px; padding-right: 4px; padding-left: 5px; padding-right: 5px; } #lhgqqbvpsd .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #lhgqqbvpsd .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #lhgqqbvpsd .gt_left { text-align: left; } #lhgqqbvpsd .gt_center { text-align: center; } #lhgqqbvpsd .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #lhgqqbvpsd .gt_font_normal { font-weight: normal; } #lhgqqbvpsd .gt_font_bold { font-weight: bold; } #lhgqqbvpsd .gt_font_italic { font-style: italic; } #lhgqqbvpsd .gt_super { font-size: 65%; } #lhgqqbvpsd .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 75%; vertical-align: 0.4em; } #lhgqqbvpsd .gt_asterisk { font-size: 100%; vertical-align: 0; } #lhgqqbvpsd .gt_slash_mark { font-size: 0.7em; line-height: 0.7em; vertical-align: 0.15em; } #lhgqqbvpsd .gt_fraction_numerator { font-size: 0.6em; line-height: 0.6em; vertical-align: 0.45em; } #lhgqqbvpsd .gt_fraction_denominator { font-size: 0.6em; line-height: 0.6em; vertical-align: -0.05em; } reussite_3_ans reussite_4_ans reussite_3_4_ans effectif_neobacheliers_reussite cohorte_reussite sect_disciplinaire_lib sexe age_au_bac_lib serie_bac_lib age_au_bac gd_discipline gd_discipline_lib mention_bac_lib discipline discipline_lib sect_disciplinaire sexe_lib mention_bac serie_bac 0 0 0 3 2012 Langues et littératures étrangères 1 En retard d'un an BAC STMG R1 LLSH Lettres, langues et sciences humaines Inconnue 05 Langues 23 Homme Q 4 0 1 1 16 2012 Sociologie, démographie 1 En retard d'un an BAC STMG R1 LLSH Lettres, langues et sciences humaines Passable deuxième groupe 06 Sciences humaines et sociales 33 Homme P 4 1 0 1 4 2012 Langues et littératures étrangères 2 En retard de plus d'un an BAC technologique hors STMG R2 LLSH Lettres, langues et sciences humaines Inconnue 05 Langues 23 Femme Q 5 1 0 1 1 2012 Langues et littératures étrangères 1 Non pris en compte BAC professionnel R4 LLSH Lettres, langues et sciences humaines Très bien 05 Langues 23 Homme A 6 1 1 2 29 2012 Sociologie, démographie 2 En retard de plus d'un an BAC technologique hors STMG R2 LLSH Lettres, langues et sciences humaines Passable deuxième groupe 06 Sciences humaines et sociales 33 Femme P 5 \\iffalse PassageL1L2 &lt;- ParcoursLic %&gt;% select(-c(&quot;reussite_3_ans&quot;, &quot;reussite_4_ans&quot;, &quot;reussite_3_4_ans&quot;, &quot;effectif_neobacheliers_reussite&quot;, &quot;cohorte_reussite&quot;)) ReussiteLic &lt;- ParcoursLic %&gt;% select(&quot;reussite_3_ans&quot;, &quot;reussite_4_ans&quot;, &quot;reussite_3_4_ans&quot;, &quot;effectif_neobacheliers_reussite&quot;, &quot;cohorte_reussite&quot;, &quot;sect_disciplinaire_lib&quot;,&quot;sexe&quot;, &quot;age_au_bac_lib&quot;, &quot;serie_bac_lib&quot;, &quot;age_au_bac&quot;, &quot;gd_discipline&quot;, &quot;gd_discipline_lib&quot;, &quot;mention_bac_lib&quot;, &quot;discipline&quot;, &quot;discipline_lib&quot;, &quot;sect_disciplinaire&quot;, &quot;sexe_lib&quot;, &quot;mention_bac&quot;, &quot;serie_bac&quot;) Ainsi, pour la première table, la variable clé donnant les effectifs est effectif_neobacheliers_passage, alors que pour la seconde table, cest effectif_neobacheliers_reussite. Cela signifie que, par exemple, pour avoir les effectifs globaux des bacheliers 2014 inscrits en 2014-2015 (champ base PassageL1L2) et des bacheliers 2012 inscrits en 2012-2013 (champ base ReussiteLic), on peut écrire le code suivant - attention il y a des valeurs manquantes, il faut donc bien ajouter loption na.rm=TRUE à la fonction summarise() ! On verra plus loin quon peut également utiliser la fonction count(). PassageL1L2 %&gt;% summarise(&#39;Nombre total de bacheliers inscrits en 2014-2015 en licence&#39; = sum(effectif_neobacheliers_passage, na.rm=TRUE)) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #vwpqqxngsh .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #vwpqqxngsh .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #vwpqqxngsh .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #vwpqqxngsh .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #vwpqqxngsh .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #vwpqqxngsh .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #vwpqqxngsh .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #vwpqqxngsh .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #vwpqqxngsh .gt_column_spanner_outer:first-child { padding-left: 0; } #vwpqqxngsh .gt_column_spanner_outer:last-child { padding-right: 0; } #vwpqqxngsh .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #vwpqqxngsh .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #vwpqqxngsh .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #vwpqqxngsh .gt_from_md > :first-child { margin-top: 0; } #vwpqqxngsh .gt_from_md > :last-child { margin-bottom: 0; } #vwpqqxngsh .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #vwpqqxngsh .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #vwpqqxngsh .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #vwpqqxngsh .gt_row_group_first td { border-top-width: 2px; } #vwpqqxngsh .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #vwpqqxngsh .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #vwpqqxngsh .gt_first_summary_row.thick { border-top-width: 2px; } #vwpqqxngsh .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #vwpqqxngsh .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #vwpqqxngsh .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #vwpqqxngsh .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #vwpqqxngsh .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #vwpqqxngsh .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #vwpqqxngsh .gt_footnote { margin: 0px; font-size: 90%; padding-left: 4px; padding-right: 4px; padding-left: 5px; padding-right: 5px; } #vwpqqxngsh .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #vwpqqxngsh .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #vwpqqxngsh .gt_left { text-align: left; } #vwpqqxngsh .gt_center { text-align: center; } #vwpqqxngsh .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #vwpqqxngsh .gt_font_normal { font-weight: normal; } #vwpqqxngsh .gt_font_bold { font-weight: bold; } #vwpqqxngsh .gt_font_italic { font-style: italic; } #vwpqqxngsh .gt_super { font-size: 65%; } #vwpqqxngsh .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 75%; vertical-align: 0.4em; } #vwpqqxngsh .gt_asterisk { font-size: 100%; vertical-align: 0; } #vwpqqxngsh .gt_slash_mark { font-size: 0.7em; line-height: 0.7em; vertical-align: 0.15em; } #vwpqqxngsh .gt_fraction_numerator { font-size: 0.6em; line-height: 0.6em; vertical-align: 0.45em; } #vwpqqxngsh .gt_fraction_denominator { font-size: 0.6em; line-height: 0.6em; vertical-align: -0.05em; } Nombre total de bacheliers inscrits en 2014-2015 en licence 159766 ReussiteLic %&gt;% summarise(&#39;Nombre total de bacheliers inscrits en 2012-2013 en licence&#39; = sum(effectif_neobacheliers_reussite, na.rm=TRUE)) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #bbqgfepfgu .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #bbqgfepfgu .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #bbqgfepfgu .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #bbqgfepfgu .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #bbqgfepfgu .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #bbqgfepfgu .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #bbqgfepfgu .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #bbqgfepfgu .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #bbqgfepfgu .gt_column_spanner_outer:first-child { padding-left: 0; } #bbqgfepfgu .gt_column_spanner_outer:last-child { padding-right: 0; } #bbqgfepfgu .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #bbqgfepfgu .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #bbqgfepfgu .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #bbqgfepfgu .gt_from_md > :first-child { margin-top: 0; } #bbqgfepfgu .gt_from_md > :last-child { margin-bottom: 0; } #bbqgfepfgu .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #bbqgfepfgu .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #bbqgfepfgu .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #bbqgfepfgu .gt_row_group_first td { border-top-width: 2px; } #bbqgfepfgu .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #bbqgfepfgu .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #bbqgfepfgu .gt_first_summary_row.thick { border-top-width: 2px; } #bbqgfepfgu .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #bbqgfepfgu .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #bbqgfepfgu .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #bbqgfepfgu .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #bbqgfepfgu .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #bbqgfepfgu .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #bbqgfepfgu .gt_footnote { margin: 0px; font-size: 90%; padding-left: 4px; padding-right: 4px; padding-left: 5px; padding-right: 5px; } #bbqgfepfgu .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #bbqgfepfgu .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #bbqgfepfgu .gt_left { text-align: left; } #bbqgfepfgu .gt_center { text-align: center; } #bbqgfepfgu .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #bbqgfepfgu .gt_font_normal { font-weight: normal; } #bbqgfepfgu .gt_font_bold { font-weight: bold; } #bbqgfepfgu .gt_font_italic { font-style: italic; } #bbqgfepfgu .gt_super { font-size: 65%; } #bbqgfepfgu .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 75%; vertical-align: 0.4em; } #bbqgfepfgu .gt_asterisk { font-size: 100%; vertical-align: 0; } #bbqgfepfgu .gt_slash_mark { font-size: 0.7em; line-height: 0.7em; vertical-align: 0.15em; } #bbqgfepfgu .gt_fraction_numerator { font-size: 0.6em; line-height: 0.6em; vertical-align: 0.45em; } #bbqgfepfgu .gt_fraction_denominator { font-size: 0.6em; line-height: 0.6em; vertical-align: -0.05em; } Nombre total de bacheliers inscrits en 2012-2013 en licence 147841 "],["03-Manipulation-variables.html", "Section 3 Manipulation des variables 3.1 Manipulation des variables qualitatives 3.2 Manipulation des variables quantitatives", " Section 3 Manipulation des variables On va transformer toutes nos variables caractères en variables factor pour que R reconnaisse les différents niveaux, cest-à-dire modalités, des variables par la suite. Une façon simple de le faire est dutiliser la fonction mutate_if. PassageL1L2 &lt;- PassageL1L2 %&gt;% mutate_if(is.character, as.factor) ReussiteLic &lt;- ReussiteLic %&gt;% mutate_if(is.character, as.factor) On peut ainsi vérifier que les variables cohorte_passage et cohorte_reussite ont toujours la même modalité, et quelles nen ont quune : nlevels(PassageL1L2$cohorte_passage) [1] 1 levels(PassageL1L2$cohorte_passage) [1] &quot;2014&quot; nlevels(ReussiteLic$cohorte_reussite) [1] 1 levels(ReussiteLic$cohorte_reussite) [1] &quot;2012&quot; Remarque : pour la suite, on travaillera essentiellement sur la base PassageL1L2, mais vous pouvez réaliser le même type danalyse pour la base ReussiteLic. On peut également vérifier les variables numériques qui restent, en les sélectionnant avec select_if() : PassageL1L2 %&gt;% select_if(is.numeric) %&gt;% head(2) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #lwyrgothiy .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #lwyrgothiy .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #lwyrgothiy .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #lwyrgothiy .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #lwyrgothiy .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #lwyrgothiy .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #lwyrgothiy .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #lwyrgothiy .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #lwyrgothiy .gt_column_spanner_outer:first-child { padding-left: 0; } #lwyrgothiy .gt_column_spanner_outer:last-child { padding-right: 0; } #lwyrgothiy .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #lwyrgothiy .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #lwyrgothiy .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #lwyrgothiy .gt_from_md > :first-child { margin-top: 0; } #lwyrgothiy .gt_from_md > :last-child { margin-bottom: 0; } #lwyrgothiy .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #lwyrgothiy .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #lwyrgothiy .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #lwyrgothiy .gt_row_group_first td { border-top-width: 2px; } #lwyrgothiy .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #lwyrgothiy .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #lwyrgothiy .gt_first_summary_row.thick { border-top-width: 2px; } #lwyrgothiy .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #lwyrgothiy .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #lwyrgothiy .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #lwyrgothiy .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #lwyrgothiy .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #lwyrgothiy .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #lwyrgothiy .gt_footnote { margin: 0px; font-size: 90%; padding-left: 4px; padding-right: 4px; padding-left: 5px; padding-right: 5px; } #lwyrgothiy .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #lwyrgothiy .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #lwyrgothiy .gt_left { text-align: left; } #lwyrgothiy .gt_center { text-align: center; } #lwyrgothiy .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #lwyrgothiy .gt_font_normal { font-weight: normal; } #lwyrgothiy .gt_font_bold { font-weight: bold; } #lwyrgothiy .gt_font_italic { font-style: italic; } #lwyrgothiy .gt_super { font-size: 65%; } #lwyrgothiy .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 75%; vertical-align: 0.4em; } #lwyrgothiy .gt_asterisk { font-size: 100%; vertical-align: 0; } #lwyrgothiy .gt_slash_mark { font-size: 0.7em; line-height: 0.7em; vertical-align: 0.15em; } #lwyrgothiy .gt_fraction_numerator { font-size: 0.6em; line-height: 0.6em; vertical-align: 0.45em; } #lwyrgothiy .gt_fraction_denominator { font-size: 0.6em; line-height: 0.6em; vertical-align: -0.05em; } passage_en_l2_2_ans effectif_neobacheliers_passage sexe passage_en_l2_1_2_ans reorientation_en_dut reorientation_en_dut_1_an redoublement_en_l1 passage_en_l2_1_an reorientation_en_dut_2_ans sect_disciplinaire serie_bac 0 1 1 0 0 0 0 0 0 23 4 0 10 1 0 1 1 4 0 0 33 4 Ahhh !!! On voit que 3 variables sont en réalité des variables catégorielles mais avec des modalités numériques : sexe, sect_disciplinaire et serie_bac. On va donc les transformer en variable factor avec la fonction as.factor() appelée elle-même dans la fonction mutate() qui dans le langage tidyverse permet de créer de nouvelles variables. PassageL1L2 &lt;- PassageL1L2 %&gt;% mutate(sexe=as.factor(sexe), sect_disciplinaire=as.factor(sect_disciplinaire), serie_bac=as.factor(serie_bac)) Ensuite, il est souvent dusage dutiliser la fonction summary() pour donner une idée sur lensemble des variables, soit de la distribution pour les variables quantitatives, soit de la répartition des différentes modalités pour les variables qualitatives ; la fonction permet également de nous donner linformation sur lexistence et le nombre de valeurs manquantes pour chaque variable. summary(PassageL1L2) passage_en_l2_2_ans effectif_neobacheliers_passage Min. : 0.000 Min. : 1.00 1st Qu.: 0.000 1st Qu.: 2.00 Median : 0.000 Median : 6.00 Mean : 4.316 Mean : 35.12 3rd Qu.: 2.000 3rd Qu.: 23.00 Max. :571.000 Max. :2454.00 NA&#39;s :959 NA&#39;s :959 sect_disciplinaire_lib sexe Sciences juridiques : 187 1:2756 Langues étrangères appliquées : 177 2:2752 Langues et littératures étrangères: 176 Psychologie : 176 STAPS : 173 Arts : 172 (Other) :4447 age_au_bac_lib passage_en_l2_1_2_ans A l&#39;heure ou en avance :2021 Min. : 0.00 En retard d&#39;un an :1746 1st Qu.: 1.00 En retard de plus d&#39;un an:1316 Median : 2.00 Non pris en compte : 425 Mean : 18.63 3rd Qu.: 8.00 Max. :1950.00 NA&#39;s :959 serie_bac_lib age_au_bac gd_discipline BAC ES :1066 R0:2021 DSA :1097 BAC L : 896 R1:1746 LLSH :2562 BAC professionnel : 425 R2:1316 SANTE: 15 BAC S :1218 R4: 425 SI :1661 BAC STMG : 848 STAPS: 173 BAC technologique hors STMG:1055 gd_discipline_lib mention_bac_lib Droit, gestion, économie, AES :1097 Assez bien :1080 Lettres, langues et sciences humaines:2562 Bien : 796 Santé : 15 Inconnue : 848 Sciences et sciences de l&#39;ingénieur :1661 Passable deuxième groupe:1112 STAPS : 173 Passable premier groupe :1220 Très bien : 452 discipline reorientation_en_dut 06 :1395 Min. : 0.000 15 :1168 1st Qu.: 0.000 04 : 593 Median : 0.000 01 : 470 Mean : 0.805 02 : 462 3rd Qu.: 0.000 05 : 459 Max. :79.000 (Other): 961 NA&#39;s :959 discipline_lib reorientation_en_dut_1_an Sciences humaines et sociales :1395 Min. : 0.0000 Sciences fondamentales et applications:1168 1st Qu.: 0.0000 Lettres, sciences du langage, arts : 593 Median : 0.0000 Droit, sciences politiques : 470 Mean : 0.6186 Sciences économiques, gestion : 462 3rd Qu.: 0.0000 Langues : 459 Max. :63.0000 (Other) : 961 NA&#39;s :959 redoublement_en_l1 passage_en_l2_1_an cohorte_passage Min. : 0.0 Min. : 0.00 2014:5508 1st Qu.: 0.0 1st Qu.: 0.00 Median : 1.0 Median : 1.00 Mean : 10.2 Mean : 14.32 3rd Qu.: 6.0 3rd Qu.: 6.00 Max. :1019.0 Max. :1494.00 NA&#39;s :959 NA&#39;s :959 reorientation_en_dut_2_ans sect_disciplinaire sexe_lib mention_bac Min. : 0.0000 36 : 187 Femme:2752 A: 452 1st Qu.: 0.0000 24 : 177 Homme:2756 B: 796 Median : 0.0000 23 : 176 C:1080 Mean : 0.1864 32 : 176 D:1220 3rd Qu.: 0.0000 10 : 173 P:1112 Max. :21.0000 21 : 172 Q: 848 NA&#39;s :959 (Other):4447 serie_bac 1: 896 2:1066 3:1218 4: 848 5:1055 6: 425 Mais, en réalité ici, ces statistiques nont pas grand sens en soi, en raison encore une fois du fait que lon a des variables micro-agrégées ; et pour avoir les vraies statistiques il faut sommer notre variable clé deffectif à chaque fois, cest-à-dire pour chaque variable catégorielle en utilisant pour cela la fonction group_by() avant la fonction summarise(). Par exemple : # Si on veut la répartition des inscrits 2014-2015 en licence selon la # série du Bac : PassageL1L2 %&gt;% group_by(serie_bac_lib) %&gt;% summarise(eff_2014=sum(effectif_neobacheliers_passage, na.rm=T)) %&gt;% adorn_totals(&quot;row&quot;) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #miuwjxlrnz .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #miuwjxlrnz .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #miuwjxlrnz .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #miuwjxlrnz .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #miuwjxlrnz .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #miuwjxlrnz .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #miuwjxlrnz .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #miuwjxlrnz .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #miuwjxlrnz .gt_column_spanner_outer:first-child { padding-left: 0; } #miuwjxlrnz .gt_column_spanner_outer:last-child { padding-right: 0; } #miuwjxlrnz .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #miuwjxlrnz .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #miuwjxlrnz .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #miuwjxlrnz .gt_from_md > :first-child { margin-top: 0; } #miuwjxlrnz .gt_from_md > :last-child { margin-bottom: 0; } #miuwjxlrnz .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #miuwjxlrnz .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #miuwjxlrnz .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #miuwjxlrnz .gt_row_group_first td { border-top-width: 2px; } #miuwjxlrnz .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #miuwjxlrnz .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #miuwjxlrnz .gt_first_summary_row.thick { border-top-width: 2px; } #miuwjxlrnz .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #miuwjxlrnz .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #miuwjxlrnz .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #miuwjxlrnz .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #miuwjxlrnz .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #miuwjxlrnz .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #miuwjxlrnz .gt_footnote { margin: 0px; font-size: 90%; padding-left: 4px; padding-right: 4px; padding-left: 5px; padding-right: 5px; } #miuwjxlrnz .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #miuwjxlrnz .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #miuwjxlrnz .gt_left { text-align: left; } #miuwjxlrnz .gt_center { text-align: center; } #miuwjxlrnz .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #miuwjxlrnz .gt_font_normal { font-weight: normal; } #miuwjxlrnz .gt_font_bold { font-weight: bold; } #miuwjxlrnz .gt_font_italic { font-style: italic; } #miuwjxlrnz .gt_super { font-size: 65%; } #miuwjxlrnz .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 75%; vertical-align: 0.4em; } #miuwjxlrnz .gt_asterisk { font-size: 100%; vertical-align: 0; } #miuwjxlrnz .gt_slash_mark { font-size: 0.7em; line-height: 0.7em; vertical-align: 0.15em; } #miuwjxlrnz .gt_fraction_numerator { font-size: 0.6em; line-height: 0.6em; vertical-align: 0.45em; } #miuwjxlrnz .gt_fraction_denominator { font-size: 0.6em; line-height: 0.6em; vertical-align: -0.05em; } serie_bac_lib eff_2014 BAC ES 46424 BAC L 31089 BAC professionnel 14527 BAC S 43130 BAC STMG 13959 BAC technologique hors STMG 10637 Total 159766 # ou avec la fonction count() en utilisant l&#39;argument wt= : # PassageL1L2 %&gt;% count(serie_bac_lib, wt = effectif_neobacheliers_passage) # %&gt;% adorn_totals(&quot;row&quot;) %&gt;% gt() Si on veut trier le résultat pour voir la catégorie la plus importante en première, on peut utiliser la fonction arrange(), qui peut être utilisée plus généralement sur des dataframe. # Si on veut la répartition des inscrits 2014-2015 en licence selon la série du # Bac, triée par ordre décroissant : PassageL1L2 %&gt;% group_by(serie_bac_lib) %&gt;% summarise(eff_2014=sum(effectif_neobacheliers_passage, na.rm=T)) %&gt;% arrange(desc(eff_2014)) %&gt;% adorn_totals(&quot;row&quot;) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #nnsvanpbef .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #nnsvanpbef .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #nnsvanpbef .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #nnsvanpbef .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #nnsvanpbef .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #nnsvanpbef .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #nnsvanpbef .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #nnsvanpbef .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #nnsvanpbef .gt_column_spanner_outer:first-child { padding-left: 0; } #nnsvanpbef .gt_column_spanner_outer:last-child { padding-right: 0; } #nnsvanpbef .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #nnsvanpbef .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #nnsvanpbef .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #nnsvanpbef .gt_from_md > :first-child { margin-top: 0; } #nnsvanpbef .gt_from_md > :last-child { margin-bottom: 0; } #nnsvanpbef .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #nnsvanpbef .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #nnsvanpbef .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #nnsvanpbef .gt_row_group_first td { border-top-width: 2px; } #nnsvanpbef .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #nnsvanpbef .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #nnsvanpbef .gt_first_summary_row.thick { border-top-width: 2px; } #nnsvanpbef .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #nnsvanpbef .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #nnsvanpbef .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #nnsvanpbef .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #nnsvanpbef .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #nnsvanpbef .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #nnsvanpbef .gt_footnote { margin: 0px; font-size: 90%; padding-left: 4px; padding-right: 4px; padding-left: 5px; padding-right: 5px; } #nnsvanpbef .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #nnsvanpbef .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #nnsvanpbef .gt_left { text-align: left; } #nnsvanpbef .gt_center { text-align: center; } #nnsvanpbef .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #nnsvanpbef .gt_font_normal { font-weight: normal; } #nnsvanpbef .gt_font_bold { font-weight: bold; } #nnsvanpbef .gt_font_italic { font-style: italic; } #nnsvanpbef .gt_super { font-size: 65%; } #nnsvanpbef .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 75%; vertical-align: 0.4em; } #nnsvanpbef .gt_asterisk { font-size: 100%; vertical-align: 0; } #nnsvanpbef .gt_slash_mark { font-size: 0.7em; line-height: 0.7em; vertical-align: 0.15em; } #nnsvanpbef .gt_fraction_numerator { font-size: 0.6em; line-height: 0.6em; vertical-align: 0.45em; } #nnsvanpbef .gt_fraction_denominator { font-size: 0.6em; line-height: 0.6em; vertical-align: -0.05em; } serie_bac_lib eff_2014 BAC ES 46424 BAC S 43130 BAC L 31089 BAC professionnel 14527 BAC STMG 13959 BAC technologique hors STMG 10637 Total 159766 # Si on veut les effectifs pour chaque situation à la fin de la L1 : PassageL1L2 %&gt;% summarise(passage_l2=sum(passage_en_l2_1_an, na.rm=T), redoublement_l1=sum(redoublement_en_l1, na.rm=T), reorientation_dut_l1=sum(reorientation_en_dut_1_an, na.rm=T)) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #gitegevtvc .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #gitegevtvc .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #gitegevtvc .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #gitegevtvc .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #gitegevtvc .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #gitegevtvc .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #gitegevtvc .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #gitegevtvc .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #gitegevtvc .gt_column_spanner_outer:first-child { padding-left: 0; } #gitegevtvc .gt_column_spanner_outer:last-child { padding-right: 0; } #gitegevtvc .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #gitegevtvc .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #gitegevtvc .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #gitegevtvc .gt_from_md > :first-child { margin-top: 0; } #gitegevtvc .gt_from_md > :last-child { margin-bottom: 0; } #gitegevtvc .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #gitegevtvc .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #gitegevtvc .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #gitegevtvc .gt_row_group_first td { border-top-width: 2px; } #gitegevtvc .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #gitegevtvc .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #gitegevtvc .gt_first_summary_row.thick { border-top-width: 2px; } #gitegevtvc .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #gitegevtvc .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #gitegevtvc .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #gitegevtvc .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #gitegevtvc .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #gitegevtvc .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #gitegevtvc .gt_footnote { margin: 0px; font-size: 90%; padding-left: 4px; padding-right: 4px; padding-left: 5px; padding-right: 5px; } #gitegevtvc .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #gitegevtvc .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #gitegevtvc .gt_left { text-align: left; } #gitegevtvc .gt_center { text-align: center; } #gitegevtvc .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #gitegevtvc .gt_font_normal { font-weight: normal; } #gitegevtvc .gt_font_bold { font-weight: bold; } #gitegevtvc .gt_font_italic { font-style: italic; } #gitegevtvc .gt_super { font-size: 65%; } #gitegevtvc .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 75%; vertical-align: 0.4em; } #gitegevtvc .gt_asterisk { font-size: 100%; vertical-align: 0; } #gitegevtvc .gt_slash_mark { font-size: 0.7em; line-height: 0.7em; vertical-align: 0.15em; } #gitegevtvc .gt_fraction_numerator { font-size: 0.6em; line-height: 0.6em; vertical-align: 0.45em; } #gitegevtvc .gt_fraction_denominator { font-size: 0.6em; line-height: 0.6em; vertical-align: -0.05em; } passage_l2 redoublement_l1 reorientation_dut_l1 65127 46392 2814 3.1 Manipulation des variables qualitatives On peut dabord travailler sur les variables qualitatives. On regarde les différents niveaux pour chacune dentre elles. On peut avoir recours pour cela à la fonction sapply() qui permet dappliquer la fonction indiquée entre parenthèses (ici levels()) à tous les éléments de notre table. PassageL1L2 %&gt;% select_if(is.factor) %&gt;% sapply(levels) $sect_disciplinaire_lib [1] &quot;Administration économique et sociale&quot; [2] &quot;Aménagement&quot; [3] &quot;Archéologie, ethnologie, préhistoire&quot; [4] &quot;Arts&quot; [5] &quot;Chimie&quot; [6] &quot;Cultures et langues régionales&quot; [7] &quot;Électronique, génie électrique&quot; [8] &quot;Formation générale aux métiers de l&#39;ingénieur&quot; [9] &quot;Génie civil&quot; [10] &quot;Génie des procédés&quot; [11] &quot;Géographie&quot; [12] &quot;Histoire&quot; [13] &quot;Informatique&quot; [14] &quot;Langues et littératures anciennes&quot; [15] &quot;Langues et littératures étrangères&quot; [16] &quot;Langues et littératures françaises&quot; [17] &quot;Langues étrangères appliquées&quot; [18] &quot;Mathématique et informatique&quot; [19] &quot;Mathématiques&quot; [20] &quot;Mathématiques appliquées et sciences sociales&quot; [21] &quot;Mécanique, génie mécanique&quot; [22] &quot;Médecine&quot; [23] &quot;Philosophie, épistémologie&quot; [24] &quot;Physique&quot; [25] &quot;Physique et chimie&quot; [26] &quot;Pluridisciplinaire droit, sciences politiques&quot; [27] &quot;Pluridisciplinaire langues&quot; [28] &quot;Pluridisciplinaire lettres, langues, sciences humaines&quot; [29] &quot;Pluridisciplinaire lettres, sciences du langage, arts&quot; [30] &quot;Pluridisciplinaire sciences&quot; [31] &quot;Pluridisciplinaire sciences de la vie, de la santé, de la terre et de l&#39;univers&quot; [32] &quot;Pluridisciplinaire sciences économiques et gestion&quot; [33] &quot;Pluridisciplinaire sciences fondamentales et applications&quot; [34] &quot;Pluridisciplinaire sciences humaines et sociales&quot; [35] &quot;Psychologie&quot; [36] &quot;Sciences de gestion&quot; [37] &quot;Sciences de l&#39;éducation&quot; [38] &quot;Sciences de l&#39;information et la communication&quot; [39] &quot;Sciences de l&#39;univers&quot; [40] &quot;Sciences de la vie&quot; [41] &quot;Sciences du langage, linguistique&quot; [42] &quot;Sciences économiques&quot; [43] &quot;Sciences juridiques&quot; [44] &quot;Sciences politiques&quot; [45] &quot;Sciences religieuses&quot; [46] &quot;Sociologie, démographie&quot; [47] &quot;STAPS&quot; [48] &quot;Technologie et sciences industrielles&quot; $sexe [1] &quot;1&quot; &quot;2&quot; $age_au_bac_lib [1] &quot;A l&#39;heure ou en avance&quot; &quot;En retard d&#39;un an&quot; [3] &quot;En retard de plus d&#39;un an&quot; &quot;Non pris en compte&quot; $serie_bac_lib [1] &quot;BAC ES&quot; &quot;BAC L&quot; [3] &quot;BAC professionnel&quot; &quot;BAC S&quot; [5] &quot;BAC STMG&quot; &quot;BAC technologique hors STMG&quot; $age_au_bac [1] &quot;R0&quot; &quot;R1&quot; &quot;R2&quot; &quot;R4&quot; $gd_discipline [1] &quot;DSA&quot; &quot;LLSH&quot; &quot;SANTE&quot; &quot;SI&quot; &quot;STAPS&quot; $gd_discipline_lib [1] &quot;Droit, gestion, économie, AES&quot; [2] &quot;Lettres, langues et sciences humaines&quot; [3] &quot;Santé&quot; [4] &quot;Sciences et sciences de l&#39;ingénieur&quot; [5] &quot;STAPS&quot; $mention_bac_lib [1] &quot;Assez bien&quot; &quot;Bien&quot; [3] &quot;Inconnue&quot; &quot;Passable deuxième groupe&quot; [5] &quot;Passable premier groupe&quot; &quot;Très bien&quot; $discipline [1] &quot;01&quot; &quot;02&quot; &quot;03&quot; &quot;04&quot; &quot;05&quot; &quot;06&quot; &quot;09&quot; &quot;10&quot; &quot;11&quot; &quot;15&quot; &quot;32&quot; &quot;33&quot; $discipline_lib [1] &quot;Administration économique et sociale&quot; [2] &quot;Droit, sciences politiques&quot; [3] &quot;Langues&quot; [4] &quot;Lettres, sciences du langage, arts&quot; [5] &quot;Médecine&quot; [6] &quot;Pluridisciplinaire lettres, langues, sciences humaines&quot; [7] &quot;Pluridisciplinaire sciences&quot; [8] &quot;Sciences de la vie, de la terre et de l&#39;univers&quot; [9] &quot;Sciences économiques, gestion&quot; [10] &quot;Sciences fondamentales et applications&quot; [11] &quot;Sciences humaines et sociales&quot; [12] &quot;STAPS&quot; $cohorte_passage [1] &quot;2014&quot; $sect_disciplinaire [1] &quot;1&quot; &quot;2&quot; &quot;3&quot; &quot;4&quot; &quot;5&quot; &quot;6&quot; &quot;7&quot; &quot;10&quot; &quot;11&quot; &quot;12&quot; &quot;13&quot; &quot;14&quot; &quot;15&quot; &quot;16&quot; &quot;17&quot; [16] &quot;18&quot; &quot;19&quot; &quot;21&quot; &quot;23&quot; &quot;24&quot; &quot;25&quot; &quot;26&quot; &quot;27&quot; &quot;28&quot; &quot;29&quot; &quot;30&quot; &quot;31&quot; &quot;32&quot; &quot;33&quot; &quot;34&quot; [31] &quot;35&quot; &quot;36&quot; &quot;37&quot; &quot;38&quot; &quot;39&quot; &quot;40&quot; &quot;41&quot; &quot;42&quot; &quot;43&quot; &quot;61&quot; &quot;62&quot; &quot;64&quot; &quot;65&quot; &quot;66&quot; &quot;67&quot; [46] &quot;68&quot; &quot;69&quot; &quot;70&quot; $sexe_lib [1] &quot;Femme&quot; &quot;Homme&quot; $mention_bac [1] &quot;A&quot; &quot;B&quot; &quot;C&quot; &quot;D&quot; &quot;P&quot; &quot;Q&quot; $serie_bac [1] &quot;1&quot; &quot;2&quot; &quot;3&quot; &quot;4&quot; &quot;5&quot; &quot;6&quot; On observe que la première variable affichée sect_disciplinaire_lib a de nombreuses modalités, 48 précisément, on ne sen servira que pour une analyse détaillée ; la variable age_au_bac_lib compte 4 modalités que lon pourrait réduire à 3 en regroupant les deux modalités en retard ; de même pour la variable de serie_bac_lib, on pourrait les regrouper ou créer une autre variable nayant que 3 modalités et qui soit alors plus générale ; idem pour la mention_bac_lib en regroupant les passables. On va faire tout cela en utilisant les fonctions mutate(), case_when() et as.factor(), mais aussi en dernier exemple les fonctions fct_relevel() et fct_collapse() du package forcats : PassageL1L2 &lt;- PassageL1L2 %&gt;% mutate( age_bac = as.factor(case_when(age_au_bac_lib == &quot;A l&#39;heure ou en avance&quot; ~ &quot;A l&#39;heure ou en avance&quot;, age_au_bac_lib %in% c(&quot;En retard d&#39;un an&quot;, &quot;En retard de plus d&#39;un an&quot;) ~ &quot;En retard&quot;, age_au_bac_lib == &quot;Non pris en compte&quot; ~ &quot;Non pris en compte&quot;)), type_bac = as.factor(case_when(serie_bac_lib %in% c(&quot;BAC ES&quot;, &quot;BAC L&quot;, &quot;BAC S&quot;) ~ &quot;Bac général&quot;, serie_bac_lib %in% c(&quot;BAC STMG&quot;, &quot;BAC technologique hors STMG&quot;) ~ &quot;Bac technologique&quot;, serie_bac_lib == &quot;BAC professionnel&quot; ~ &quot;Bac professionnel&quot;)), mention_bac_bis = fct_collapse(mention_bac_lib, &#39;Passable&#39; = c(&quot;Passable deuxième groupe&quot;, &quot;Passable premier groupe&quot;)), mention_bac_bis = fct_relevel(mention_bac_bis, c(&quot;Très bien&quot;, &quot;Bien&quot;, &quot;Assez bien&quot;, &quot;Passable&quot;, &quot;Inconnue&quot;))) En effet, pour travailler sur les variables qualitatives en particulier lorsquelles sont en format factor, le package forcats est très utile. Outre une fonction de transformation dune variable caractère en facteur (as_factor() proche de la version de baseR as.factor() utilisée juste au-dessus), elle contient plein dautres fonctions : fct_collapse() utilisée à la fin de la commande précédente pour renommer ou regrouper des modalités dune variable (au lieu de la double fonction as.factor() et case_when()) ; fct_relevel() utilisée également au-dessus pour trier les modalités comme on le souhaite ; fct_drop() pour enlever des niveaux de facteurs vides/sans effectifs ; fct_explicit_na() pour rendre les NA explicites en créant une modalité (missing) ; fct_reorder() et fct_reorder2() pour réordonner les modalités dune variable, très utile pour les graphiques car utilisables directement dans ggplot() ; fct_lump() pour regrouper les modalités les plus communes (ou au contraire les moins communes) en lui indiquant entre parenthèses le nombre n= de modalités souhaitées ou la proportion minimum souhaitée prop=, et en sélectionnant la variable avec la fonction pull() avant car elle doit être en format vecteur et non data.frame ; ou encore fct_recode() pour changer le niveau des facteurs ; fct_other() ; fct_infreq() et fct_inorder() ; etc. Un bon récapitulatif de ces fonctions est présenté ici. 3.2 Manipulation des variables quantitatives PassageL1L2 %&gt;% select_if(is.numeric) %&gt;% head(4) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #nahweqnehw .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #nahweqnehw .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #nahweqnehw .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #nahweqnehw .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #nahweqnehw .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #nahweqnehw .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #nahweqnehw .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #nahweqnehw .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #nahweqnehw .gt_column_spanner_outer:first-child { padding-left: 0; } #nahweqnehw .gt_column_spanner_outer:last-child { padding-right: 0; } #nahweqnehw .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #nahweqnehw .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #nahweqnehw .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #nahweqnehw .gt_from_md > :first-child { margin-top: 0; } #nahweqnehw .gt_from_md > :last-child { margin-bottom: 0; } #nahweqnehw .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #nahweqnehw .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #nahweqnehw .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #nahweqnehw .gt_row_group_first td { border-top-width: 2px; } #nahweqnehw .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #nahweqnehw .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #nahweqnehw .gt_first_summary_row.thick { border-top-width: 2px; } #nahweqnehw .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #nahweqnehw .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #nahweqnehw .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #nahweqnehw .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #nahweqnehw .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #nahweqnehw .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #nahweqnehw .gt_footnote { margin: 0px; font-size: 90%; padding-left: 4px; padding-right: 4px; padding-left: 5px; padding-right: 5px; } #nahweqnehw .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #nahweqnehw .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #nahweqnehw .gt_left { text-align: left; } #nahweqnehw .gt_center { text-align: center; } #nahweqnehw .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #nahweqnehw .gt_font_normal { font-weight: normal; } #nahweqnehw .gt_font_bold { font-weight: bold; } #nahweqnehw .gt_font_italic { font-style: italic; } #nahweqnehw .gt_super { font-size: 65%; } #nahweqnehw .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 75%; vertical-align: 0.4em; } #nahweqnehw .gt_asterisk { font-size: 100%; vertical-align: 0; } #nahweqnehw .gt_slash_mark { font-size: 0.7em; line-height: 0.7em; vertical-align: 0.15em; } #nahweqnehw .gt_fraction_numerator { font-size: 0.6em; line-height: 0.6em; vertical-align: 0.45em; } #nahweqnehw .gt_fraction_denominator { font-size: 0.6em; line-height: 0.6em; vertical-align: -0.05em; } passage_en_l2_2_ans effectif_neobacheliers_passage passage_en_l2_1_2_ans reorientation_en_dut reorientation_en_dut_1_an redoublement_en_l1 passage_en_l2_1_an reorientation_en_dut_2_ans 0 1 0 0 0 0 0 0 0 10 0 1 1 4 0 0 1 3 3 0 0 1 2 0 NA NA NA NA NA NA NA NA Nous avons 8 variables numériques : notre variable clé effectif_neobacheliers_passage, 3 variables renseignant de lannée de passage en L2 - passage_en_l2_1_an, passage_en_l2_1_2_ans, passage_en_l2_2_ans, 1 variable de redoublement_en_l1, et de nouveau 3 variables renseignant la réorientation en DUT selon lannée - reorientation_en_dut, reorientation_en_dut_1_an, reorientation_en_dut_2_ans. On voit par ailleurs quil y a des valeurs manquantes pour ces variables (présence de modalités NA). 3.2.1 Détecter et visualiser les valeurs manquantes Même si linformation nous avait été donnée par la fonction summary(), on peut également compter le nombre de valeurs manquantes NA pour chacune des variables avec la fonction colSums(), cela est plus synthétique que summary() qui nous donne dautres informations par ailleurs : colSums(is.na(PassageL1L2)) passage_en_l2_2_ans effectif_neobacheliers_passage 959 959 sect_disciplinaire_lib sexe 0 0 age_au_bac_lib passage_en_l2_1_2_ans 0 959 serie_bac_lib age_au_bac 0 0 gd_discipline gd_discipline_lib 0 0 mention_bac_lib discipline 0 0 reorientation_en_dut discipline_lib 959 0 reorientation_en_dut_1_an redoublement_en_l1 959 959 passage_en_l2_1_an cohorte_passage 959 0 reorientation_en_dut_2_ans sect_disciplinaire 959 0 sexe_lib mention_bac 0 0 serie_bac age_bac 0 0 type_bac mention_bac_bis 0 0 # ou en langage tidyverse sur les seules variables numériques : # PassageL1L2 %&gt;% filter_if(is.numeric) %&gt;% summarise_all(funs(sum(is.na(.)))) #Pour les avoir en proportion et arrondies à 2 chiffres après la virgule : round(colMeans(is.na(PassageL1L2)*100), 2) passage_en_l2_2_ans effectif_neobacheliers_passage 17.41 17.41 sect_disciplinaire_lib sexe 0.00 0.00 age_au_bac_lib passage_en_l2_1_2_ans 0.00 17.41 serie_bac_lib age_au_bac 0.00 0.00 gd_discipline gd_discipline_lib 0.00 0.00 mention_bac_lib discipline 0.00 0.00 reorientation_en_dut discipline_lib 17.41 0.00 reorientation_en_dut_1_an redoublement_en_l1 17.41 17.41 passage_en_l2_1_an cohorte_passage 17.41 0.00 reorientation_en_dut_2_ans sect_disciplinaire 17.41 0.00 sexe_lib mention_bac 0.00 0.00 serie_bac age_bac 0.00 0.00 type_bac mention_bac_bis 0.00 0.00 Différents packages existent pour détecter et visualiser les données manquantes. Lun dentre eux est le package naniar : quelques fonctions permettent dabord de décrire la base selon ses valeurs manquantes. library(naniar) # ci-dessous : nombre de cellules du tableau ou de n_ij d&#39;une matrice # qui correspondent à des valeurs manquantes : n_miss(PassageL1L2) [1] 7672 # pour les avoir en proportion (déjà en %, sinon utiliser `prop_miss(PassageL1L2)`) pct_miss(PassageL1L2) [1] 5.357243 # ci-dessous : nombre de cellules du tableau ou de n_ij d&#39;une matrice # qui correspondent à des valeurs renseignées : n_complete(PassageL1L2) [1] 135536 #en proportion pct_complete(PassageL1L2) [1] 94.64276 On peut ensuite visualiser le nombre de valeurs manquantes par variable, avec la fonction gg_miss_var(). # 1er type de visualisation des valeurs manquantes PassageL1L2 %&gt;% gg_miss_var() On peut également demander dans gg_miss_var() à ce que les valeurs soient en pourcentage, avec largument show_pct=TRUE. On peut aussi réaliser des graphiques montrant le nombre de valeurs manquantes pour lensemble des variables numériques de la base, en fonction dune autre variable de nature factor, avec largument fct= dans gg_miss_fct(). Cela est intéressant pour voir si certaines valeurs manquantes des variables se retrouvent davantage dans des modalités précises dune autre variable. Par exemple, ici, selon la série au bac : PassageL1L2 %&gt;% select(where(is.numeric), serie_bac_lib) %&gt;% gg_miss_fct(fct = serie_bac_lib) On voit que les valeurs manquantes sont plus nombreuses en proportion pour la modalité BAC L et sont moins nombreuses dans la modalité BAC S ; elles ne se distribuent ainsi pas de manière uniforme selon la variable de série du bac, en revanche comme on lavait vu les proportions sont les mêmes quelle que soit la valeur manquante Plus généralement, la fonction gg_miss_upset() de ce package permet de visualiser des dépendances entre les valeurs manquantes des variables ; mais ici cela na pas grand intérêt en réalité car les valeurs manquantes sont présentes pour toutes les variables numériques aux mêmes cellules Voici le code néanmoins : PassageL1L2 %&gt;% select_if(is.numeric) %&gt;% gg_miss_upset() Toujours pour information, une autre fonction pour visualiser des combinaisons entre des variables comportant des valeurs manquantes est aggr() du package VIM. De même, voici le code : library(VIM) PassageL1L2 %&gt;% select_if(is.numeric) %&gt;% aggr(sortVar=TRUE, only.miss = TRUE) Enfin, il est possible dappliquer la fonction geom_miss_point() à un ggplot, dans ce cas les valeurs manquantes de la ou des variables sont remplacées par des valeurs 10% plus basses que la valeur minimum observée des variables, et cela afin de les visualiser. Il existe bien sûr bien dautres packages, comme funModeling, Amelia et sa fonction missmap(), ou encore visdat et sa fonction vis_miss(), etc. Dautres packages comme VIM ou MICE permettent non seulement de visualiser ces valeurs manquantes mais de leur appliquer des techniques pour les gérer, cest ce que lon va voir maintenant en résumé. 3.2.2 Gérer les valeurs manquantes Il est bien de connaître le nombre et la proportion de valeurs manquantes dans nos données, comment ces dernières se répartissent entre elles, etc., mais il faut aussi comprendre quel impact elles peuvent avoir sur des analyses statistiques, de régressions ou autres algorithmes. Dans une base de données tirée dune enquête, les valeurs manquantes peuvent provenir dune non-réponse de la part de lenquêté (que ce soit un individu ou une entreprise), cette non-réponse pouvant être totale (on a aucune donnée pour cet enquêté alors quil fait partie de léchantillon) ou partielle (on a une partie des réponses mais pas à toutes les questions et donc des variables parfois avec des valeurs manquantes) ; ou bien encore elles peuvent être dues à une mauvaise saisie de linformation par lenquêteur. La pondération, si elle est présente dans une enquête, peut permettre de corriger de cette non-réponse totale, voire partielle. Les conséquences des valeurs manquantes dans une base de données dépendent de plusieurs choses : on doit dabord se demander si linformation perdue aurait été pertinente et/ou aurait apporté un élément particulier/supplémentaire. Ensuite, la perte éventuelle dinformation est-elle importante, en nombre/en proportion. Et enfin (et surtout), peut-elle créer un biais lors de lestimation et précision du phénomène que lon souhaite observer, décrire, analyser, etc. Selon limportance de ces conséquences, il faut traiter ces valeurs manquantes, cest-à-dire utiliser une procédure la plus adaptée possible selon le potentiel biais repéré. Traditionnellement dans la littérature, on distingue 3 types de valeurs manquantes : valeur manquante entièrement due au hasard (MCAR pour Missing completely at random) : il ny a pas de lien entre la valeur manquante pour une variable donnée et les autres variables, dit autrement la probabilité pour une variable quelle ait une valeur manquante est constante dans les données, elle ne diffère pas selon dautres caractéristiques des individus ; valeur manquante due au hasard (MAR pour Missing at random) : il y a un lien entre la valeur manquante pour une variable donnée et les valeurs observées dautres variables, cest-à-dire que la probabilité pour une variable quelle ait une valeur manquante dépend dautres variables (mais de leurs valeurs observées), elle ne sera donc pas la même selon les individus ; valeur ne manquant pas au hasard (NMAR pour Non missing at random) : il y a un lien entre la valeur manquante pour une variable et les valeurs manquantes/non observées dautres variables. Ce sont celles qui risquent dentraîner des biais importants si on ne les traite pas. Comment alors les gérer ? En pratique, il est dusage lorsque la proportion de valeurs manquantes ne dépasse pas 5% des données de ne rien faire de particulier ou simplement de les supprimer. Sinon, on essaye dappliquer plusieurs méthodes, simples ou plus complexes. Dans le cas de valeurs manquantes entièrement dues au hasard (MCAR) et/ou dune faible proportion des valeurs manquantes dans le total de la table de données, on peut décider de supprimer toutes les lignes qui contiennent au moins une valeur manquante, afin davoir une table de données complètes, on peut utiliser la fonction na.omit() ou complete.cases(). PassageL1L2_sansNA &lt;- na.omit(PassageL1L2) # OU : # PassageL1L2_sansNA &lt;- PassageL1L2[complete.cases(PassageL1L2), ] # Pour vérification : summary(PassageL1L2_sansNA) passage_en_l2_2_ans effectif_neobacheliers_passage Min. : 0.000 Min. : 1.00 1st Qu.: 0.000 1st Qu.: 2.00 Median : 0.000 Median : 6.00 Mean : 4.316 Mean : 35.12 3rd Qu.: 2.000 3rd Qu.: 23.00 Max. :571.000 Max. :2454.00 sect_disciplinaire_lib sexe Sciences juridiques : 186 1:2264 Langues et littératures étrangères: 170 2:2285 Psychologie : 169 Langues étrangères appliquées : 168 STAPS : 168 Histoire : 167 (Other) :3521 age_au_bac_lib passage_en_l2_1_2_ans A l&#39;heure ou en avance :1750 Min. : 0.00 En retard d&#39;un an :1439 1st Qu.: 1.00 En retard de plus d&#39;un an:1004 Median : 2.00 Non pris en compte : 356 Mean : 18.63 3rd Qu.: 8.00 Max. :1950.00 serie_bac_lib age_au_bac gd_discipline BAC ES : 890 R0:1750 DSA : 927 BAC L : 698 R1:1439 LLSH :2112 BAC professionnel : 356 R2:1004 SANTE: 9 BAC S :1046 R4: 356 SI :1333 BAC STMG : 694 STAPS: 168 BAC technologique hors STMG: 865 gd_discipline_lib mention_bac_lib Droit, gestion, économie, AES : 927 Assez bien : 896 Lettres, langues et sciences humaines:2112 Bien : 670 Santé : 9 Inconnue : 637 Sciences et sciences de l&#39;ingénieur :1333 Passable deuxième groupe: 925 STAPS : 168 Passable premier groupe :1045 Très bien : 376 discipline reorientation_en_dut 06 :1213 Min. : 0.000 15 : 924 1st Qu.: 0.000 04 : 457 Median : 0.000 02 : 398 Mean : 0.805 01 : 371 3rd Qu.: 0.000 05 : 359 Max. :79.000 (Other): 827 discipline_lib reorientation_en_dut_1_an Sciences humaines et sociales :1213 Min. : 0.0000 Sciences fondamentales et applications: 924 1st Qu.: 0.0000 Lettres, sciences du langage, arts : 457 Median : 0.0000 Sciences économiques, gestion : 398 Mean : 0.6186 Droit, sciences politiques : 371 3rd Qu.: 0.0000 Langues : 359 Max. :63.0000 (Other) : 827 redoublement_en_l1 passage_en_l2_1_an cohorte_passage Min. : 0.0 Min. : 0.00 2014:4549 1st Qu.: 0.0 1st Qu.: 0.00 Median : 1.0 Median : 1.00 Mean : 10.2 Mean : 14.32 3rd Qu.: 6.0 3rd Qu.: 6.00 Max. :1019.0 Max. :1494.00 reorientation_en_dut_2_ans sect_disciplinaire sexe_lib mention_bac Min. : 0.0000 36 : 186 Femme:2285 A: 376 1st Qu.: 0.0000 23 : 170 Homme:2264 B: 670 Median : 0.0000 32 : 169 C: 896 Mean : 0.1864 10 : 168 D:1045 3rd Qu.: 0.0000 24 : 168 P: 925 Max. :21.0000 27 : 167 Q: 637 (Other):3521 serie_bac age_bac type_bac 1: 698 A l&#39;heure ou en avance:1750 Bac général :2634 2: 890 En retard :2443 Bac professionnel: 356 3:1046 Non pris en compte : 356 Bac technologique:1559 4: 694 5: 865 6: 356 mention_bac_bis Très bien : 376 Bien : 670 Assez bien: 896 Passable :1970 Inconnue : 637 On se retrouve alors avec une table de 4 549 observations (lignes), on a donc perdu 959 observations, soit 17.41% des observations de la table initiale, ce qui est cohérent avec ce quon avait retiré de notre première analyse de détection des valeurs manquantes. Des techniques dimputation simple peuvent également être utilisées. On peut par exemple remplacer les valeurs manquantes dune variable quantitative par sa moyenne ou sa médiane, pour cela on peut utiliser la fonction replace_na() du package tidyr, ou impute() du package Hmisc, ou encore na.aggregate() du package zoo On donne ainsi une valeur artificielle pour remplacer la valeur manquante. Dans le cas de variables qualitatives, on peut, de même, imputer la modalité dominante (avec la fonction mode() du package Hmisc ; ou avec largument mode= du package zoo). Par exemple, voici les codes pour remplacer les valeurs manquantes de la variable passage_en_l2_2_ans par sa moyenne (ici on ne fait pas tourner ces codes) : PassageL1L2 %&gt;% mutate(passage_en_l2_2_ans_bis = replace_na(passage_en_l2_2_ans, mean(passage_en_l2_2_ans, na.rm=TRUE))) library(Hmisc) PassageL1L2$passage_en_l2_2_ans_bis &lt;- with(PassageL1L2, impute(passage_en_l2_2_ans, mean)) library(zoo) PassageL1L2$passage_en_l2_2_ans_bis &lt;- na.aggregate(PassageL1L2$passage_en_l2_2_ans, FUN = mean) On peut néanmoins réaliser ce type dimputation simple de manière un petit peu plus subtile. Par exemple, la moyenne dune variable peut différer selon dautres variables. Dans ce cas, on va donc remplacer les valeurs manquantes de la variable selon la moyenne associée à chaque modalité de lautre variable en ajoutant un group_by() avant la fonction mutate() si lon utilise la fonction replace_na() par exemple. Si on ne veut pas supprimer ces lignes dobservations et perdre ainsi dautres informations (celles des variables pour lesquelles la valeur était renseignée pour cette même observation), on peut simplement créer une variable indicatrice de valeur manquante, habituellement 9 ou 999 pour des variables quantitatives, ou une modalité Manquant ou Missing pour des variables qualitatives. Plusieurs autres méthodes existent également dans le cas de valeurs manquantes dues au hasard (MAR), en voici la liste pour information et sans prétention dexhaustivité : - analyse pondérée pour des valeurs MAR qui consiste à calculer la probabilité quune observation soit complète et ensuite à affecter à chacune des observations complètes, un poids inversement proportionnel à cette probabilité ; - imputation de la dernière observation pour des données temporelles ; - imputation hot-deck qui consiste à remplacer la valeur manquante par une valeur observée chez un autre individu ayant les mêmes caractéristiques, ou cold-deck (même démarche que précédement, sauf que la valeur imputée vient dune autre source) ; - imputation par le plus proche voisin en utilisant une fonction de distance basée sur plusieurs autres variables/caractéristiques de lindividu ; - imputation par un modèle de régression où lon va remplacer la valeur manquante par une valeur prédite obtenue par régression sur données complètes de la variable comportant des valeurs manquantes. Il y a aussi des techniques plus complextes dimputation multiple qui consiste à créer plusieurs valeurs possibles pour une valeur manquante dune variable, cela peut être adaptée là aussi lorsque les valeurs manquantes sont dues au hasard (MAR). Vous trouverez de multiples ressources sur internet dans des ouvrages libres daccès, ou vous pouvez aller voir un des chapitres de louvrage principal support du cours (Husson, 2018), avec des exemples dutilisation. 3.2.3 Détecter et visualiser les valeurs aberrantes Pour cela, on va utiliser une autre base, téléchargée sur opendatasoft à partir de la fonction créée lors de la séance 1 ou 2) de M. Grasland. Cette base dont le nom est aides-entreprises-covid-19-france renseigne du nombre daides financières et de leur montant accordées aux entreprises françaises durant la crise du covid_19, selon notamment le secteur dactivité et la localisation géographique. # Rappel fonction (soit vous l&#39;avez encore dans votre environnement, soit # vous l&#39;avez sauvegardé et dans ce cas il faut l&#39;appeler, soit vous devez # refaire tourner les lignes de codes suivantes...) get_data &lt;- function(idtab, rows, start) { url &lt;- paste0(&quot;https://public.opendatasoft.com/api/records/1.0/search/?dataset=&quot;,idtab,&quot;&amp;q=&amp;rows=&quot;,rows,&quot;&amp;start=&quot;,start,sep=&quot;&quot;) x &lt;- GET(url) y &lt;- fromJSON(rawToChar((x$content))) don &lt;- y$records$fields return(don) } dt_aidesCovid &lt;- get_data(idtab = &quot;aides-entreprises-covid-19-france&quot;, rows=2000, start=0) dt_aidesCovid %&gt;% glimpse() Rows: 1,680 Columns: 13 $ reg_code &lt;int&gt; 84, 84, 84, 84, 84, 84, 27, 27, 27, 53, 53, 24~ $ geo_point_2d &lt;list&gt; &lt;45.263906, 5.573978&gt;, &lt;45.728000, 4.164813&gt;,~ $ naf_section_name &lt;chr&gt; &quot;Arts, spectacles et activités récréatives&quot;, &quot;~ $ nombre_entreprises &lt;int&gt; 1980, 3034, 2188, 6577, 3350, 6772, 61, 45, 23~ $ plan &lt;chr&gt; &quot;Fonds de solidarité&quot;, &quot;Fonds de solidarité&quot;, ~ $ financial_support_count &lt;int&gt; 15958, 8936, 21447, 19967, 18693, 16910, 366, ~ $ reg_name &lt;chr&gt; &quot;Auvergne-Rhône-Alpes&quot;, &quot;Auvergne-Rhône-Alpes&quot;~ $ naf_section_code &lt;chr&gt; &quot;R&quot;, &quot;F&quot;, &quot;I&quot;, &quot;F&quot;, &quot;N&quot;, &quot;Q&quot;, &quot;J&quot;, &quot;K&quot;, &quot;L&quot;, &quot;~ $ total_meuros &lt;dbl&gt; 53.696626, 13.922570, 111.923817, 33.039981, 8~ $ dep_name &lt;chr&gt; &quot;Isère&quot;, &quot;Loire&quot;, &quot;Loire&quot;, &quot;Rhône&quot;, &quot;Rhône&quot;, &quot;~ $ iso3_code &lt;chr&gt; &quot;FXX&quot;, &quot;FXX&quot;, &quot;FXX&quot;, &quot;FXX&quot;, &quot;FXX&quot;, &quot;FXX&quot;, &quot;FXX~ $ dep_code &lt;chr&gt; &quot;38&quot;, &quot;42&quot;, &quot;42&quot;, &quot;69&quot;, &quot;69&quot;, &quot;69&quot;, &quot;58&quot;, &quot;89&quot;~ $ total &lt;dbl&gt; 53696626, 13922570, 111923817, 33039981, 83094~ Comme la base précédente, ces données sont micro-agrégées, mais de manière plus simple : ici une observation est juste le croisement dun secteur et dun département, il faut donc sommer les variables pour avoir une idée des montants. La fonction fmt_number() ajoutée à la fin du code ci-dessous permet simplement davoir une séparation visuelle (un blanc ici, le format chez les anglo-saxons est une virgule) par milliers, étant donné ici que nous avons des montants très importants ! dt_aidesCovid %&gt;% summarise(total_aides=sum(total), total_aides_meuros=sum(total_meuros), nb_totales_aides=sum(financial_support_count), nb_totales_entre=sum(nombre_entreprises)) %&gt;% gt() %&gt;% fmt_number(columns = c(&quot;total_aides&quot;, &quot;total_aides_meuros&quot;, &quot;nb_totales_aides&quot;, &quot;nb_totales_entre&quot;), sep_mark = &quot; &quot;, decimals = 0) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #tmtcwxqzkb .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #tmtcwxqzkb .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #tmtcwxqzkb .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #tmtcwxqzkb .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #tmtcwxqzkb .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #tmtcwxqzkb .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #tmtcwxqzkb .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #tmtcwxqzkb .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #tmtcwxqzkb .gt_column_spanner_outer:first-child { padding-left: 0; } #tmtcwxqzkb .gt_column_spanner_outer:last-child { padding-right: 0; } #tmtcwxqzkb .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #tmtcwxqzkb .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #tmtcwxqzkb .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #tmtcwxqzkb .gt_from_md > :first-child { margin-top: 0; } #tmtcwxqzkb .gt_from_md > :last-child { margin-bottom: 0; } #tmtcwxqzkb .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #tmtcwxqzkb .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #tmtcwxqzkb .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #tmtcwxqzkb .gt_row_group_first td { border-top-width: 2px; } #tmtcwxqzkb .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #tmtcwxqzkb .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #tmtcwxqzkb .gt_first_summary_row.thick { border-top-width: 2px; } #tmtcwxqzkb .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #tmtcwxqzkb .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #tmtcwxqzkb .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #tmtcwxqzkb .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #tmtcwxqzkb .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #tmtcwxqzkb .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #tmtcwxqzkb .gt_footnote { margin: 0px; font-size: 90%; padding-left: 4px; padding-right: 4px; padding-left: 5px; padding-right: 5px; } #tmtcwxqzkb .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #tmtcwxqzkb .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #tmtcwxqzkb .gt_left { text-align: left; } #tmtcwxqzkb .gt_center { text-align: center; } #tmtcwxqzkb .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #tmtcwxqzkb .gt_font_normal { font-weight: normal; } #tmtcwxqzkb .gt_font_bold { font-weight: bold; } #tmtcwxqzkb .gt_font_italic { font-style: italic; } #tmtcwxqzkb .gt_super { font-size: 65%; } #tmtcwxqzkb .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 75%; vertical-align: 0.4em; } #tmtcwxqzkb .gt_asterisk { font-size: 100%; vertical-align: 0; } #tmtcwxqzkb .gt_slash_mark { font-size: 0.7em; line-height: 0.7em; vertical-align: 0.15em; } #tmtcwxqzkb .gt_fraction_numerator { font-size: 0.6em; line-height: 0.6em; vertical-align: 0.45em; } #tmtcwxqzkb .gt_fraction_denominator { font-size: 0.6em; line-height: 0.6em; vertical-align: -0.05em; } total_aides total_aides_meuros nb_totales_aides nb_totales_entre 35 374 043 233 35 374 10 522 071 2 016 042 On veut plus précisément étudier dans cette sous-section les possibles valeurs aberrantes. On peut alors sortir les valeurs maximum pour chacune de ces variables. dt_aidesCovid %&gt;% summarise(aides_max=max(total), aides_meuros_max=max(total_meuros), nb_max_aides=max(financial_support_count), nb_max_entre=max(nombre_entreprises)) %&gt;% gt() %&gt;% fmt_number(columns = 1:4, sep_mark = &quot; &quot;, decimals = 0) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #iuwbduyrbe .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #iuwbduyrbe .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #iuwbduyrbe .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #iuwbduyrbe .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #iuwbduyrbe .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #iuwbduyrbe .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #iuwbduyrbe .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #iuwbduyrbe .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #iuwbduyrbe .gt_column_spanner_outer:first-child { padding-left: 0; } #iuwbduyrbe .gt_column_spanner_outer:last-child { padding-right: 0; } #iuwbduyrbe .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #iuwbduyrbe .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #iuwbduyrbe .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #iuwbduyrbe .gt_from_md > :first-child { margin-top: 0; } #iuwbduyrbe .gt_from_md > :last-child { margin-bottom: 0; } #iuwbduyrbe .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #iuwbduyrbe .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #iuwbduyrbe .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #iuwbduyrbe .gt_row_group_first td { border-top-width: 2px; } #iuwbduyrbe .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #iuwbduyrbe .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #iuwbduyrbe .gt_first_summary_row.thick { border-top-width: 2px; } #iuwbduyrbe .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #iuwbduyrbe .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #iuwbduyrbe .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #iuwbduyrbe .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #iuwbduyrbe .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #iuwbduyrbe .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #iuwbduyrbe .gt_footnote { margin: 0px; font-size: 90%; padding-left: 4px; padding-right: 4px; padding-left: 5px; padding-right: 5px; } #iuwbduyrbe .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #iuwbduyrbe .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #iuwbduyrbe .gt_left { text-align: left; } #iuwbduyrbe .gt_center { text-align: center; } #iuwbduyrbe .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #iuwbduyrbe .gt_font_normal { font-weight: normal; } #iuwbduyrbe .gt_font_bold { font-weight: bold; } #iuwbduyrbe .gt_font_italic { font-style: italic; } #iuwbduyrbe .gt_super { font-size: 65%; } #iuwbduyrbe .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 75%; vertical-align: 0.4em; } #iuwbduyrbe .gt_asterisk { font-size: 100%; vertical-align: 0; } #iuwbduyrbe .gt_slash_mark { font-size: 0.7em; line-height: 0.7em; vertical-align: 0.15em; } #iuwbduyrbe .gt_fraction_numerator { font-size: 0.6em; line-height: 0.6em; vertical-align: 0.45em; } #iuwbduyrbe .gt_fraction_denominator { font-size: 0.6em; line-height: 0.6em; vertical-align: -0.05em; } aides_max aides_meuros_max nb_max_aides nb_max_entre 1 642 006 748 1 642 183 615 35 374 Ou faire quelques graphs sur la variable du montant total des aides en milliers deuros total_meuros pour mieux visualiser de possibles valeurs aberrantes, de manière générale avec un histogramme, ou ventilées par région avec des boîtes à moustache : dt_aidesCovid %&gt;% ggplot() + aes(x=total_meuros) + geom_histogram(bins=150) dt_aidesCovid %&gt;% ggplot() + aes(x = reg_name, y = total_meuros) + geom_boxplot() + coord_flip() On voit en effet quelques points qui semblent des valeurs aberrantes ou outliers ; parfois, cest à tel point quon narrive même pas à distinguer les différentes valeurs de la distribution marquées par le Boxplot et par conséquent les boxplot sont ramassées. Pour rappel, dans un boxplot, par défaut un point est affiché comme aberrant sil est en dehors de lintervalle suivant : \\(I=[Q_{1}1.5×IQR ; Q_{3}+1.5×IQR]\\), IQR étant lintervalle interquartile donc la différence entre Q1 et Q3. Mais sagit-il de vraies valeurs aberrantes ? Combien dobservations concernent-elles ? La fonction boxplot.stats() permet de récupérer les valeurs des observations indiquées comme aberrantes, comme cela on peut créer ensuite une variable indiquant si oui ou non lobservation a une valeur aberrante. Faisons-cela pour la variable total_meuros par exemple. # On récupère les valeurs de la partie &#39;out&#39; des sorties de la fonction # &#39;boxplot.stats&#39;, qui correspondent aux valeurs de tout point de données # qui se situe au-delàdes extrêmes de la boxplot val_outliers &lt;- boxplot.stats(dt_aidesCovid$total_meuros)$out # On crée une variable dans notre table d&#39;&quot;identification&quot; de ces outliers # avec comme modalité intiale/par défaut &quot;Faux&quot; dt_aidesCovid$total_meuros_outliers &lt;- &quot;Faux&quot; # On lui indique la modalité &quot;vraie&quot; si l&#39;observation a une valeur &quot;outliers&quot; # pour cette variable dt_aidesCovid$total_meuros_outliers[dt_aidesCovid$total_meuros %in% c(val_outliers)] &lt;- &quot;Vrai&quot; # Puis on regarde la répartition avec la fonction `tabyl()` du package `janitor()` dt_aidesCovid %&gt;% tabyl(total_meuros_outliers) %&gt;% adorn_pct_formatting() %&gt;% adorn_totals(&quot;row&quot;) # A tibble: 3 x 3 total_meuros_outliers n percent &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; 1 Faux 1484 88.3% 2 Vrai 196 11.7% 3 Total 1680 - On y lit que pour cette variable, il y aurait près de 11,6% de valeurs aberrantes telles quindiquées par le boxplot, cela fait beaucoup ! On peut regarder plus précisément à quelles observations elles correspondent et à quel montant. dt_aidesCovid %&gt;% filter(total_meuros_outliers==&#39;Vrai&#39;) %&gt;% select(total_meuros, naf_section_name, dep_name) %&gt;% arrange(total_meuros) %&gt;% head(10) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #neoundeogw .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #neoundeogw .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #neoundeogw .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #neoundeogw .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #neoundeogw .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #neoundeogw .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #neoundeogw .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #neoundeogw .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #neoundeogw .gt_column_spanner_outer:first-child { padding-left: 0; } #neoundeogw .gt_column_spanner_outer:last-child { padding-right: 0; } #neoundeogw .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #neoundeogw .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #neoundeogw .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #neoundeogw .gt_from_md > :first-child { margin-top: 0; } #neoundeogw .gt_from_md > :last-child { margin-bottom: 0; } #neoundeogw .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #neoundeogw .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #neoundeogw .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #neoundeogw .gt_row_group_first td { border-top-width: 2px; } #neoundeogw .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #neoundeogw .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #neoundeogw .gt_first_summary_row.thick { border-top-width: 2px; } #neoundeogw .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #neoundeogw .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #neoundeogw .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #neoundeogw .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #neoundeogw .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #neoundeogw .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #neoundeogw .gt_footnote { margin: 0px; font-size: 90%; padding-left: 4px; padding-right: 4px; padding-left: 5px; padding-right: 5px; } #neoundeogw .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #neoundeogw .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #neoundeogw .gt_left { text-align: left; } #neoundeogw .gt_center { text-align: center; } #neoundeogw .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #neoundeogw .gt_font_normal { font-weight: normal; } #neoundeogw .gt_font_bold { font-weight: bold; } #neoundeogw .gt_font_italic { font-style: italic; } #neoundeogw .gt_super { font-size: 65%; } #neoundeogw .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 75%; vertical-align: 0.4em; } #neoundeogw .gt_asterisk { font-size: 100%; vertical-align: 0; } #neoundeogw .gt_slash_mark { font-size: 0.7em; line-height: 0.7em; vertical-align: 0.15em; } #neoundeogw .gt_fraction_numerator { font-size: 0.6em; line-height: 0.6em; vertical-align: 0.45em; } #neoundeogw .gt_fraction_denominator { font-size: 0.6em; line-height: 0.6em; vertical-align: -0.05em; } total_meuros naf_section_name dep_name 41.39726 Transports et entreposage Nord 41.54758 Commerce Finistère 41.63946 Hébergement et restauration Martinique 41.70506 Activités spécialisées, scientifiques et techniques Bas-Rhin 41.74365 Hébergement et restauration Aube 42.43167 Hébergement et restauration Lot 42.45356 Hébergement et restauration Eure-et-Loir 42.89902 Hébergement et restauration Corrèze 43.24990 Hébergement et restauration Haute-Loire 43.32271 Commerce Morbihan OK on voit donc que cette procédure attribue des valeurs aberrantes pour des valeurs au-dessus de 41.39726 et donc à des observations qui seraient intéressants néanmoins à conserver ; attention par conséquent à identifier les valeurs dites aberrantes, éventuellement avec plusieurs méthodes (cf. ci-dessous) et surtout à les comprendre, il ne sagit pas juste de les identifier pour les exclure ensuite des analyses. Il existe en effet bien dautres méthodes (méthode basée sur les percentiles ; méthode de Hampel), ainsi que des tests : par exemple, le package outliers vous permet de tester si une valeur (max ou min) est bien une valeur aberrante avec la fonction grubbs.test() (attention bis : à utiliser avec grande précaution et beaucoup de parcimonie), ou avec le package EnvStats et la fonction rosnerTest() pour détecter plusieurs outliers à la fois. Pour gérer ces variables aberrantes, on peut les supprimer bien sûr si lon est sûr que la valeur de la variable nest pas normale, par exemple si on a une variable de salaire avec des modalités inférieures à 0, oui dans ce cas ce sont des mauvais outliers (et dailleurs peut-être même pas identifiés comme tel statistiquement) et on peut les supprimer ; de même pour des variables de résultats économiques, on va souvent élaguer la distribution en retirant les 1% (par exemple) du bas et du haut de la distribution pour supprimer des potentiels outliers. Sinon, on les isole en créant une variable dichotomique 0/1 ou Faux/Vrai ; ou on crée une variable qualitative avec plusieurs catégories. Dans les graphiques, en particulier les boîtes à moustache, on peut les supprimer du graphique et mettre une échelle plus réduite pour que celui-ci soit plus lisible, mais en précisant bien dans la légende que certaines valeurs ne sont pas visibles sur le graphique car retirées. dt_aidesCovid %&gt;% ggplot() + aes(x = reg_name, y = total_meuros) + geom_boxplot(outlier.shape = NA) + coord_flip(ylim = c(0,175)) + labs(title = &quot;Distribution des aides financières en millions d&#39;euros, selon la région&quot;, y=&quot;&quot;, x=&quot;Région&quot;, caption=&quot;Rq : les valeurs au-delà de 175 millions d&#39;euros ne sont pas affichées sur le graphique.&quot;) + theme(plot.caption = element_text(hjust=0)) 3.2.4 Découper en classes une variable quantitative On peut enfin découper en classes une variable quantitative et en faire donc une variable qualitative. On utilise pour cela la fonction cut() du langage de base de R. On peut par exemple découper la variable selon les principaux indicateurs de la distribution. dt_aidesCovid %&gt;% get_summary_stats(total_meuros) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #tzlknqcqjh .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #tzlknqcqjh .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #tzlknqcqjh .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #tzlknqcqjh .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #tzlknqcqjh .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #tzlknqcqjh .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #tzlknqcqjh .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #tzlknqcqjh .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #tzlknqcqjh .gt_column_spanner_outer:first-child { padding-left: 0; } #tzlknqcqjh .gt_column_spanner_outer:last-child { padding-right: 0; } #tzlknqcqjh .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #tzlknqcqjh .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #tzlknqcqjh .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #tzlknqcqjh .gt_from_md > :first-child { margin-top: 0; } #tzlknqcqjh .gt_from_md > :last-child { margin-bottom: 0; } #tzlknqcqjh .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #tzlknqcqjh .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #tzlknqcqjh .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #tzlknqcqjh .gt_row_group_first td { border-top-width: 2px; } #tzlknqcqjh .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #tzlknqcqjh .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #tzlknqcqjh .gt_first_summary_row.thick { border-top-width: 2px; } #tzlknqcqjh .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #tzlknqcqjh .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #tzlknqcqjh .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #tzlknqcqjh .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #tzlknqcqjh .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #tzlknqcqjh .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #tzlknqcqjh .gt_footnote { margin: 0px; font-size: 90%; padding-left: 4px; padding-right: 4px; padding-left: 5px; padding-right: 5px; } #tzlknqcqjh .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #tzlknqcqjh .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #tzlknqcqjh .gt_left { text-align: left; } #tzlknqcqjh .gt_center { text-align: center; } #tzlknqcqjh .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #tzlknqcqjh .gt_font_normal { font-weight: normal; } #tzlknqcqjh .gt_font_bold { font-weight: bold; } #tzlknqcqjh .gt_font_italic { font-style: italic; } #tzlknqcqjh .gt_super { font-size: 65%; } #tzlknqcqjh .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 75%; vertical-align: 0.4em; } #tzlknqcqjh .gt_asterisk { font-size: 100%; vertical-align: 0; } #tzlknqcqjh .gt_slash_mark { font-size: 0.7em; line-height: 0.7em; vertical-align: 0.15em; } #tzlknqcqjh .gt_fraction_numerator { font-size: 0.6em; line-height: 0.6em; vertical-align: 0.45em; } #tzlknqcqjh .gt_fraction_denominator { font-size: 0.6em; line-height: 0.6em; vertical-align: -0.05em; } variable n min max median q1 q3 iqr mad mean sd se ci total_meuros 1680 0.006 1642.007 5.989 1.828 17.643 15.815 7.54 21.056 60.355 1.473 2.888 dt_aidesCovid$total_meuros_cat &lt;- cut(dt_aidesCovid$total_meuros, breaks = c(0, quantile(dt_aidesCovid$total_meuros,0.25), mean(dt_aidesCovid$total_meuros), max(dt_aidesCovid$total_meuros))) dt_aidesCovid %&gt;% tabyl(total_meuros_cat) %&gt;% adorn_pct_formatting() %&gt;% adorn_totals(&quot;row&quot;) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #bgcfhbezqt .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #bgcfhbezqt .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #bgcfhbezqt .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #bgcfhbezqt .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #bgcfhbezqt .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #bgcfhbezqt .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #bgcfhbezqt .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #bgcfhbezqt .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #bgcfhbezqt .gt_column_spanner_outer:first-child { padding-left: 0; } #bgcfhbezqt .gt_column_spanner_outer:last-child { padding-right: 0; } #bgcfhbezqt .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #bgcfhbezqt .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #bgcfhbezqt .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #bgcfhbezqt .gt_from_md > :first-child { margin-top: 0; } #bgcfhbezqt .gt_from_md > :last-child { margin-bottom: 0; } #bgcfhbezqt .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #bgcfhbezqt .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #bgcfhbezqt .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #bgcfhbezqt .gt_row_group_first td { border-top-width: 2px; } #bgcfhbezqt .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #bgcfhbezqt .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #bgcfhbezqt .gt_first_summary_row.thick { border-top-width: 2px; } #bgcfhbezqt .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #bgcfhbezqt .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #bgcfhbezqt .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #bgcfhbezqt .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #bgcfhbezqt .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #bgcfhbezqt .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #bgcfhbezqt .gt_footnote { margin: 0px; font-size: 90%; padding-left: 4px; padding-right: 4px; padding-left: 5px; padding-right: 5px; } #bgcfhbezqt .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #bgcfhbezqt .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #bgcfhbezqt .gt_left { text-align: left; } #bgcfhbezqt .gt_center { text-align: center; } #bgcfhbezqt .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #bgcfhbezqt .gt_font_normal { font-weight: normal; } #bgcfhbezqt .gt_font_bold { font-weight: bold; } #bgcfhbezqt .gt_font_italic { font-style: italic; } #bgcfhbezqt .gt_super { font-size: 65%; } #bgcfhbezqt .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 75%; vertical-align: 0.4em; } #bgcfhbezqt .gt_asterisk { font-size: 100%; vertical-align: 0; } #bgcfhbezqt .gt_slash_mark { font-size: 0.7em; line-height: 0.7em; vertical-align: 0.15em; } #bgcfhbezqt .gt_fraction_numerator { font-size: 0.6em; line-height: 0.6em; vertical-align: 0.45em; } #bgcfhbezqt .gt_fraction_denominator { font-size: 0.6em; line-height: 0.6em; vertical-align: -0.05em; } total_meuros_cat n percent (0,1.83] 420 25.0% (1.83,21.1] 901 53.6% (21.1,1.64e+03] 359 21.4% Total 1680 - On a une classe majoritaire (du Q1 à la moyenne), mais cela nous permet de distinguer 2 classes pour lesquelles le montant des aides financières est très faible ou au contraire très élevé. À noter que si la variable quantitative en question a des valeurs manquantes, il faudra utiliser la fonction fancycut() ou wafflecut() du package fancycut, linconvénient est que cela nous oblige à indiquer les valeurs des différents indicateurs de la distribution. Pour trouver le même résultat que précédemment, le code serait alors le suivant : library(fancycut) dt_aidesCovid$total_meuros_cat1 &lt;- fancycut(dt_aidesCovid$total_meuros, &#39;1&#39;=&#39;(0,1.83]&#39;, &#39;2&#39;=&#39;(1.83,21]&#39;, &#39;3&#39;=&#39;(21,1.64e+03]&#39;, na.bucket=&#39;Manquant&#39;) "],["04-Enregistrement-tables-donnees.html", "Section 4 Enregistrement des tables", " Section 4 Enregistrement des tables Et voilà, on a bien trituré ces deux bases de données, maintenant on peut les enregistrer dans notre projet pour pouvoir les réutiliser lors de la prochaine séance. # On enregistre la table de données pour l&#39;utiliser ultérieurement saveRDS(object = PassageL1L2, file = &quot;data/PassageL1L2.Rdata&quot;) saveRDS(object = dt_aidesCovid, file = &quot;data/dt_aidesCovid.Rdata&quot;) "],["05-Questions-fouille-donnees.html", "Section 5 Quelles questions intéressantes pour une fouille de données sur cette base ? 5.1 Caractéristiques de la cohorte des bacheliers 2014 inscrits en première année de licence en 2014-2015", " Section 5 Quelles questions intéressantes pour une fouille de données sur cette base ? Quelles sont les questions intéressantes que lon peut se poser ? Quest-ce quon va pouvoir mettre en évidence à partir de ces données ? Une première chose peut être de comprendre qui sont de manière générale les étudiants de 1ère année daprès cette base de données. On peut donc dabord décrire la cohorte des bacheliers 2014 inscrits en 2014-2015 en première année de licence (hors licence professionnelle) dans lenseignement supérieur public, selon plusieurs caractéristiques : - la série du bac, - la mention, - lâge au bac, - le sexe, et - enfin le type de licence dans lequel il sont inscrits. Ensuite, on peut vouloir comprendre le passage de la L1 à la L2 : qui passe en L2 en 1 an, qui redouble, qui se réoriente en DUT. On recherche donc les profils de chacun de ces groupes pour analyser leurs spécificités. On peut à ce stade émettre quelques hypothèses : lune toute simple est quil y aura plus de mentions au bac dans le groupe du passage en L2 en un an, alors quil y aurait plus de résultats passables au bac dans le groupe des redoublements ; de même pour lâge au bac, on peut sattendre à avoir plus détudiants en retard au bac qui redouble. Concernant la série du bac et la mention, on peut sattendre à ne pas avoir de spécificités précises dans lensemble des licences mais au sein de certaines licences selon le domaine. Cest lune des dernières questions que lon peut en effet se poser : existe-t-il des différences entre les disciplines des licences, par exemple certaines séries au bac sont-elles corrélées à davantage déchec - cest-à-dire de redoublement - à la fin de la L1 dans des disciplines particulières ? Le fait dêtre une femme est-il corrélé à une meilleure réussite en L1 (passage en L2 en un an) dans certaines displines ? Etc. Avant cela, si vous avez commencé un nouveau script Rmarkdown, vous devez importer la table PassageL1L2 enregistrée précédemment dans le dossier Data de votre projet. Pour cela, il faut utiliser la fonction readRDS(), comme ci-dessous : PassageL1L2 &lt;- readRDS(file =&quot;Data/PassageL1L2.Rdata&quot;) 5.1 Caractéristiques de la cohorte des bacheliers 2014 inscrits en première année de licence en 2014-2015 On peut créer un tableau synthétique avec les statistiques descriptives sur les variables énumérées plus haut, et ensuite réaliser des graphiques pour mieux visualiser les résultats. Un type de tableau peut être en colonnes les effectifs et les pourcentages et en ligne les différentes variables. Encore une fois, étant donné la nature micro-agrégée de nos données, nous ne pouvons pas réaliser directement ses tableaux avec les fonctions traditionnelles types freq() du package questionR ou tabyl() du package janitor ; il faut créer nos propres sommes et pourcentages. Cela peut être fait avec la fonction summarise() précédée dun group_by() pour spécifier la variable correspondant à la caractéristique qui nous intéresse, mais aussi plus rapidement avec la fonction count() en inscrivant en premier argument la variable (ou caractéristique) et en argument wt= (qui est normalement la variable de pondération) notre variable de sommation. On crée ensuite les pourcentages dans une fonction mutate() ; et on peut ajouter éventuellement une ligne totale (argument row) avec la fonction adorn_totals(\"row\"). Enfin, par défaut la fonction count() crée une variable n, on peut alors renommer celle-ci en Effectif. PassageL1L2 %&gt;% count(type_bac, wt=effectif_neobacheliers_passage) %&gt;% mutate(Pourcentage=prop.table(n)*100, Pourcentage=round(Pourcentage, 1)) %&gt;% adorn_totals(&quot;row&quot;) %&gt;% rename(Effectif=n) %&gt;% gt() %&gt;% fmt_number(columns = 2, sep_mark = &quot; &quot;, decimals = 0) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #tmavsrlszu .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #tmavsrlszu .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #tmavsrlszu .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #tmavsrlszu .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #tmavsrlszu .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #tmavsrlszu .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #tmavsrlszu .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #tmavsrlszu .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #tmavsrlszu .gt_column_spanner_outer:first-child { padding-left: 0; } #tmavsrlszu .gt_column_spanner_outer:last-child { padding-right: 0; } #tmavsrlszu .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #tmavsrlszu .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #tmavsrlszu .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #tmavsrlszu .gt_from_md > :first-child { margin-top: 0; } #tmavsrlszu .gt_from_md > :last-child { margin-bottom: 0; } #tmavsrlszu .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #tmavsrlszu .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #tmavsrlszu .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #tmavsrlszu .gt_row_group_first td { border-top-width: 2px; } #tmavsrlszu .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #tmavsrlszu .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #tmavsrlszu .gt_first_summary_row.thick { border-top-width: 2px; } #tmavsrlszu .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #tmavsrlszu .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #tmavsrlszu .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #tmavsrlszu .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #tmavsrlszu .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #tmavsrlszu .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #tmavsrlszu .gt_footnote { margin: 0px; font-size: 90%; padding-left: 4px; padding-right: 4px; padding-left: 5px; padding-right: 5px; } #tmavsrlszu .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #tmavsrlszu .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #tmavsrlszu .gt_left { text-align: left; } #tmavsrlszu .gt_center { text-align: center; } #tmavsrlszu .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #tmavsrlszu .gt_font_normal { font-weight: normal; } #tmavsrlszu .gt_font_bold { font-weight: bold; } #tmavsrlszu .gt_font_italic { font-style: italic; } #tmavsrlszu .gt_super { font-size: 65%; } #tmavsrlszu .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 75%; vertical-align: 0.4em; } #tmavsrlszu .gt_asterisk { font-size: 100%; vertical-align: 0; } #tmavsrlszu .gt_slash_mark { font-size: 0.7em; line-height: 0.7em; vertical-align: 0.15em; } #tmavsrlszu .gt_fraction_numerator { font-size: 0.6em; line-height: 0.6em; vertical-align: 0.45em; } #tmavsrlszu .gt_fraction_denominator { font-size: 0.6em; line-height: 0.6em; vertical-align: -0.05em; } type_bac Effectif Pourcentage Bac général 120 643 75.5 Bac professionnel 14 527 9.1 Bac technologique 24 596 15.4 Total 159 766 100.0 Il va donc falloir faire cela pour chacune de nos variables/caractéristiques ; pour ensuite les rassembler dans un unique tableau que lon pourra construire et mettre en forme avec le package gt. Pour éviter de faire du copié-collé du code précédent, et donc pour systématiser nos procédures, on peut construire une fonction. Il nous faut donc faire un petit détour sur la manière de construire une fonction dans R. "],["06-Fonctions.html", "Section 6 Systématiser nos procédures : construire une fonction", " Section 6 Systématiser nos procédures : construire une fonction Pour ré-utiliser un code de façon plus automatique, créer des fonctions est très utile (et on peut même les stocker dans un fichier .r pour les réutiliser plus tard pour une autre étude). Lidée est quà partir dun bloc dinstructions ou de lignes de codes, on lintègre dans une fonction qui portera un nom et qui pourra être appliquée sur les paramètres que lon veut (table/objet différent, variables différentes) et qui nous retournera une valeur en sortie (quil faut préciser donc). Par exemple : # Exemple fonction avec 3 arguments nom_fonction &lt;- function(data, var1, var2) { expression... # Ce que la fonction fait return() # Optionnel, mais la plupart du temps utilisé (!), # pour sortir le résultat de la fonction } # L&#39;appel de la fonction devra ainsi préciser la table de données sur laquelle # l&#39;appliquer et les autres arguments : nom_fonction(data = nom_de_ma_table , var1 = nom_de_ma_variable1, var2 = nom_de_ma_variable2) # De plus, on pourra créer un nouvel objet (ici &quot;tab_var&quot;) pour stocker la table # qui est en valeur de sortie de la fonction : tab_var &lt;- nom_fonction(data = nom_de_ma_table , var1 = nom_de_ma_variable1, var2 = nom_de_ma_variable2) Les arguments doivent donc être précisés en entrée de notre fonction, si on ne les précise pas cela nous retournera une erreur à moins que lon ait spécifié des valeurs par défaut (ce qui peut être utile si on utilise souvent les mêmes paramètres, cest-à-dire la même base de données par exemple) ; il peut y avoir autant darguments que lon souhaite. Si lon utilise le langage tidyverse, il faut connaître quelques petits trucs pour écrire une fonction. Le schéma suivant réalisé par Julien Barnier du CNRS nous sera très utile. Source : Julien Barnier, https://twitter.com/lapply/status/1493908215796535296?s=20&amp;t=p4aYIEV4GsGS3TGftPa0Nw. Vous trouverez également des informations utiles ici ou là. On peut dabord créer une fonction reprenant le code précédent pour la construction de tableau. On lappelle TAB, et on lui donne comme arguments data, , var1 et var_sum. Largument  est pratique si lon ne sait pas combien il y aura de variable(s) dans la fonction à laquelle elle sapplique, cest-à-dire autant 0 variable, 1 variable ou plus dune variable ; mais elle peut-être aussi dangereuse si on ne se souvient plus quon la créée et/ou si on ne fait pas attention à bien remplir les autres arguments avec les noms correspondants. Ici, elle nous est utile pour introduire la fonction group_by() quon nutilisera pas au début de lanalyse, mais après si. Ensuite, dans le langage tidyverse au sein dune fonction, il faut appeler une variable avec des doubles-accolades. Si lon utilisait une fonction summarise(), une autre subtilité à connaître dans une fonction avec langage tidyverse, est par exemple que cette syntaxe ne sera pas reconnue summarise({{ nom_var }} = mean({{ var }}, na.rm=TRUE, car il faut indiquer non pas un = mais un := pour que la fonction puisse être lue lorsque dun côté le nom donné à la variable est de type caractère ou string. Enfin, il ne faut pas oublier de retourner un objet en sortie avec return(). Essayez donc de créer une fonction tableau(), reprenant le code de la section précédente et ci-dessous pour information : PassageL1L2 %&gt;% count(type_bac, wt=effectif_neobacheliers_passage) %&gt;% mutate(Pourcentage=prop.table(n)*100, Pourcentage=round(Pourcentage, 1)) %&gt;% adorn_totals(&quot;row&quot;) %&gt;% rename(Effectif=n) tableau &lt;- function(data, ..., var1, var_sum){ tab_1 &lt;- data %&gt;% group_by(...) %&gt;% count({{ var1 }}, wt={{ var_sum }}) %&gt;% mutate(Pourcentage=prop.table(n)*100, Pourcentage=round(Pourcentage, 1)) %&gt;% rename(Effectif=n, Variable={{ var1 }}) return(tab_1) } Essayez décrire une seconde fonction somme() permettant de systématiser le code suivant (utilisé dans la séance 1), en ajoutant une fonction de filtre qui peut être utile si lon veut sintéresser aux effectifs pour une discipline en particulier par exemple mais sans que lon sache si on lutilisera toujours : PassageL1L2 %&gt;% summarise(&#39;Nombre total de bacheliers inscrits en 2014-2015 en licence&#39; = sum(effectif_neobacheliers_passage, na.rm=TRUE)) somme &lt;- function(data, ..., nom_var, var1){ som_1 &lt;- data %&gt;% filter(...) %&gt;% summarise({{nom_var}}:=sum({{var1}}, na.rm=T)) return(som_1) } "],["07-Analyse-descriptive.html", "Section 7 (reprise de l)Analyse descriptive 7.1 Caractéristiques de la cohorte des bacheliers 2014 inscrits en première année de licence en 2014-2015 7.2 Profils des étudiants selon leur situation en fin de L1", " Section 7 (reprise de l)Analyse descriptive 7.1 Caractéristiques de la cohorte des bacheliers 2014 inscrits en première année de licence en 2014-2015 On peut maintenant revenir sur notre analyse et utiliser la fonction tableau() créée pour construire notre tableau final qui va se composer : de 3 colonnes : une colonne nommée Variable, une deuxième colonne nommée Effectif et une troisième colonne nommée Pourcentagee; et de plusieurs lignes qui correspondront aux modalités des variables suivantes : type_bac, serie_bac_lib, mention_bac_bis, age_bac, sexe_lib,gd_discipline_lib ; et une ligne Total à la fin. Il faut donc utiliser notre foncion tableau() pour ces 6 variables, sauver les tableaux créer dans des objets, penser pour le dernier tableau à ajouter la ligne Total, et ensuite concaténer ces 6 tableaux à laide de la fonction rbind(). Essayons donc !! tab1 &lt;- tableau(PassageL1L2, var1=type_bac, var_sum=effectif_neobacheliers_passage) tab2 &lt;- tableau(PassageL1L2, var1=serie_bac_lib, var_sum=effectif_neobacheliers_passage) tab3 &lt;- tableau(PassageL1L2, var1=mention_bac_bis, var_sum=effectif_neobacheliers_passage) tab4 &lt;- tableau(PassageL1L2, var1=age_bac, var_sum=effectif_neobacheliers_passage) tab5 &lt;- tableau(PassageL1L2, var1=sexe_lib, var_sum=effectif_neobacheliers_passage) # vu que c&#39;est notre dernière table, on va ajouter le total: tab6 &lt;- tableau(PassageL1L2, var1=gd_discipline_lib, var_sum=effectif_neobacheliers_passage) %&gt;% adorn_totals(&quot;row&quot;) Tabfinal &lt;- rbind(tab1, tab2, tab3, tab4, tab5, tab6) Tabfinal %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #oiuxgygcdn .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #oiuxgygcdn .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #oiuxgygcdn .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #oiuxgygcdn .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #oiuxgygcdn .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #oiuxgygcdn .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #oiuxgygcdn .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #oiuxgygcdn .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #oiuxgygcdn .gt_column_spanner_outer:first-child { padding-left: 0; } #oiuxgygcdn .gt_column_spanner_outer:last-child { padding-right: 0; } #oiuxgygcdn .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #oiuxgygcdn .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #oiuxgygcdn .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #oiuxgygcdn .gt_from_md > :first-child { margin-top: 0; } #oiuxgygcdn .gt_from_md > :last-child { margin-bottom: 0; } #oiuxgygcdn .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #oiuxgygcdn .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #oiuxgygcdn .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #oiuxgygcdn .gt_row_group_first td { border-top-width: 2px; } #oiuxgygcdn .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #oiuxgygcdn .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #oiuxgygcdn .gt_first_summary_row.thick { border-top-width: 2px; } #oiuxgygcdn .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #oiuxgygcdn .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #oiuxgygcdn .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #oiuxgygcdn .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #oiuxgygcdn .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #oiuxgygcdn .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #oiuxgygcdn .gt_footnote { margin: 0px; font-size: 90%; padding-left: 4px; padding-right: 4px; padding-left: 5px; padding-right: 5px; } #oiuxgygcdn .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #oiuxgygcdn .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #oiuxgygcdn .gt_left { text-align: left; } #oiuxgygcdn .gt_center { text-align: center; } #oiuxgygcdn .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #oiuxgygcdn .gt_font_normal { font-weight: normal; } #oiuxgygcdn .gt_font_bold { font-weight: bold; } #oiuxgygcdn .gt_font_italic { font-style: italic; } #oiuxgygcdn .gt_super { font-size: 65%; } #oiuxgygcdn .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 75%; vertical-align: 0.4em; } #oiuxgygcdn .gt_asterisk { font-size: 100%; vertical-align: 0; } #oiuxgygcdn .gt_slash_mark { font-size: 0.7em; line-height: 0.7em; vertical-align: 0.15em; } #oiuxgygcdn .gt_fraction_numerator { font-size: 0.6em; line-height: 0.6em; vertical-align: 0.45em; } #oiuxgygcdn .gt_fraction_denominator { font-size: 0.6em; line-height: 0.6em; vertical-align: -0.05em; } Variable Effectif Pourcentage Bac général 120643 75.5 Bac professionnel 14527 9.1 Bac technologique 24596 15.4 BAC ES 46424 29.1 BAC L 31089 19.5 BAC professionnel 14527 9.1 BAC S 43130 27.0 BAC STMG 13959 8.7 BAC technologique hors STMG 10637 6.7 Très bien 7253 4.5 Bien 19856 12.4 Assez bien 44192 27.7 Passable 83503 52.3 Inconnue 4962 3.1 A l'heure ou en avance 107393 67.2 En retard 37846 23.7 Non pris en compte 14527 9.1 Femme 94697 59.3 Homme 65069 40.7 Droit, gestion, économie, AES 53076 33.2 Lettres, langues et sciences humaines 65514 41.0 Santé 21 0.0 Sciences et sciences de l'ingénieur 26971 16.9 STAPS 14184 8.9 Total 159766 100.0 Cela nous donne donc un tableau quil reste à mettre en forme pour quil puisse être utilisé dans un rapport. Comme évoqué précédemment, jutilise pour cela le package gt, mais dautres packages existent Vous trouverez des informations sur les diverses options de ce package ici ou un tutoriel là ou encore là. On peut ainsi ajouter des sections pour bien distinguer nos différentes variables avec tab_row_group() , puis ajouter un titre avec tab_header(title=)n et une légende avec tab_source_note() , ou encore mettre en gras certains noms du tableau avec cols_label(), etc. Au final, cela donne ça : Tabfinal %&gt;% gt() %&gt;% fmt_number(columns = &quot;Effectif&quot;, sep_mark = &quot; &quot;, decimals = 0) %&gt;% tab_row_group(label=md(&quot;**Total**&quot;), rows=25) %&gt;% tab_row_group(label=md(&quot;**Discipline de la licence suivie**&quot;), rows=20:24) %&gt;% tab_row_group(label=md(&quot;**Sexe**&quot;), rows=18:19) %&gt;% tab_row_group(label=md(&quot;**Âge au bac**&quot;), rows=15:17) %&gt;% tab_row_group(label=md(&quot;**Mention au bac**&quot;), rows=10:14) %&gt;% tab_row_group(label=md(&quot;**Série plus précise du bac**&quot;), rows=4:9) %&gt;% tab_row_group(label=md(&quot;**Type de bac**&quot;), rows=1:3) %&gt;% tab_header(title=md(&#39;**Caractéristiques des bacheliers 2014 inscrits en 2014-2015 en première année de licence**&#39;)) %&gt;% cols_label(Variable = &quot; &quot;, Effectif = md(&#39;**Effectif**&#39;), Pourcentage = md(&#39;**Pourcentage**&#39;)) %&gt;% tab_source_note(source_note = html(&quot;Source : Open-data ESR.&lt;br&gt;Champ : Bacheliers 2014 inscrits en première année de licence (hors licence professionnelle) dans lenseignement supérieur public en 2014-2015.&lt;br&gt;Traitement des données : Camillle Signoretto&quot;)) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #jpmsaqctey .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #jpmsaqctey .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #jpmsaqctey .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #jpmsaqctey .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #jpmsaqctey .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #jpmsaqctey .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #jpmsaqctey .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #jpmsaqctey .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #jpmsaqctey .gt_column_spanner_outer:first-child { padding-left: 0; } #jpmsaqctey .gt_column_spanner_outer:last-child { padding-right: 0; } #jpmsaqctey .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #jpmsaqctey .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #jpmsaqctey .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #jpmsaqctey .gt_from_md > :first-child { margin-top: 0; } #jpmsaqctey .gt_from_md > :last-child { margin-bottom: 0; } #jpmsaqctey .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #jpmsaqctey .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #jpmsaqctey .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #jpmsaqctey .gt_row_group_first td { border-top-width: 2px; } #jpmsaqctey .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #jpmsaqctey .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #jpmsaqctey .gt_first_summary_row.thick { border-top-width: 2px; } #jpmsaqctey .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #jpmsaqctey .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #jpmsaqctey .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #jpmsaqctey .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #jpmsaqctey .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #jpmsaqctey .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #jpmsaqctey .gt_footnote { margin: 0px; font-size: 90%; padding-left: 4px; padding-right: 4px; padding-left: 5px; padding-right: 5px; } #jpmsaqctey .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #jpmsaqctey .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #jpmsaqctey .gt_left { text-align: left; } #jpmsaqctey .gt_center { text-align: center; } #jpmsaqctey .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #jpmsaqctey .gt_font_normal { font-weight: normal; } #jpmsaqctey .gt_font_bold { font-weight: bold; } #jpmsaqctey .gt_font_italic { font-style: italic; } #jpmsaqctey .gt_super { font-size: 65%; } #jpmsaqctey .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 75%; vertical-align: 0.4em; } #jpmsaqctey .gt_asterisk { font-size: 100%; vertical-align: 0; } #jpmsaqctey .gt_slash_mark { font-size: 0.7em; line-height: 0.7em; vertical-align: 0.15em; } #jpmsaqctey .gt_fraction_numerator { font-size: 0.6em; line-height: 0.6em; vertical-align: 0.45em; } #jpmsaqctey .gt_fraction_denominator { font-size: 0.6em; line-height: 0.6em; vertical-align: -0.05em; } Caractéristiques des bacheliers 2014 inscrits en 2014-2015 en première année de licence Effectif Pourcentage Type de bac Bac général 120 643 75.5 Bac professionnel 14 527 9.1 Bac technologique 24 596 15.4 Série plus précise du bac BAC ES 46 424 29.1 BAC L 31 089 19.5 BAC professionnel 14 527 9.1 BAC S 43 130 27.0 BAC STMG 13 959 8.7 BAC technologique hors STMG 10 637 6.7 Mention au bac Très bien 7 253 4.5 Bien 19 856 12.4 Assez bien 44 192 27.7 Passable 83 503 52.3 Inconnue 4 962 3.1 Âge au bac A l'heure ou en avance 107 393 67.2 En retard 37 846 23.7 Non pris en compte 14 527 9.1 Sexe Femme 94 697 59.3 Homme 65 069 40.7 Discipline de la licence suivie Droit, gestion, économie, AES 53 076 33.2 Lettres, langues et sciences humaines 65 514 41.0 Santé 21 0.0 Sciences et sciences de l'ingénieur 26 971 16.9 STAPS 14 184 8.9 Total Total 159 766 100.0 Source : Open-data ESR.Champ : Bacheliers 2014 inscrits en première année de licence (hors licence professionnelle) dans lenseignement supérieur public en 2014-2015.Traitement des données : Camillle Signoretto Les tableaux construits précédemment vont nous servir à réaliser des graphiques, qui sont davantage utilisés dans des présentations pour mieux visualiser les résultats quun tableau de statistiques descriptives. Les possibilités offertes par le package ggplot sont importantes et cest pour cela que nous lutiliserons en priorité. Par exemple, pour le type de bac, on peut construire un graphique en bâtons avec geom_bar() : en présentant les colonnes de manière décroissante selon le pourcentage, en utilisant fct_reorder() (vue précédemment) dans une étape préalable mutate() ; en ajoutant des couleurs aux barres pour éviter le gris par défaut un peu terne, en utilisant par exemple la librairie RColorBrewer (vous pouvez regarder le type de palettes, notamment celles compatibles pour les daltoniens) et la palette Set2 ; il faut pour cela indiquer loption fill=, puis scale_fill_brewer(); en ajoutant la valeur des pourcentages à lintérieur des colonnes, avec lajout de geom_text() ; et enfin, en ajoutant un titre, et en supprimant la légende qui nest pas utile ici (car option fill= dans laes). Faisons-le pas à pas : essayez dabord de créer un graphique en bâtons simple sur la variable du type de bac inclus dans le tableau 1 (ici dénommé tab_1), en faisant en sorte que la couleur diffère selon les modalités de la variable (vous pouvez pour cela utiliser les différentes palettes de couleur du package RColorBrewer que vous devez installer avant). # install.packages(&quot;RColorBrewer&quot;) # library(RColorBrewer) # Pour voir le type de palettes disponibles dans ce package : # display.brewer.all(colorblindFriendly = TRUE) Vous devez avoir ce graphique (ici la palette Set2 a été utilisée) : Warning: package &#39;RColorBrewer&#39; was built under R version 4.0.3 library(RColorBrewer) tab1 %&gt;% ggplot() + aes(x=Variable, y=Pourcentage, fill=Variable) + geom_bar(stat = &quot;identity&quot;) + scale_fill_brewer(palette = &quot;Set2&quot;) Ajoutez maintenant au milieu de chaque barre le chiffre du pourcentage correspondant, avec lajout de la fonction geom_text(), comme ci-dessous : tab1 %&gt;% ggplot() + aes(x=Variable, y=Pourcentage, fill=Variable) + geom_bar(stat = &quot;identity&quot;) + geom_text(aes(y=Pourcentage, label=Pourcentage), position = position_stack(vjust = 0.5), color=&quot;gray15&quot;) + scale_fill_brewer(palette = &quot;Set2&quot;) Ensuite, mettez dans lordre les barres de façon décroissante selon la valeur du pourcentage, pour avoir le graphique ci-dessous : tab1 %&gt;% mutate(Variable = fct_reorder(Variable, desc(Pourcentage))) %&gt;% ggplot() + aes(x=Variable, y=Pourcentage, fill=Variable) + geom_bar(stat = &quot;identity&quot;) + geom_text(aes(y=Pourcentage, label=Pourcentage), position = position_stack(vjust = 0.5), color=&quot;gray15&quot;) + scale_fill_brewer(palette = &quot;Set2&quot;) Enfin, ajoutez un titre, supprimez la légende qui est redondante ici avec les modalités inscrites sur laxe des abscisses, ainsi que les noms des axes. Cela donne alors ce graphique final : tab1 %&gt;% mutate(Variable = fct_reorder(Variable, desc(Pourcentage))) %&gt;% ggplot() + aes(x=Variable, y=Pourcentage, fill=Variable) + geom_bar(stat = &quot;identity&quot;) + geom_text(aes(y=Pourcentage, label=Pourcentage), position = position_stack(vjust = 0.5), color=&quot;gray15&quot;) + scale_fill_brewer(palette = &quot;Set2&quot;) + labs(title=&quot;Répartition des bacheliers inscrits en première année de licence en 2014-2015, selon le type de bac&quot;, x=&quot; &quot;, y=&quot; &quot;) + theme(legend.position = &quot;none&quot;, plot.title = element_text(size = 14)) Pour commentaire, on peut pointer le faire que la majorité des inscrits en licences universitaires ont effectué un Bac général (environ les 3/4), alors quau contraire seul 9% des inscrits ont un Bac professionnel. Ainsi, les Bacs professionnels qui représentent environ 30% des bacheliers une année donnée sont largement sous-représentés à luniversité, contrairement aux Bacs généraux qui sont sur-représentés puisquils comptent pour pratiquement 50% des bacheliers. Avec des variables qualitatives, il ny a pas grande diversité de graphiques possibles ! On pourrait aussi représenter lanalyse de la variable précédente par un graphique waffle avec le package waffle, comme ci-dessous. Mais cela sera plus pertinent quand on comparera plusieurs situations (cf. infra). #install.packages(&quot;waffle&quot;) library(waffle) tab1 %&gt;% mutate(Variable = fct_relevel(Variable, &quot;Bac technologique&quot;, &quot;Bac professionnel&quot;,&quot;Bac général&quot;)) %&gt;% ggplot() + aes(values = Pourcentage, fill = Variable) + geom_waffle(n_rows=10, flip = TRUE, make_proportional = TRUE) + labs(title=&quot;Répartition des bacheliers inscrits en première année de licence en 2014-2015, selon le type de bac&quot;) Là aussi, on peut réitérer ce type de graphique pour lensemble de nos variables ou caractéristiques précédentes, en créant une fonction, pour les regrouper ensuite dans un seul et même graphe. Quelle serait alors cette fonction pour un graphique en bâtons ? bar_graph &lt;- function(data, Titre){ data %&gt;% mutate(Variable = fct_reorder(Variable, desc(Pourcentage))) %&gt;% ggplot() + aes(x=Variable, y=Pourcentage, fill=Variable) + geom_bar(stat = &quot;identity&quot;) + geom_text(aes(y=Pourcentage, label=Pourcentage), position = position_stack(vjust = 0.5), color=&quot;gray15&quot;, size=3) + scale_fill_brewer(palette = &quot;Set2&quot;) + labs(title=Titre, x=&quot; &quot;, y=&quot; &quot;) + theme(legend.position = &quot;none&quot;, plot.title = element_text(size = 11)) } On applique donc cette fonction à nos 6 variables, on sauvegarde chaque graphique, et on les rassemble dans un même graphe avec la librairie pacthwork() (dautres packages existent pour cela comme cowplot()) et on ajoute un titre. bar1 &lt;- bar_graph(tab1, &quot;Selon le type de bac&quot;) + theme(axis.text.x = element_text(angle = 45, hjust=1)) bar2 &lt;- bar_graph(tab2, &quot;Selon la série du bac&quot;) + theme(axis.text.x = element_text(angle = 45, hjust=1)) bar3 &lt;- bar_graph(tab3, &quot;Selon la mention au bac&quot;) + theme(axis.text.x = element_text(angle = 45, hjust=1)) bar4 &lt;- bar_graph(tab4, &quot;Selon l&#39;âge au bac&quot;) + theme(axis.text.x = element_text(angle = 45, hjust=1)) bar5 &lt;- bar_graph(tab5, &quot;Selon le sexe&quot;) bar6 &lt;- tab6 %&gt;% filter(Variable != &quot;Total&quot;) %&gt;% bar_graph(&quot;Selon la discipline de la licence suivie&quot;) + theme(axis.text.x = element_text(angle = 45, hjust=1)) library(patchwork) (bar1 + bar3 + bar5 + bar2 + bar4 + bar6) + plot_annotation(title = &#39;Caractéristiques des bacheliers 2014 inscrits en 2014-2015 en première année de licence&#39;) Ainsi, au-delà du type de bac, on remarque que ce sont les Bacs ES qui sont les plus nombreux en proportion dans les inscrits en licences universitaires en 2014-2015, et les Bacs STMG sont pratiquement aussi nombreux que les Bacs professionnels. Ensuite, on constate que plus dun étudiant sur deux a eu une mention passable au bac, alors que les mentions Bien et Très bien représentent à elles deux presque 17% des étudiants primo-inscrits en 2014-2015. En lien avec la mention, lâge au bac permet de révéler que les 2/3 des étudiants sont à lheure ou en avance, et quand même presqu1/4 sont en retard. On note également quil y a plus de femmes que dhommes parmi ces étudiants, dans une proportion respectivement de 60%-40%. Enfin, 40% des bacheliers 2014 se sont inscrits dans une licence de lettres, langues et sciences humaines, 33% dans une licence de droit, gestion, économie ou AES, 17% dans une licence de sciences et sciences de lingénieur et enfin environ 9% dans une licence de STAPS. On remarque pour cette dernière variable quil ny a quasiment pas dinscrits en licence de santé, par conséquent, on ne représentera plus cette modalité de la variable par la suite. 7.2 Profils des étudiants selon leur situation en fin de L1 On veut maintenant révéler le profil des étudiants selon quils réussisent à passer en L2 en un an, selon quils redoublent, ou encore selon quils se réorientent en DUT, selon les mêmes caractéristiques que précédemment. On va représenter avec un graphique en bâtons la répartition générale pour lensemble de ces étudiants de leur situation en fin de L1 ; à noter quils nous manquent en réalité une information car les 3 situations possibles : passage en L2, redoublement ou encore réorientation, ne donnent pas le total des effectifs néobacheliers inscrits, comme nous lavions remarqué lors de la première séance, on va donc créer ici une modalité inconnue pour avoir une bonne représentation générale. Pour cela, on utilise dabord la fonction summarise() sur ces 3 variables, mais aussi sur les effectifs généraux, pour justement créer dans une seconde étape avec la fonction mutate() une variable Inconnue qui soit la différence entre les effectifs totaux et la somme des effectifs des 3 variables précédentes. Ensuite, comme la sortie des fonctions summarise() nous donne les résultats en lignes, on utilise un pivot_longer() pour mettre sous forme de tableau avec 2 colonnes, la première intitulée Situation_fin_L1 et la seconde Effectif ; et on crée une troisième colonne/variable intitulée pourcentage à laide toujours de mutate(). Enfin, on peut appliquer à ce tableau de contingence la fonction ggplot() pour créer un graphique en bâtons avec comme précédemment sur laxe des abscisses les différentes modalités de la variable Situation_fin_L1 et en ordonnées les pourcentages. Au total, vous devriez avoir ce graphique ci-dessous ! PassageL1L2 %&gt;% summarise(Ensemble=sum(effectif_neobacheliers_passage, na.rm=T), `Passage en L2`=sum(passage_en_l2_1_an, na.rm=T), Redoublement=sum(redoublement_en_l1, na.rm=T), `Reorientation en dut`=sum(reorientation_en_dut_1_an, na.rm=T)) %&gt;% mutate(Inconnue=Ensemble-(`Passage en L2`+Redoublement+`Reorientation en dut`)) %&gt;% select(-&quot;Ensemble&quot;) %&gt;% pivot_longer(cols=1:4, names_to = &quot;Situation_fin_L1&quot;, values_to =&quot;Effectif&quot;) %&gt;% mutate(Pourcentage=Effectif/sum(Effectif)*100, Pourcentage=round(Pourcentage, 1), Situation_fin_L1=fct_relevel(Situation_fin_L1, &quot;Passage en L2&quot;, &quot;Redoublement&quot;, &quot;Inconnue&quot;, &quot;Reorientation en dut&quot;)) %&gt;% ggplot() + aes(x=Situation_fin_L1, y=Pourcentage, fill=Situation_fin_L1) + geom_bar(stat=&quot;identity&quot;) + geom_text(aes(y=Pourcentage, label=Pourcentage), position = position_stack(vjust = 0.5), color=&quot;gray15&quot;, size=3) + scale_fill_brewer(palette = &quot;Set2&quot;) + labs(title=&quot;Situation en fin de L1&quot;, x=&quot; &quot;, y=&quot; &quot;) + theme(legend.position = &quot;none&quot;) Ainsi, de manière générale, environ 41% des néobacheliers inscrits à luniversité en 2014-2015 sont passés en L2, 29% ont redoublé, 28% sont dans une autre situation inconnue et enfin environ 2% se sont réorientés en DUT. On peut maintenant étudier cette situation en fonction des caractéristiques de ces néobacheliers. "],["08-Intro-a-Shiny-theorique.html", "Section 8 Les applications interactives avec Shiny App 8.1 La structure générale dune application Shiny 8.2 La réactivité 8.3 Un exemple avec le code du script par défaut", " Section 8 Les applications interactives avec Shiny App Comme indiqué sur la page officielle de Shiny-RStudio ici, Shiny est un package R qui permet de créer des applications ou des pages web de visualisations interactives de données, directement à partir de R, autremet dit sans connaître nécessairement le langage HTML, Javascript, etc., et donc aussi en pouvant utiliser toutes les fonctions disponibles sous R. En réalité, linterface utilisateur de lapplication Shiny est bien du langage HTML, mais Shiny donne des outils faciles pour lécrire sans avoir à connaître le HTML. Il nous faut dabord installer le package Shiny, puis le charger : #install.packages(&quot;shiny&quot;) library(shiny) Des exemples dapplication Shiny sont données sur la page officielle dans la gallerie ; ou on peut aussi en lancer une directement dans R, avec par exemple le code suivant : # Voici la liste des exemples que vous pouvez spécifier dans la fonction # suivante : &quot;01_hello&quot;, &quot;02_text&quot;, &quot;03_reactivity&quot;, &quot;04_mpg&quot;, # &quot;05_sliders&quot;, &quot;06_tabsets&quot;, &quot;07_widgets&quot;, &quot;08_html&quot;, &quot;09_upload&quot;, # &quot;10_download&quot;, &quot;11_timer&quot; runExample(&quot;01_hello&quot;) Un autre exemple dapplication finale qui comprend un aspect territorial donc avec de jolis cartes est également disponible ici. Enfin, cette introduction sappuie sur dautres ressources externes, pour nen citer quelques uns : - un bon tutoriel ici ; - une introduction claire là. Et vous trouverez sur les 2 liens suivants deux ouvrages en ligne, pour compléter et aller plus loin : the Mastering Shiny ; et the Interactive web-based data visualization with R, plotly, and shiny. 8.1 La structure générale dune application Shiny Lapplication est divisée en 2 sections : linterface utilisateur (ui) et une fonction serveur (server). Lintérêt de Shiny est sa réactivité : quand lutilisateur change un paramètre, tout ce qui dépend de ce paramètre est automatiquement actualisé sur la page. On dit que cest une application server-based, dans la mesure où la construction des graphiques et/ou tableaux affichés (ou tout autre objet) se font sur le serveur, autrement dit sur le RStudio de votre ordinateur. Ainsi, comme on peut le voir sur les exemples cités au-dessus, la structure du code sera toujours la suivante : library(shiny) # Fonction &quot;ui&quot; ui &lt;- fluidPage( ) # Fonction &quot;server&quot; server &lt;- function(input, output) { } # Fonction qui crée l&#39;application Shiny en reprenant les 2 fonctions # principales à noter que comme elles ont le même nom, souvent on ne # précisera pas de nouveau les arguments &quot;ui = &quot; et &quot;server = &quot; shinyApp(ui = ui, server = server) 8.1.1 La partie UI LUI ou interface utilisateur utilise par défaut la fonction fluidPage() qui permet de créer la mise en page de lapplication et qui répondra automatiquement aux changements effectués sur le navigateur par lutilisateur. Cette fonction fluidPage() va contenir des indications comme le titre (avec titlePanel()), éventuellement un sous-titre, etc., ainsi que deux fonctions sidebarLayout() et mainPanel(). Le première comprend la fonction sidebarPanel() qui contient le ou les widgets à partir duquel ou desquels les utilisateurs sélectionneront des valeurs  par défaut est indiqué un sliderInput(). La seconde contient la sortie voulue, cest-à-dire un graphique, un tableau, etc., avec par défaut la fonction plotOutput(), mais elle peut en contenir dautres Les graphiques ou tableaux de ces fonctions ...Ouput() sont ensuite précisées (et construits) dans la partie Server de lapplication Shiny. #library(shiny) # Fonction &quot;ui&quot; ui &lt;- fluidPage( # Titre de l&#39;application titlePanel(&quot;Titre à définir&quot;), # Mise en page de la barre latérale avec les définitions des # entrées et des sorties sidebarLayout( # Panneau latéral pour les entrées sidebarPanel( # Entrée : wigdet choisi, par défaut &quot;sliderInput()&quot; sliderInput( ) ), # Panneau principal pour l&#39;affichage des sorties mainPanel( # Sortie : graphique, tableau, etc. plotOutput(&quot;nom_du_graphe&quot;) ) ) ) # Fonction &quot;server&quot; server &lt;- function(input, output) { } # Fonction qui crée l&#39;application Shiny shinyApp(ui = ui, server = server) La liste des widgets est reproduite ci-dessous avec un tableau et une image récapitulative (disponible directement ici) ; à part les arguments communs inputID() et label(), les autres arguments diffèrent selon le widget, il est donc essentiel dy faire un tour avant den utiliser un si lon ne le connaît pas a priori. Tableau : Fonctions Shiny et widgets associés Fonction Widget sliderInput Barre de défilement actionButton Bouton daction checkboxGroupInput Groupe de cases à cocher checkboxInput Case unique à cocher dateInput calendrier pour sélectionner une ou des dates dateRangeInput Paire de calendriers pour sélectionner une plage de dates numericInput Champ pour saisir des chiffres radioButtons Série de boutons radio selectInput Boîte avec des choix à sélectionner submitButton Bouton de validation fileInput Commande pour télécharger un fichier à partir dun chemin textInput Champ pour saisir du texte helpText Texte daide qui peut être ajouté à un formulaire de saisie Widgets de lapplication Shiny À savoir enfin, on peut également remplacer la fonction sidebarLayout() par une fonction navbarPage() pour permettre plusieurs onglets de navigation sur la même page web (que lon créera avec la fonction tabPanel() à lintérieur de laquelle on retrouvera les fonctions sidebarLayout() et mainPanel()), on y reviendra au cours du semestre 8.1.2 La partie Server Cest la fonction Server qui contient le code principal faisant tourner lapplication web. Elle est définie par la fonction function(input, output){ }. À chaque fonction ...Ouput() dans lui correspond une fonction render...() dans la partie Server. Par exemple, si dans la partie ui, on a définit un histogramme comme ceci dans la fonction : plotOuput(\"distPlot\"), alors dans la partie server, on associera la fonction renderPlot() à output$distPlot. Les fonctions render...() sont celles qui contiennent en effet le code créant, lhistogramme ici, ou tout autre graphique ou tableau, lensemble de lexpression à lintérieur de cette fonction sera contenu dans des accolades {}. #library(shiny) # Fonction &quot;ui&quot; ui &lt;- fluidPage( # Titre de l&#39;application titlePanel(&quot;Titre à définir&quot;), # Mise en page de la barre latérale avec les définitions des # entrées et des sorties sidebarLayout( # Panneau latéral pour les entrées sidebarPanel( # Entrée : wigdet choisi, par défaut &quot;sliderInput()&quot; sliderInput( ) ), # Panneau principal pour l&#39;affichage des sorties mainPanel( # Sortie : graphique, tableau, etc. plotOutput(&quot;nom_du_graphe&quot;) ) ) ) # Fonction &quot;server&quot; server &lt;- function(input, output) { # Reprend la sortie mentionnée plus haut (ici &quot;nom_du_graphe&quot;) output$nom_du_graphe &lt;- renderPlot({ # code de création du graphique, qui sera réactive selon les # valeurs données en entrées (cf. fonction &quot;fluidPage()&quot;) }) } # Fonction qui crée l&#39;application Shiny shinyApp(ui = ui, server = server) Voici les différentes fonctions ...Ouput() créant un objet de sortie : Fonction de sortie Type dobjet créé dataTableOutput Table de données imageOutput Image plotOutput Graphique tableOutput Table textOutput Texte uiOutput HTML brut htmlOutput HTML brut verbatimTextOutput Texte Et les fonctions render...() associées : Fonction de sortie Type dobjet créé renderDataTable Table de données renderImage Image (enregistré comme un lien vers un fichier source) renderPlot Graphique renderTable Table de données, matrices, ou autres structures de type tableau renderText Texte sous forme de chaînes de caractères renderUI objet de balise Shiny ou HTML renderPrint Toute sortie imprimée 8.2 La réactivité Comme dit précédemment, la réactivité est au centre du fonctionnement dune application Shiny. Plusieurs types de réactivité peut être distingués : un premier type de réactivité, le plus simple, à travers les interactions entre les fonctions ui() et server() : comme expliqué au-dessus, cela passe par les input définis dans la partie ui et les output créés dans la partie server ; plus précisément, si on a définit un widget permettant par exemple de choisir une année donnée et quon la appelé annee (avec largument id=\" \"), alors dans la ou les fonctions render...() de la partie server, il faudra renvoyer à cette variable par lindication input$annee. De manière générale, il faudra accoler le nom donné à un input x de cette façon dans le server : input$x. Cela peut être résumé par le schéma suivant, emprunté à lune des sources citées en introduction : Source : https://laderast.github.io/gradual_shiny/introduction.html un deuxième type de réactivité à travers la base de données elle-même, cest-à-dire qui crée un objet réactif (qui sera à la fois une entrée réactive et une sortie réactive) : il faut alors utiliser, par exemple, la fonction reactive({}) (ou son corrolaire eventReactive()) en lappliquant à la base de données initiale et en renvoyant ainsi une nouvelle base, qui sera elle-même une fonction. On peut par exemple appliquer un filtre à notre base de données selon lannée : au lieu alors de préciser input$annee dans la fonction render...() comme mentionné dans le premier type de réactivité, on va en réalité créer une nouvelle base comme ceci : data_reactive &lt;- reactive({ data %&gt;% filter(annee &gt; input$annee)) }) ; puis lappeler ainsi pour créer le graphique : output$nom_du_graphe &lt;- renderPlot({ data_reactive() }), attention donc vous noterez lutilisation des parenthèses après le nouveau nom de la table. De même, cela peut être résumé par le schéma suivant tiré de la même source : Source : https://laderast.github.io/gradual_shiny/app-2-reactives.html un troisième type de réactivité qui crée un contexte réactif, à travers notamment la fonction observe({}) (ou son corrolaire observeEvent()) : cette fonction sera utilisée losque vous souhaitez faire une opération qui dépend de plusieurs autres variables réactives, en particulier si vous souhaitez changer un input qui est dépendant dun autre input, mais sans créer nécessairement doutput. Cela peut être utile si le choix dune variable - les départements dune région par exemple - est conditionnée au choix antérieur de la région en question : dans ce cas, lutilisateur qui choisira une région dans un premier widget ne verra safficher que les départements de cette région dans un second widget et non tous les départements disponibles dans la base de données. En réalité, il y a bien dautres fonctions de réactivité dans Shiny (eventReactive(), observeEvent(), reactiveValues(), isolate(), req()), mais quon ne verra pas nécessairement ensemble cette année. 8.3 Un exemple avec le code du script par défaut Voyons ensemble un premier exemple : dans RStudio, ouvrez un nouveau fichier Shiny Web App que vous intitulez comme vous le souhaitez (attention, pas despace permis entre deux mots par exemple), vous laissez loption Single File et vous lenregistrez de préférence dans votre projet. Un nouveau scrip souvre avec par défaut un code minimal déjà écrit : on retrouve la structure du code présentée juste au-dessus, et à lintérieur de lUI et du Server quelques codes pour avoir un titre, un widget sous forme de slider et un graphique qui sera un histogramme daprès la fonction écrit dans la partie Server. Faisons tourner lapplication avec le bouton en haut à droite Run App pour voir ce que cela donne ! On voit bien les différents éléments correspondants au code écrit dans le script R et on voit bien également que lapplication est interactive puisque si lon modifie le nombre de classes dans la barre slider alors le graphique est modifié simultanément ! "],["09-Intro-a-Shiny-exemples.html", "Section 9 La création dune application Shiny pas à pas avec lune de nos bases de données 9.1 Application vide 9.2 Ajout dun titre et dun widget 9.3 Ajout dun graphique 9.4 Modification du graphique : filtrer selon une variable 9.5 Modification du graphique : selon une variable au choix parmi deux", " Section 9 La création dune application Shiny pas à pas avec lune de nos bases de données On va utiliser la base des aides aux entreprises durant la crise du Covid-19 ; je lavais enregistré précédemment dans le dossier Data du projet correspondant aux deux premières séances de cours et sous le nom dt_aidesCovid.Rdata. Si vous êtes dans le même projet, il faut donc lappeler grâce à la fonction readRDS(). 9.1 Application vide Faisons tourner une application vide et ajoutons au fur et à mesure les éléments qui construirons une vraie application : #library(shiny) # Chargement du fichier final dt_aidesCovid &lt;- readRDS(&quot;data/dt_aidesCovid.RData&quot;) ui &lt;- fluidPage( ) server &lt;- function(input, output) { } shinyApp(ui = ui, server = server) 9.2 Ajout dun titre et dun widget Ajoutons un titre et un widget, par exemple une barre slider : #library(shiny) # Chargement du fichier final dt_aidesCovid &lt;- readRDS(&quot;data/dt_aidesCovid.RData&quot;) # Définition UI et Server de l&#39;application Shiny ui &lt;- fluidPage( # Titre de l&#39;application titlePanel(&quot;Aides aux entreprises durant la crise du Covid-19&quot;), # Définition du Widget - ici un slider en vue de construire un histogramme sidebarLayout( sidebarPanel( sliderInput(inputId = &quot;Classes&quot;, label = &quot;Nombres de classes : &quot;, min = 1, max = 150, value = 50) ), mainPanel( plotOutput(&quot;histPlot&quot;) ) ) ) server &lt;- function(input, output) { } shinyApp(ui = ui, server = server) 9.3 Ajout dun graphique Ajoutons un graphique ; il faut pour cela charger la base de données sur laquelle nous allons travailler : #library(shiny) # Chargement du fichier final dt_aidesCovid &lt;- readRDS(&quot;data/dt_aidesCovid.RData&quot;) # Définition UI et Server de l&#39;application Shiny ui &lt;- fluidPage( # Titre de l&#39;application titlePanel(&quot;Aides aux entreprises durant la crise du Covid-19&quot;), # Définition du Widget - ici un slider en vue de construire un histogramme sidebarLayout( sidebarPanel( sliderInput(inputId = &quot;classes&quot;, label = &quot;Nombres de classes&quot;, min = 1, max = 150, value = 50) ), # Graphe montré à l&#39;utilisateur mainPanel( plotOutput(&quot;histPlot&quot;) ) ) ) server &lt;- function(input, output) { output$histPlot &lt;- renderPlot({ dt_aidesCovid %&gt;% ggplot() + aes(x=total_meuros) + geom_histogram(bins=150) }) } shinyApp(ui = ui, server = server) On a bien maintenant le graphique qui saffiche mais lorsquon change le nombre de classes dans la barre slider, rien ne se passe Cest normal, nous navons pas encore introduit de réactivité dans lapplication. Pour cela, il va falloir modifier le code dans la fonction server et ainsi mettre en lien des informations indiquées dans la fonction UI avec les arguments utilisés dans le graphique développé dans la fonction server. Pour linstant, on veut pouvoir modifier le nombre de classes, largument pour cela dans la fonction geom_histogram() dans le ggplot() est bins= ; on a indiqué 150 jusquici ; maintenant il faut lui indiquer le nombre que lutilisateur va lui-même indiquer dans la barre slider ; cela se fait avec largument input$..., les  devant être remplacés par le nom que lon a donné à linputId dans le sliderInput(), donc ici classes. # Chargement du fichier final dt_aidesCovid &lt;- readRDS(&quot;data/dt_aidesCovid.RData&quot;) # Définition UI et Server de l&#39;application Shiny ui &lt;- fluidPage( # Titre de l&#39;application titlePanel(&quot;Aides aux entreprises durant la crise du Covid-19&quot;), # Définition du Widget - ici un slider en vue de construire un histogramme sidebarLayout( sidebarPanel( sliderInput(inputId = &quot;classes&quot;, label = &quot;Nombres de classes&quot;, min = 1, max = 150, value = 50) ), # Graphe montré à l&#39;utilisateur mainPanel( plotOutput(&quot;histPlot&quot;) ) ) ) server &lt;- function(input, output) { output$histPlot &lt;- renderPlot({ dt_aidesCovid %&gt;% ggplot() + aes(x=total_meuros) + geom_histogram(bins=input$classes) }) } shinyApp(ui = ui, server = server) Ça y est, maintenant lorsquon modifie le curseur dans la barre slider, le graphique change ! 9.4 Modification du graphique : filtrer selon une variable Essayons ensuite dajouter un filtre sur la région pour navoir que la distribution du montant total des aides financières distribuées aux entreprises pour une région donnée. De même, on peut procéder par étapes : présentons dabord le graphique pour la seule région Île-de-France : # Chargement du fichier final dt_aidesCovid &lt;- readRDS(&quot;data/dt_aidesCovid.RData&quot;) # Définition UI et Server de l&#39;application Shiny ui &lt;- fluidPage( # Titre de l&#39;application titlePanel(&quot;Aides aux entreprises durant la crise du Covid-19&quot;), # Définition du Widget - ici un slider en vue de construire un histogramme sidebarLayout( sidebarPanel( sliderInput(inputId = &quot;classes&quot;, label = &quot;Nombres de classes&quot;, min = 1, max = 150, value = 50) ), # Graphe montré à l&#39;utilisateur mainPanel( plotOutput(&quot;histPlot&quot;) ) ) ) server &lt;- function(input, output) { output$histPlot &lt;- renderPlot({ dt_aidesCovid %&gt;% filter(reg_name == &quot;Île-de-France&quot;) %&gt;% ggplot() + aes(x=total_meuros) + geom_histogram(bins=input$classes) }) } shinyApp(ui = ui, server = server) Il suffit en effet dajouter un filter(reg_name == \"Île-de-France\") dans notre code. Ensuite, donnons la possibilité à lutilisateur de choisir la région quil veut : il faut pour cela ajouter un widget dans la fonction UI ; comme on ne veut laisser quun choix de région à lutilisateur, on peut utiliser un Radio buttons ; on regarde alors quels sont les arguments de la fonction radioButtons(), on voit quil faut indiquer les choix possibles donc ici la liste des régions dans choices = et indiquer une valeur par défaut dans selected = ; pour cela, on peut indiquer la variable correspondante choices = dt_aidesCovid$reg_name, mais attention si on laisse comme ceci, on va avoir une répétition de noms des régions comme lorsquon ouvre la table, ce quon veut cest uniquement les niveaux deux possibilités alors : soit créer avant lappel de la fonction UI une variable avec simplement les niveaux de cette variable ; soit passer par la fonction unique() dans largument donné. # Chargement du fichier final dt_aidesCovid &lt;- readRDS(&quot;data/dt_aidesCovid.RData&quot;) # Quelques modifications du fichier initial de données # dt_aidesCovid &lt;- dt_aidesCovid %&gt;% mutate(reg_name=as.factor(reg_name)) # nom_regions &lt;- levels(dt_aidesCovid$reg_name) # Définition UI et Server de l&#39;application Shiny ui &lt;- fluidPage( # Titre de l&#39;application titlePanel(&quot;Aides aux entreprises durant la crise du Covid-19&quot;), # Définition du Widget - ici un slider en vue de construire un histogramme sidebarLayout( sidebarPanel( sliderInput(inputId = &quot;classes&quot;, label = &quot;Nombres de classes&quot;, min = 1, max = 150, value = 50), radioButtons(inputId = &quot;region&quot;, label = &quot;Choix de la région&quot;, choices = unique(dt_aidesCovid$reg_name), #ou indiquer &#39;nom_regions&#39; selected = &quot;Île-de-France&quot;), ), # Graphe montré à l&#39;utilisateur mainPanel( plotOutput(&quot;histPlot&quot;) ) ) ) server &lt;- function(input, output) { output$histPlot &lt;- renderPlot({ dt_aidesCovid %&gt;% filter(reg_name == &quot;Île-de-France&quot;) %&gt;% ggplot() + aes(x=total_meuros) + geom_histogram(bins=input$classes) }) } shinyApp(ui = ui, server = server) Enfin, là encore, il faut introduire la réactivité et connecter la partie UI et la partie server, en remplaçant le nom de la région dans le filter(reg_name == ) par le nom de linputId indiqué dans notre radioButtons : # Chargement du fichier final dt_aidesCovid &lt;- readRDS(&quot;data/dt_aidesCovid.RData&quot;) # Quelques modifications du fichier initial de données # dt_aidesCovid &lt;- dt_aidesCovid %&gt;% mutate(reg_name=as.factor(reg_name)) # nom_regions &lt;- levels(dt_aidesCovid$reg_name) # Définition UI et Server de l&#39;application Shiny ui &lt;- fluidPage( # Titre de l&#39;application titlePanel(&quot;Aides aux entreprises durant la crise du Covid-19&quot;), # Définition du Widget - ici un slider en vue de construire un histogramme sidebarLayout( sidebarPanel( sliderInput(inputId = &quot;classes&quot;, label = &quot;Nombres de classes&quot;, min = 1, max = 150, value = 50), radioButtons(inputId = &quot;region&quot;, label = &quot;Choix de la région&quot;, choices = unique(dt_aidesCovid$reg_name), #ou indiquer &#39;nom_regions&#39; selected = &quot;Île-de-France&quot;), ), # Graphe montré à l&#39;utilisateur mainPanel( plotOutput(&quot;histPlot&quot;) ) ) ) server &lt;- function(input, output) { output$histPlot &lt;- renderPlot({ dt_aidesCovid %&gt;% filter(reg_name == input$region) %&gt;% ggplot() + aes(x=total_meuros) + geom_histogram(bins=input$classes) }) } shinyApp(ui = ui, server = server) 9.5 Modification du graphique : selon une variable au choix parmi deux On peut maintenant vouloir montrer un graphique (toujours le même histogramme) selon au choix deux variables : soit le montant total des aides en milliers deuros, soit le nombre dentreprises concernées (variable nombre_entreprises). Procédons comme précédemment : créons un nouveau widget avec par exemple selectInput(), dont linputID sera variable et largument choices = donne les deux variables choisies ; pour cela, on peut utiliser une fonction list() et indiquer le nom des deux variables, soient total_meuros et nombre_entreprises. Et ensuite, dans la fonction server, remplaçons x=total_meuros par x=input$variable et voyons si cela marche ! # Chargement du fichier final dt_aidesCovid &lt;- readRDS(&quot;data/dt_aidesCovid.RData&quot;) # Quelques modifications du fichier initial de données # dt_aidesCovid &lt;- dt_aidesCovid %&gt;% mutate(reg_name=as.factor(reg_name)) # nom_regions &lt;- levels(dt_aidesCovid$reg_name) # Définition UI et Server de l&#39;application Shiny ui &lt;- fluidPage( # Titre de l&#39;application titlePanel(&quot;Aides aux entreprises durant la crise du Covid-19&quot;), # Définition du Widget - ici un slider en vue de construire un histogramme sidebarLayout( sidebarPanel( sliderInput(inputId = &quot;classes&quot;, label = &quot;Nombres de classes&quot;, min = 1, max = 150, value = 50), radioButtons(inputId = &quot;region&quot;, label = &quot;Choix de la région&quot;, choices = unique(dt_aidesCovid$reg_name), #ou indiquer &#39;nom_regions&#39; selected = &quot;Île-de-France&quot;), selectInput(inputId = &quot;variable&quot;, label = &quot;Choix de la variable&quot;, choices = list(&quot;nombre_entreprises&quot;, &quot;total_meuros&quot;), selected = &quot;total_meuros&quot;), ), # Graphe montré à l&#39;utilisateur mainPanel( plotOutput(&quot;histPlot&quot;) ) ) ) server &lt;- function(input, output) { output$histPlot &lt;- renderPlot({ dt_aidesCovid %&gt;% filter(reg_name == input$region) %&gt;% ggplot() + aes(x=input$variable) + geom_histogram(bins=input$classes) }) } shinyApp(ui = ui, server = server) Et non cela ne fonctionne pas. En réalité, comme nous avons utilisé dans choices = un fonction list() qui fait appel à des variables de type caractère, la fonction ggplot() + aes(x = ) ne comprend pas que la variable appelée est bien une variable numérique, elle croît en quelque sorte que cest une variable caractère. Il faut donc dire à la fonction ggplot() ici que le nom de la variable est de type string mais quelle comporte bien des valeurs numériques donc compatible avec un histogramme : pour cela, au lieu de ggplot() + aes(x = ), il faut utiliser ggplot() + aes_string(x = ). Réessayons : # Chargement du fichier final dt_aidesCovid &lt;- readRDS(&quot;data/dt_aidesCovid.RData&quot;) # Quelques modifications du fichier initial de données # dt_aidesCovid &lt;- dt_aidesCovid %&gt;% mutate(reg_name=as.factor(reg_name)) # nom_regions &lt;- levels(dt_aidesCovid$reg_name) # Définition UI et Server de l&#39;application Shiny ui &lt;- fluidPage( # Titre de l&#39;application titlePanel(&quot;Aides aux entreprises durant la crise du Covid-19&quot;), # Définition du Widget - ici un slider en vue de construire un histogramme sidebarLayout( sidebarPanel( sliderInput(inputId = &quot;classes&quot;, label = &quot;Nombres de classes&quot;, min = 1, max = 150, value = 50), radioButtons(inputId = &quot;region&quot;, label = &quot;Choix de la région&quot;, choices = unique(dt_aidesCovid$reg_name), #ou indiquer &#39;nom_regions&#39; selected = &quot;Île-de-France&quot;), selectInput(inputId = &quot;variable&quot;, label = &quot;Choix de la variable&quot;, choices = list(&quot;nombre_entreprises&quot;, &quot;total_meuros&quot;), selected = &quot;total_meuros&quot;) ), # Graphe montré à l&#39;utilisateur mainPanel( plotOutput(&quot;histPlot&quot;) ) ) ) server &lt;- function(input, output) { output$histPlot &lt;- renderPlot({ dt_aidesCovid %&gt;% filter(reg_name == input$region) %&gt;% ggplot() + aes_string(x=input$variable) + geom_histogram(bins=input$classes) }) } shinyApp(ui = ui, server = server) "],["10-Ggplot-theorique.html", "Section 10 Data Visualization et Ggplot2 : aspects théoriques 10.1 Présentation générale de Ggplot2 10.2 Les grands principes de data visualization", " Section 10 Data Visualization et Ggplot2 : aspects théoriques 10.1 Présentation générale de Ggplot2 Le package ggplot2 (inclus dans le package tidyverse) est lun des atouts de R et permet de réaliser de beaux graphiques ; vous en trouverez ici la présentation officielle. Linconvénient, surtout pour quelquun qui serait habitué à construire des graphiques sous excel, est quil faut (presque) tout paramétrer, ce qui peut finalement donner un code très long. Larchitecture globale de ggplot2 est souvent représentée par le schéma ci-dessous : Pour le lire, il faut partir du bas du schéma : par Data, nous devons dabord préciser la base ou le tableau de données utilisé(e) qui contient la ou les variables qui seront représentées ; par aesthetics, nous allons ensuite indiquer les variables qui seront projetées sur le graphe ; par geometries, nous indiquons le type de graphique utilisé ou la forme géométrique ; par facets, nous pouvons éventuellement diviser ou découper le graphique en plusieurs graphes( ou panneaux) dépendant dune autre variable par exemple ; par statistics, nous pouvons là aussi éventuellement ajouter des statistiques ; par coordinates, nous pouvons là aussi éventuellement changer le sens du graphique ; enfin, par theme, nous pouvons utiliser lun des thèmes graphiques diponibles et/ou ajouter un certain nombre doptions sur ce qui entoure le graphique, cest-à-dire les positions et/ou couleurs et/ou taille, etc., des axes, titre, légende, etc. 10.1.1 Les aesthetics ou arguments esthétiques Il sagit principalement dindiquer quelle variable sera utilisée en abcisse (x=), et laquelle sera éventuellement utilisée en ordonnée (y=). Mais on peut aussi ajouter des variables supplémentaires qui seront différenciées par : couleur, avec color= (pour des points, lignes ou symboles) ou fill= (pour le contenu des bâtons ou symboles) ; taille avec size= ; symboles avec shape= ; type de lignes avec linetype= ; degré de transparence avec alpha= (mais non conseillé pour les variables dsicrètes). La nuance à bien comprendre est quutiliser ces options à lintérieur de la fonction aes() revient à ajouter une 3ème variable (une légende apparaîtra alors automatiquement), alors que si lon veut simplement changer laspect des points, lignes, barres, etc., dune variable déjà projetée, il faut appeler (souvent) ces mêmes options après la fonction aes() dans une fonction geom_***() par exemple. Dans ce cas-là, on peut changer la couleur des points avec color= , la taille des points ou lignes avec size=, lépaisseur des barres avec width=, etc. Cest la différence entre le mapping et les settings. Chacune de ces options ont des modalités différentes, il peut être bien davoir des mémos rangés dans un dossier créé pour cela pour éviter de les chercher à chaque fois. Par exemple, pour les couleurs, vous trouverez un mémo pdf ici, ou une cheatsheet là&lt;/a, et finalement un bon récapitulatif ici. On peut également utiliser la fonction colours() pour voir la liste complète des couleurs standard. Pour la liste des symboles (shape) et le numéro correspondant que lon appelera avec largument shape=, ci-dessous un récapitulatif : Et voici pour la liste des types de lignes, avec linetype= : 10.1.2 Les géométries Une fois les variables appelées, il faut définir le type de graphique. Il y a beaucoup de choix possibles inclus dans ggplot2, le tout est de bien comprendre quel type de graphique convient le mieux à ou aux variables utilisées et à ce que lon veut montrer (cf. section suivante sur les grands principes de la data visualization). Voici un tableau récapitulant les principales geometries. Tableau : Les principales fonctions geometries de Ggplot Fonction Type de graphique Type de variable(s) geom_histogram() Histogramme 1 variable continue geom_density() Courbe de densité 1 variable continue geom_area() Graphique en aires empilées 1 variable continue geom_bar() Graphique en bâtons 1 variable discrète geom_col() Graphique en bâtons 1 variable discrète geom_point() Nuage de points 2 variables continues geom_jitter() Nuage de points dispersés 2 variables continues geom_boxplot() Boîte à moustache 1 variable continue et 1 variable discrète geom_violin() Graphes en violon 1 variable continue et 1 variable discrète geom_bar() Graphique en bâtons 1 variable continue et 1 variable discrète geom_line() Lignes Fonction continue selon une variable de date geom_area() Graphique en aires empilées Fonction continue selon une variable de date Certaines dentre elles ont des options à préciser, presque de façon obligatoire comme nous lavons déjà vu avec geom_histogram() et loption bins=, si elle nest pas précisée, elle sera forcée par R mais un message davertissement en rouge apparaîtra. Il en existe bien sûr plein dautres, il faut dans ce cas rechercher sur internet ou aller voir sur la cheatsheet de ggplot2 distribuée en cours. Il est possible de faire suivre plusieurs fonctions geom_***() : par exemple un geom_line() après un geom_point(), un geom_text() après un geom_bar(), etc. Dans ce cas, des variables supplémentaires peuvent être ajoutées (ou remplacer les précédentes) avec une nouvelle fonction aes à lintérieur de ce geom_***() ; un exemple assez courant est la construction dun graphique en bâtons avec lajout des valeurs de la variable sur les bâtons, on fera alors appel à deux fonction geom_***() comme ceci : data %&gt;% ggplot() + aes(x=, y=) + geom_bar() + geom_text(aes(label=)). De même, il est possible de spécifier des données (data) différentes pour chaque geom_***() . 10.1.3 Les facettes Il y a deux types de facettes (en réalité trois, avec celle par défaut qui sintitule facet_null() et produit un seul graphe) : facet_wrap() : produit une suite de graphiques et a un argument principal facets=vars() et éventuellement ncol= et nrow= ; facet_grid() : produit une grille ou matrice de graphiques définies par une ou deux variables qui forment les lignes et les colonnes, définies avec les deux arguments principaux cols= et row=, ou en indiquant un ~ entre les deux variables. À savoir, il y a des options pour contrôler les échelles avec largument scales=. Les facettes sont ainsi une autre façon, par rapport aux aesthetics, de représenter deux variables par rapport à une troisième variable. 10.1.4 Les statistiques On peut vouloir ajouter sur un graphique des statistiques particulières ou supplémentaires, comme la moyenne ou médiane dune variable quantitative, ou encore représenter la régression linéaire dans le cas dune variable fonction dune autre, etc. Par exemple, si lon projette des boîtes à moustache, la moyenne nétant pas affichée on peut la rajouter avec la fonction stat_summary() et loption fun = mean. Si lon souhaite ajouter une régression linéaire sur un graphique de nuage de points, il faut utiliser la fonction geom_smooth() et loption method=lm. Certaines statistiques peuvent aussi être calculées ou transformées directement dans certaines fonctions : cest par exemple le cas avec la fonction geom_histogramm() où lon peut produire un histogramme de la densité en spécifiant y=..density.. dans laes() ou en la superposant à laide dune courbe à lhistogramme initial en ajoutant alors ensuite un geom_density() ; ou encore avec la fonction geom_bar() avec les arguments stat = \"summary_bin\", fun = mean (par défaut, stat = \"count\", dans ce cas la hauteur des barres représente le comptage des cas dans chaque catégorie). 10.1.5 Les coordonnées Les systèmes de coordonnées linéaires permettent de changer le sens du graphique ou de zoomer sur le graphique : coord_cartesian() : cest le système de coordonnées par défaut (repère cartésien), en changeant les arguments xlim= ou ylim=, on procède à un zoom sur laxe des abscisses et/ou celui des ordonnées ; cela permet de ne pas supprimer des données comme le ferait les fonctions scale_x_continuous() ou scale_y_continuous mais juste de ne pas les afficher sur le graphe ; coord_flip() : permet dinverser les axes ; coord_fixed() : produit un système de coordonnées cartésiennes avec un ratio daspect fixe. Il existe également des systèmes de coordonnées non-linéaires, comme coord_polar() par exemple. 10.1.6 Les thèmes Il y a plusieurs thèmes existants dans le package ggplot2, theme_gray() est le thème par défaut ; les autres sont présentés dans la figure ci-dessous. Ensuite, la fonction theme() permet de modifier les aspects du graphique : il y a un certain darguments disponibles qui permettent de modifier les éléments entourant le graphique comme les titre et sous-titre, les éléments à lintérieur du graphique cest-à-dire de la grille, les éléments des axes, ou encore les éléments de la légende (ou sa position sur la figure), etc. La figure ci-dessous est une bonne synthèse de la manière dont il faut programmer ces différentes éléments du thème dun graphique (téléchargeable directement ici) : 10.1.7 Les autres options graphiques : titres, échelles des axes, etc. Pour le titre général, mais aussi les titres des axes, ainsi quune éventuelle légende, source, etc., on peut les rassembler dans la fonction labs() : labs( title = &quot; &quot;, subtitle = &quot; &quot;, x = &quot; &quot;, y = &quot; &quot;, caption = &quot; &quot;) Les axes des échelles peuvent être changés, ainsi que les valeurs affichées, avec les fonctions scale : si les variables sont quantitatives/continues, avec scale_x_continous() et scale_y_continuous() ; si les variables sont qualitatives/discrètes, avec scale_x_discrete() et scale_x_discrete() ; dont les options les plus souvent utilisées sont limits=, breaks=, labels=, ou encore trans= qui permet de transformer la mesure de léchelle (exponentielle, log, ). Lorsquune option fill= ou color= est utilisée dans un aes, alors on peut modifier le type de couleurs ou palettes utilisées avec par exemple scale_fill_brewer() pour la pallette de couleur RBrewer ou scale_fill_viridis() pour la palette Viridis, etc. Il y a encore dautres fonctions qui permettent de customiser à votre goût un graphique ggplot, il faut saventurer dans les diverses documentations plus complètes sur le package ggplot2. 10.1.8 Code minimal Après lappel de la fonction ggplot(), chaque couche supplémentaire utilisée est précisée par le signe + et non lhabituel pipe %&gt;% pour bien signifier quon est toujours dans la fonction ggplot(), par ailleurs il faut faire attention de mettre le signe + à la fin dune ligne et ensuite de faire un saut de ligne (le contraire saut de ligne et début de la ligne suivante avec le + ne fonctionnera pas). Les trois arguments obligatoires sont donc les 3 premières : data, aesthethics et geometries. En langage tidyverse, il existe plusieurs façons décrire le code : # Les 4 façons d&#39;écrire suivantes sont similaires : data %&gt;% # on spécifie la table de données ggplot() + # on appelle la fonction ggplot() aes(x = , y = ) + # on spécifie dans l&#39;aes() les variables à mettre dans l&#39;axe # des abcisses (x=) et dans l&#39;axe des ordonnées (y=) geom_histogram() # on trace l&#39;histogramme data %&gt;% ggplot(aes(x = , y = )) + geom_histogram() ggplot(data) + aes(x = , y = ) + geom_histogram() ggplot(data, aes(x = , y = )) + geom_histogram() Nous privilégierons ici la 1ère dentre elles, mais vous pouvez en choisir une autre ! 10.1.9 Liens utiles pour aller plus loin Nous ne pouvons pas résumer lensemble des possibilités données par ggplot2 ; il faudra donc rechercher par soi-même si besoin. Voici pour cela quelques sites très complets sur le package : https://ggplot2-book.org/toolbox.html https://bookdown.org/ael/rexplor/chap8.html#aes 10.2 Les grands principes de data visualization Sans prétendre, ni pouvoir, faire un cours complet de data visualization, voici quelques grands principes à essayer de respecter quand on souhaite représenter graphiquement des résultats issus du traitement de données : savoir au préalable le message principal que lon souhaite faire passer : cela peut sembler évident, mais il faut toujour savoir cela en tête ; construire un graphique intelligible par le plus grand nombre : des graphiques trop sophistiqués, trop chargés dinformations, etc., ne permettront pas de transmettre le message souhaité. Cela peut bien sûr varier selon le public, mais ; situer le graphique : avec un titre explicite, éventuellement un sous-titre, ensuite avec une légende reprenant le champ et/ou la source, etc. ; choisir le bon graphique selon le type de variables à représenter : variable continue ou discrète, croisement dun type de variable avec un autre type, variables dépendant du temps (évolution), etc. ; présenter le graphique de manière la plus objective possible : ne pas tordre le graphique pour faire apparaître un résultat qui nest pas si évident que cela (cest typiquement lexemple dun changement déchelle, dun zoom sur laxe des y, sur un graphique en évolution par exemple pour montrer des variations qui ne seraient pas visibles si laxe commençait à 0) ; rajouter des informations (étiquettes de nom, valeur, etc.) sans trop surcharger le graphe néanmoins ; être logique dans la contruction des éléments extérieurs au graphe : par exemple, ordre des modalités dune légende située à droite selon le point darrivée des courbes ; ordre des modalités dune variable discrète (par exemple le niveau de diplôme) ou selon la moyenne/médiane dune autre variable par ordre croissant ou déroissant ; utiliser (le plus possible) des axes similaires pour comparer deux grahes côte à cote. Ce chapitre de cours donne des conseils synthétiques : cf. ici ; ou cet article-ci. "],["11-Ggplot-pratique.html", "Section 11 Le package Ggplot en pratiques 11.1 Exemple de la construction dun graphique pas à pas 11.2 Dautres exemples à travers des exercices", " Section 11 Le package Ggplot en pratiques Reprenons la base de données sur les aides financières versées aux entreprises pendant la crise du Covid enregistrée précédemment (mais on peut aussi la télécharger de nouveau via lAPI pour avoir la version la plus récente si elle est actualisée), et regardons de nouveau les variables présentes dans cette base (les 2 dernières variables étant des variables créées précédemment, cf. section 3.2.3. de la séance 1 de ce cours) : dt_aidesCovid &lt;- readRDS(&quot;data/dt_aidesCovid.RData&quot;) dt_aidesCovid %&gt;% glimpse() Rows: 1,680 Columns: 15 $ reg_code &lt;int&gt; 84, 84, 84, 84, 84, 84, 27, 27, 27, 53, 53, 24~ $ geo_point_2d &lt;list&gt; &lt;45.263906, 5.573978&gt;, &lt;45.728000, 4.164813&gt;,~ $ naf_section_name &lt;chr&gt; &quot;Arts, spectacles et activités récréatives&quot;, &quot;~ $ nombre_entreprises &lt;int&gt; 1980, 3034, 2188, 6577, 3350, 6772, 61, 45, 23~ $ plan &lt;chr&gt; &quot;Fonds de solidarité&quot;, &quot;Fonds de solidarité&quot;, ~ $ financial_support_count &lt;int&gt; 15958, 8936, 21447, 19967, 18693, 16910, 366, ~ $ reg_name &lt;chr&gt; &quot;Auvergne-Rhône-Alpes&quot;, &quot;Auvergne-Rhône-Alpes&quot;~ $ naf_section_code &lt;chr&gt; &quot;R&quot;, &quot;F&quot;, &quot;I&quot;, &quot;F&quot;, &quot;N&quot;, &quot;Q&quot;, &quot;J&quot;, &quot;K&quot;, &quot;L&quot;, &quot;~ $ total_meuros &lt;dbl&gt; 53.696626, 13.922570, 111.923817, 33.039981, 8~ $ dep_name &lt;chr&gt; &quot;Isère&quot;, &quot;Loire&quot;, &quot;Loire&quot;, &quot;Rhône&quot;, &quot;Rhône&quot;, &quot;~ $ iso3_code &lt;chr&gt; &quot;FXX&quot;, &quot;FXX&quot;, &quot;FXX&quot;, &quot;FXX&quot;, &quot;FXX&quot;, &quot;FXX&quot;, &quot;FXX~ $ dep_code &lt;chr&gt; &quot;38&quot;, &quot;42&quot;, &quot;42&quot;, &quot;69&quot;, &quot;69&quot;, &quot;69&quot;, &quot;58&quot;, &quot;89&quot;~ $ total &lt;dbl&gt; 53696626, 13922570, 111923817, 33039981, 83094~ $ total_meuros_outliers &lt;chr&gt; &quot;Vrai&quot;, &quot;Faux&quot;, &quot;Vrai&quot;, &quot;Faux&quot;, &quot;Vrai&quot;, &quot;Faux&quot;~ $ total_meuros_cat &lt;fct&gt; &quot;(21.1,1.64e+03]&quot;, &quot;(1.83,21.1]&quot;, &quot;(21.1,1.64e~ Passons en variables factor les variables caractères, car sinon au moment de la construction des graphiques avec ggplot2 la fonction ne reconnaîtra pas les modalités de la variable qualitative utilisée (sauf à appliquer la fonction factor() à la variable directement dans laes de ggplot()). dt_aidesCovid &lt;- dt_aidesCovid %&gt;% mutate_if(is.character, as.factor) #dt_aidesCovid %&gt;% select_if(is.factor) %&gt;% sapply(levels) 11.1 Exemple de la construction dun graphique pas à pas On va chercher à représenter la distribution du montant en millions deuros des aides financières versées aux entreprises selon les régions. Notre variable principale est donc total_meuros et la variable secondaire ou fonction de la première est reg_name ou reg_code. Pour représenter la distribution dune variable quantitative ou continue, on peut utiliser un histogramme (ou/et une courbe de densité), mais comme ici on veut la représenter selon une autre variable peut-être serait-il mieux dutiliser une boîte à moustache qui donnera les principaux éléments de description de la distribution de cette variable. ATTENTION néanmoins, vu la façon dont la base de données est construite, que lon montre par ce graphique ce nest pas la distribution de la variable selon ce qua reçue chaque entreprise dans la région, mais selon ce qua reçu chaque département et chaque secteur dactivité dans la région ; les données ne sont en effet pas individuelles mais agrégées par département et secteur, la distribution affichée sera donc sensible au nombre (inégal) de départements dans chaque région. Nous raisonnerons ensuite de manière plus pertinente sur des indicateurs construits. Essayons ! Dabord, en créant une boîte à moustache pour représenter la distribution de la variable total_meuros: dt_aidesCovid %&gt;% ggplot() + aes(x = total_meuros) + geom_boxplot() Comme il y a des valeurs aberrantes (cf. section 3.2.3. de la séance 1 de ce cours), il faut utiliser une option pour mettre une échelle moins grande en abcisses. Plusieurs manières de faire existent, mais lune dentre elles équivaut à supprimer les valeurs, alors quune autre permet de les garder et juste de ne pas les faire apparaître sur le graphique, cela peut-être important si ensuite nous voulons ajoutons des statistiques comme la moyenne sur le boxplot. Pour changer léchelle des abcisses, on utilise scale_x_continuous() et loption limits=c() pour indiquer les nouvelles valeurs de léchelle, par exemple ici entre 0 et 100 (pour rappel, on est en millions deuros) : dt_aidesCovid %&gt;% ggplot() + aes(x = total_meuros) + geom_boxplot() + scale_x_continuous(limits=c(0,100)) Warning: Removed 70 rows containing non-finite values (stat_boxplot). Un avertissement est donné : 70 lignes ont donc été supprimées (sur 1 680 initiales), si nous ajoutons ensuite la moyenne, elle sera calculée sans ces 70 observations, cela ne changera peut-être pas significativement ici cette moyenne mais cela nest pas très rigoureux. Utilisons la seconde méthode maintenant, avec loption xlim() à intégrer dans la fonction coord_cartesian() qui fait léquivalent dun zoom sur le graphique : dt_aidesCovid %&gt;% ggplot() + aes(x = total_meuros) + geom_boxplot() + coord_cartesian(xlim=c(0,100)) Plus de warning ! Ensuite, nous souhaitons représenter la distribution de cette variable selon les régions : nous allons pour cela ajouter dans laes() une variable y= ; et nous allons en profiter pour préciser un peu léchelle des abscisses (réduire le pas avec loption breaks=seq()) : dt_aidesCovid %&gt;% ggplot() + aes(x = total_meuros, y=reg_name) + geom_boxplot() + coord_cartesian(xlim=c(0,100)) + scale_x_continuous(breaks=seq(0,100,10)) On voit que pour la région Île-de-France, le maximum nest pas visible sur laxe, il faut augmenter un peu léchelle dans ce cas. Nous pouvons également ajouter la moyenne, puisquici nous voyons de gauche à droite, le minimum, le 1er quartile, la médiane, le 3ème quartile, le maximum et les outliers (points aberrants selon les statistiques de la boxplot). Pour cela, il faut utiliser la couche statistiques de ggplot() avec la fonction stat_summary() et les options fun = mean pour la moyenne, geom = point pour quelle soit représentée par un point, color=\"gray50\" pour quelle se différencie des autres points et soit en gris, et éventuellement size=2 pour jouer sur la taille du point : # Pour infos, les options de `geom =` dans `stat_summary()` sont par exemple : # &quot;point&quot;, &quot;pointrange&quot;, &quot;crossbar&quot;, &quot;bar&quot; (cell-ci à ne pas utiliser ici néanmoins !) dt_aidesCovid %&gt;% ggplot() + aes(x = total_meuros, y=reg_name) + geom_boxplot() + stat_summary(fun=mean, geom=&quot;point&quot;, color=&quot;gray50&quot;, size=2) + coord_cartesian(xlim=c(0,160)) + scale_x_continuous(breaks=seq(0,160,10)) On peut aussi vouloir enlever les outliers avec loption outlier.shape de geom_boxplot() comme ceci : geom_boxplot(outlier.shape = NA). On peut vouloir encore ordonner laffichage des régions par ordre décroissant de la médiane ou de la moyenne (ordre décroissant ici = valeur la plus élevée en haut du graphique). Nous pouvons, entre autres, utiliser pour cela la fonction fct_reorder() du package forcats déjà présenté dans la section 3.2 de ce cours (Séance 1) : nous pouvons alors directement lintégrer dans laes de ggplot dans la variable en ordonnée y=fct_reorder(), il faut alors entre parenthèses mettre la variable utilisée en ordonnée, suivie de la variable par laquelle on ordonne (la même que celle utilisée dans x=). Utilisée dans un boxplot, cela ordonne par défaut selon la médiane ; si on veut que les régions soient ordonnées par la moyenne, il faut rajouter loption .fun=mean dans la fonction fct_reorder(). dt_aidesCovid %&gt;% ggplot() + aes(x = total_meuros, y=fct_reorder(reg_name, total_meuros)) + geom_boxplot() + stat_summary(fun=mean, geom=&quot;point&quot;, color=&quot;gray50&quot;, size=2) + coord_cartesian(xlim=c(0,160)) + scale_x_continuous(breaks=seq(0,160,10)) Ordonnée par la moyenne, cela donnerait ceci : dt_aidesCovid %&gt;% ggplot() + aes(x = total_meuros, y=fct_reorder(reg_name, total_meuros, .fun=mean)) + geom_boxplot() + stat_summary(fun=mean, geom=&quot;point&quot;, color=&quot;gray50&quot;, size=2) + coord_cartesian(xlim=c(0,160)) + scale_x_continuous(breaks=seq(0,160,10)) Nous arrivons à un graphique intéressant, il faut maintenant améliorer la description autour : noms des axes, titres, légende informative sous le graphique (avec notamment avertissement sur les valeurs non affichées sur le graphique), éventuellement un peu de couleur (avec fill= dans laes() pour que les couleurs soient différentes selon les régions mais en supprimant la légende affichée automatiquement qui napporte pourtant pas dinformation ici, puisque les noms des régions sont affichées sur laxe des y), etc. Cela se fait avec la fonction labs(), et ensuite la fonction theme(). Une petite astuce pour les titres pour quils ne soient pas coupés sur le graphe : \\n collé à un mot (sans espace) permet de mettre à la ligne à partir de ce mot ! dt_aidesCovid %&gt;% ggplot() + aes(x = total_meuros, y=fct_reorder(reg_name, total_meuros, .fun=mean), fill=reg_name) + geom_boxplot() + stat_summary(fun=mean, geom=&quot;point&quot;, color=&quot;gray50&quot;, size=2) + coord_cartesian(xlim=c(0,160)) + scale_x_continuous(breaks=seq(0,160,10)) + labs(title=&quot;Distribution du montant total des aides financières versées aux \\nentreprises par le fonds de solidarité pendant la crise du Covid19, \\npar région&quot;, x=&quot;Montant total des aides (en millions d&#39;euros)&quot;, y=&quot;Région&quot;, caption=&quot;Remarques : Les valeurs au-delà de 160 millions d&#39;euros ne sont pas affichées ; les points en \\ngris représentent la moyenne pour chaque région. \\nSource : Base &#39;aides-entreprises-covid-19-france&#39; téléchargée sur &#39;public.opendatasoft.com&#39; \\nvia l&#39;API. \\nCalculs : Camille Signoretto.&quot;) + theme(legend.position=&quot;none&quot;, plot.caption = element_text(hjust=0), plot.title = element_text(size=12), axis.title.x = element_text(size=10), axis.title.y = element_text(size=10)) Allons plus loin et testons dautres types de graphiques. Peut-être, peut-on utiliser un graphe en violon à la place du boxplot ? dt_aidesCovid %&gt;% ggplot() + aes(x = total_meuros, y=fct_reorder(reg_name, desc(total_meuros), .fun=mean), fill=reg_name) + geom_violin() + stat_summary(fun=mean, geom=&quot;point&quot;, color=&quot;gray50&quot;, size=2) + coord_flip(xlim=c(0,75)) + labs(title=&quot;Distribution du montant total des aides financières versées aux entreprises par le fonds \\nde solidarité pendant la crise du Covid19, par région&quot;, x=&quot;Montant total des aides (en millions d&#39;euros)&quot;, y=&quot;Région&quot;, caption=&quot;Remarques : Les valeurs au-delà de 75 millions d&#39;euros ne sont pas affichées ; les points en gris représentent la moyenne \\npour chaque région. \\nSource : Base &#39;aides-entreprises-covid-19-france&#39; téléchargée sur &#39;public.opendatasoft.com&#39; via l&#39;API. \\nCalculs : Camille Signoretto.&quot;) + theme(legend.position=&quot;none&quot;, plot.caption = element_text(hjust=0), axis.text.x = element_text(angle=90), plot.title = element_text(size=12), axis.title.x = element_text(size=10), axis.title.y = element_text(size=10)) Non, le rendu nest pas terrible car les distributions pour certaines régions sont très étirées, à éviter donc ici ! Mais peut-être peut-on rajouter les observations pour voir complètement la distribution avec geom_jitter() appelé après geom_boxplot() et en enlevant les outliers dans ce cas ? dt_aidesCovid %&gt;% ggplot() + aes(x = total_meuros, y=fct_reorder(reg_name, total_meuros, .fun=mean), fill=reg_name) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha = 0.2, size = 2, width = 0.1, height = 0) + stat_summary(fun=mean, geom=&quot;point&quot;, color=&quot;gray50&quot;, size=2) + coord_cartesian(xlim=c(0,160)) + labs(title=&quot;Distribution du montant total des aides financières versées aux \\nentreprises par le fonds de solidarité pendant la crise du Covid19, \\npar région&quot;, x=&quot;Montant total des aides (en millions d&#39;euros)&quot;, y=&quot;Région&quot;, caption=&quot;Remarques : Les valeurs au-delà de 160 millions d&#39;euros ne sont pas affichées ; les points en \\ngris représentent la moyenne pour chaque région. \\nSource : Base &#39;aides-entreprises-covid-19-france&#39; téléchargée sur &#39;public.opendatasoft.com&#39; \\nvia l&#39;API. \\nCalculs : Camille Signoretto.&quot;) + theme(legend.position=&quot;none&quot;, plot.caption = element_text(hjust=0), plot.title = element_text(size=12), axis.title.x = element_text(size=10), axis.title.y = element_text(size=10)) Non, pas terrible non plus, on ne voit plus grand chose !! Finalement, on peut garder le graphique que lon avait en enlevant les outliers pour le rendre plus clair : dt_aidesCovid %&gt;% ggplot() + aes(x = total_meuros, y=fct_reorder(reg_name, total_meuros, .fun=mean), fill=reg_name) + geom_boxplot(outlier.shape = NA) + stat_summary(fun=mean, geom=&quot;point&quot;, color=&quot;gray50&quot;, size=2) + coord_cartesian(xlim=c(0,160)) + labs(title=&quot;Distribution du montant total des aides financières versées aux \\nentreprises par le fonds de solidarité pendant la crise du Covid19, \\npar région&quot;, x=&quot;Montant total des aides (en millions d&#39;euros)&quot;, y=&quot;Région&quot;, caption=&quot;Remarques : Les valeurs au-delà de 160 millions d&#39;euros ne sont pas affichées ; les points en \\ngris représentent la moyenne pour chaque région. \\nSource : Base &#39;aides-entreprises-covid-19-france&#39; téléchargée sur &#39;public.opendatasoft.com&#39; \\nvia l&#39;API. \\nCalculs : Camille Signoretto.&quot;) + theme(legend.position=&quot;none&quot;, plot.caption = element_text(hjust=0), plot.title = element_text(size=12), axis.title.x = element_text(size=10), axis.title.y = element_text(size=10)) Voilà un premier graphique construit avec la grammaire de ggplot(). À vous maintenant de construire vous-mêmes les graphiques qui vous sont suggérés dans la section suivante ! 11.2 Dautres exemples à travers des exercices 11.2.1 Distribution du montant total des aides financières, par secteur dactivité Construisez le même type de graphique mais cette fois par secteur dactivité et non par région. Nhésitez pas à changer les options pour le mettre à votre goût !! dt_aidesCovid %&gt;% ggplot() + aes(x = total_meuros, y=fct_reorder(naf_section_code, total_meuros, .fun=mean), fill=naf_section_code) + geom_boxplot(outlier.shape = NA) + stat_summary(fun=mean, geom=&quot;point&quot;, color=&quot;gray45&quot;, size=2.2) + coord_cartesian(xlim=c(0,300)) + scale_x_continuous(breaks = seq(0,300,20)) + labs(title=&quot;Distribution du montant total des aides financières versées aux entreprises par le \\nfonds de solidarité pendant la crise du Covid19, par secteur d&#39;activité&quot;, x=&quot;Montant total des aides (en millions d&#39;euros)&quot;, y=&quot;Secteur d&#39;activité&quot;, caption=&quot;Remarques : Les valeurs au-delà de 160 millions d&#39;euros ne sont pas affichées ; les points en gris représentent la \\nmoyenne pour chaque secteur \\nSource : Base &#39;aides-entreprises-covid-19-france&#39; téléchargée sur &#39;public.opendatasoft.com&#39; via l&#39;API. \\nCalculs : Camille Signoretto.&quot;) + theme(legend.position=&quot;none&quot;, plot.caption = element_text(hjust=0), plot.title = element_text(size=12.5), axis.title.x = element_text(size=10), axis.title.y = element_text(size=10)) 11.2.2 Comparaison des montants moyen et médian des aides financières, par région Nous entamons maintenant des graphiques qui auront un sens plus pertinent par rapport à la base mobilisée (et à la façon dont elle est construite), le résultat pourra ainsi être interprété. Construisez dabord un graphique mettant côte à côte deux graphes en bâtons représentant respectivement le montant moyen et le montant médian des aides financières versées aux entreprises par le fonds de solidarité pendant la crise du Covid19 par région. Pour vous aider si besoin, réfléchissez par étapes : créer un premier graphe que vous assignerez à un nouvel objet et qui représentera la moyenne par région ; vous pouvez pour cela créer une nouvelle variable qui constituera la moyenne pour chaque région (un conseil : arrondir à lunité) ; sélectionner les variables qui seront utilisées dans le graphique et vérifier (ou corriger sinon) quil ny ait pas des doublons (lignes identiques) car cela peut fausser le graphique ensuite ; construisez le graphique avec ggplot() et la bonne fonction geom_***(), les données seront affichées par ordre décroissant ; faîtes de même pour la médiane par région ; vous pouvez ensuite mettre ces graphiques côte à côté avec le package patchwork (quil vous faudra probablement installer si cest la première fois que vous lutilisez), recherchez comment faire ensuite (cest très simple !), puis ajouter un titre et une légende général avec la fonction plot_annotation(). p1 &lt;- dt_aidesCovid %&gt;% group_by(reg_name) %&gt;% mutate(moy_total_meuros = round(mean(total_meuros),0)) %&gt;% select(moy_total_meuros, reg_name) %&gt;% unique() %&gt;% ggplot() + aes(x = fct_reorder(reg_name, desc(moy_total_meuros)), y = moy_total_meuros) + geom_bar(stat=&quot;identity&quot;) + geom_text(aes(label = moy_total_meuros), position = position_stack(vjust = 0.5), color=&quot;gray95&quot;, size=2.8) + labs(title = &quot;Moyenne&quot;, x = &quot; &quot;, y = &quot; &quot;) + theme(axis.text.x = element_text(angle=60, hjust=1, size=7.5), plot.title = element_text(size=10.5)) p2 &lt;- dt_aidesCovid %&gt;% group_by(reg_name) %&gt;% mutate(median_total_meuros = round(median(total_meuros),0)) %&gt;% select(median_total_meuros, reg_name) %&gt;% unique() %&gt;% ggplot() + aes(x = fct_reorder(reg_name, desc(median_total_meuros)), y = median_total_meuros) + geom_bar(stat=&quot;identity&quot;) + geom_text(aes(label = median_total_meuros), position = position_stack(vjust = 0.5), color=&quot;gray95&quot;, size=2.8) + labs(title = &quot;Médiane&quot;, x = &quot; &quot;, y = &quot; &quot;) + theme(axis.text.x = element_text(angle=60, hjust=1, size=7.5), plot.title = element_text(size=10.5)) library(patchwork) (p1 + p2) + plot_annotation(title = &quot;Montant des aides financières versées aux entreprises par le fonds de solidarité pendant \\nla crise du Covid19, par région&quot;, caption = &quot;Source : Base &#39;aides-entreprises-covid-19-france&#39; téléchargée sur &#39;public.opendatasoft.com&#39; via l&#39;API. \\nCalculs : Camille Signoretto.&quot;, theme = theme(plot.title = element_text(size = 12))) &amp; theme(plot.caption = element_text(hjust = 0)) On observe ainsi, quen moyenne et en médiane, ce sont lÎle-de-France et la région PACA qui captent les montants les plus élevés des aides financières versées par le fonds de solidarité mise en place lors de la crise du Covi-19. Cela est néanmoins sûrement lié au fait que ce sont les régions qui comportent le plus grand nombre dentreprises ; il sera donc intéressant de créer ensuite un indicateur plus pertinent rapportant le nombre daides au nombre dentreprise pour une région donnée. Par ailleurs, la comparaison moyenne-médiane sur deux graphiques côte-à-côte permet également de révéler la dispersion des montants versés selon les régions : par exemple, la région Auvergne-Rhône-Alpes a reçu en moyenne 23 millions deuros daides financières, la situant dans le trio de tête, mais seulement 7 millions en médiane la situant plutôt au milieu des autres régions. Là encore, cela peut sexpliquer par le nombre dentreprises présentes dans la région. Vous pourrez ensuite faire le même graphique par secteur dactivité. Quen concluez-vous ? Voici le même graphique par secteur dactivité : p3 &lt;- dt_aidesCovid %&gt;% group_by(naf_section_code) %&gt;% mutate(moy_total_meuros = round(mean(total_meuros),0)) %&gt;% select(moy_total_meuros, naf_section_code) %&gt;% unique() %&gt;% ggplot() + aes(x = fct_reorder(naf_section_code, desc(moy_total_meuros)), y = moy_total_meuros) + geom_bar(stat=&quot;identity&quot;) + geom_text(aes(label = moy_total_meuros), position = position_stack(vjust = 0.5), color=&quot;gray95&quot;, size=2.8) + labs(title = &quot;Moyenne&quot;, x = &quot; &quot;, y = &quot; &quot;) + theme(plot.title = element_text(size=10.5)) p4 &lt;- dt_aidesCovid %&gt;% group_by(naf_section_code) %&gt;% mutate(median_total_meuros = round(median(total_meuros),0)) %&gt;% select(median_total_meuros, naf_section_code) %&gt;% unique() %&gt;% ggplot() + aes(x = fct_reorder(naf_section_code, desc(median_total_meuros)), y = median_total_meuros) + geom_bar(stat=&quot;identity&quot;) + geom_text(aes(label = median_total_meuros), position = position_stack(vjust = 0.5), color=&quot;gray95&quot;, size=2.8) + labs(title = &quot;Médiane&quot;, x = &quot; &quot;, y = &quot; &quot;) + theme(plot.title = element_text(size=10.5)) (p3 + p4) + plot_annotation(title = &quot;Montant des aides financières versées aux entreprises par le fonds de solidarité pendant \\nla crise du Covid19, par secteur d&#39;activité&quot;, caption = &quot;Source : Base &#39;aides-entreprises-covid-19-france&#39; téléchargée sur &#39;public.opendatasoft.com&#39; via l&#39;API. \\nCalculs : Camille Signoretto.&quot;, theme = theme(plot.title = element_text(size = 12))) &amp; theme(plot.caption = element_text(hjust = 0)) Cest le secteur I pour Hébergement et restauration qui a capté en moyenne et en médiane le plus daides financières versées par le fonds de solidarité mise en place dans le cadre de la crise du Covid-19, suivi par le secteur du commerce. On retrouve ici les secteurs les plus touchés par la crise du Covid-19 puisque lon trouve ensuite le secteur des arts, spectables et activités récréatives et celui des transports et entreposage. Par ailleurs, on remarque que lordre des secteurs est assez proche lorsque lon compare les moyennes aux médianes. On aurait pu sinon utilser un dot plot, comme ci-dessous. Cherchez comment lon peut construire ce type de graphique (rq : cela ne correspond par à une fonction en tant que telle). library(&quot;ggrepel&quot;) p5 &lt;- dt_aidesCovid %&gt;% group_by(reg_name) %&gt;% mutate(moy_total_meuros = round(mean(total_meuros),0)) %&gt;% select(moy_total_meuros, reg_name) %&gt;% unique() %&gt;% ggplot() + aes(x = moy_total_meuros, y = fct_reorder(reg_name, moy_total_meuros)) + geom_point(color=&quot;burlywood4&quot;, size=2) + geom_segment(aes(x=0, xend=moy_total_meuros, y=fct_reorder(reg_name, moy_total_meuros), yend=fct_reorder(reg_name, moy_total_meuros)), color=&quot;snow4&quot;) + geom_text_repel(aes(label = moy_total_meuros), size = 3) + labs(title = &quot;Moyenne&quot;, x = &quot; &quot;, y = &quot; &quot;) + theme(plot.title = element_text(size=10), axis.text.y = element_text(size=7.5)) p6 &lt;- dt_aidesCovid %&gt;% group_by(reg_name) %&gt;% mutate(median_total_meuros = round(median(total_meuros),0)) %&gt;% select(median_total_meuros, reg_name) %&gt;% unique() %&gt;% ggplot() + aes(x = median_total_meuros, y = fct_reorder(reg_name, median_total_meuros)) + geom_point(color=&quot;burlywood4&quot;, size=2) + geom_segment(aes(x=0, xend=median_total_meuros, y=fct_reorder(reg_name, median_total_meuros), yend=fct_reorder(reg_name, median_total_meuros)), color=&quot;snow4&quot;) + geom_text_repel(aes(label = median_total_meuros), size = 3) + labs(title = &quot;Médiane&quot;, x = &quot; &quot;, y = &quot; &quot;) + theme(plot.title = element_text(size=10), axis.text.y = element_text(size=7.5)) (p5 + p6) + plot_annotation(title = &quot;Montant total des aides financières versées aux entreprises par le fonds de solidarité \\npendant la crise du Covid19, par secteur d&#39;activité&quot;, caption = &quot;Source : Base &#39;aides-entreprises-covid-19-france&#39; téléchargée sur &#39;public.opendatasoft.com&#39; via l&#39;API. \\nCalculs : Camille Signoretto.&quot;, theme = theme(plot.title = element_text(size = 12))) &amp; theme(plot.caption = element_text(hjust = 0)) 11.2.3 Lien entre le montant moyen des aides versées et le nombre moyen dentreprises bénéficiaires, par secteur dactivité puis par région Construisez maintenant un graphique montrant la corrélation entre le montant moyen des aides versées aux entreprises par le fonds de solidarité pendant la crise du Covid19 et le nombre moyen dentreprises bénéficiaires, par secteur dactivité. De même, il faut procéder par étapes : créer dabord les variables de moyenne des aides et du nombre dentreprises ; ne garder que ces variables, supprimer les lignes doublons le cas échéant ; construisez un graphique sous forme de nuages de points, puis ajoutez-y une régression linéaire, noubliez pas dindiquer les régions ; pour une meilleure lisibilité du graphe, on peut indiquer les codes des secteurs directement dans le graphe à côté des points, vous pouvez pour cela utiliser le très utile package ggrepel et sa fonction geom_text_repel() (pratique car en cas de chevauchement un trait sur le côté est mis automatiquement), au lieu de geom_text() vue précédemment. library(&quot;ggrepel&quot;) dt_aidesCovid %&gt;% group_by(naf_section_code) %&gt;% mutate(moy_aides_secteur = round(mean(total_meuros),0), moy_nbentre_secteur = round(mean(nombre_entreprises),0)) %&gt;% select(moy_aides_secteur, moy_nbentre_secteur, naf_section_code) %&gt;% unique() %&gt;% ggplot() + aes(x = moy_aides_secteur, y = moy_nbentre_secteur) + geom_point(aes(color=fct_reorder(naf_section_code, desc(moy_aides_secteur))), size=2) + geom_smooth(method = &quot;lm&quot;, formula = y ~ x, color=&quot;gray55&quot;, size=0.9) + geom_text_repel(aes(label = naf_section_code),size = 2.9) + scale_y_continuous(limits=c(0,3500), breaks=seq(0, 3500,200)) + scale_x_continuous(limits=c(0,125), breaks = seq(0, 125, 10)) + labs(title = &quot;Corrélation entre le montant moyen des aides versées aux entreprises par le fonds de \\nsolidarité pendant la crise du Covid19 et le nombre moyen d&#39;entreprises bénéficiaires, \\npar secteur d&#39;activité&quot;, x = &quot;Montant moyen des aides versées (en millions d&#39;euros)&quot;, y = &quot;Nombre moyen d&#39;entreprises&quot;, color = &quot; &quot;, caption = &quot;Source : Base &#39;aides-entreprises-covid-19-france&#39; téléchargée sur &#39;public.opendatasoft.com&#39; via l&#39;API. \\nCalculs : Camille Signoretto.&quot;) + theme(plot.caption = element_text(hjust = 0), plot.title = element_text(size=12), legend.position=&quot;none&quot;, axis.title.x = element_text(size=9), axis.title.y = element_text(size=9)) Voici le même grahique par région, en laissant cette fois la légende sur le côté : dt_aidesCovid %&gt;% group_by(reg_name) %&gt;% mutate(moy_aides_region = round(mean(total_meuros),0), moy_nbentre_region = round(mean(nombre_entreprises),0)) %&gt;% select(moy_aides_region, moy_nbentre_region, reg_name) %&gt;% unique() %&gt;% ggplot() + aes(x = moy_aides_region, y = moy_nbentre_region) + geom_point(aes(color=fct_reorder(reg_name, desc(moy_aides_region))), size=2) + geom_smooth(method = &quot;lm&quot;, formula = y ~ x, color=&quot;gray55&quot;, size=0.9) + scale_y_continuous(limits=c(0,3200), breaks=seq(0, 3200,200)) + scale_x_continuous(limits=c(0,75), breaks = seq(0, 75, 10)) + labs(title = &quot;Corrélation entre le montant moyen des aides versées aux \\nentreprises par le fonds de solidarité pendant la crise du \\nCovid19 et le nombre moyen d&#39;entreprises bénéficiaires, \\npar région&quot;, x = &quot;Montant moyen des aides versées (en millions d&#39;euros)&quot;, y = &quot;Nombre moyen d&#39;entreprises&quot;, color = &quot;Région&quot;, caption = &quot;Source : Base &#39;aides-entreprises-covid-19-france&#39; téléchargée sur \\n&#39;public.opendatasoft.com&#39; via l&#39;API. \\nCalculs : Camille Signoretto.&quot;) + theme(plot.caption = element_text(hjust = 0), plot.title = element_text(size=12), legend.title = element_text(size=8, face=&quot;bold&quot;), legend.text = element_text(size=7.5), axis.title.x = element_text(size=9), axis.title.y = element_text(size=9)) Cela confirme quil faut créer un indicateur pour être plus pertinent dans la manipulation de cette base et dans les résultats que lon souhaite mettre en avant. En effet, ces deux derniers graphiques montrant une corrélation nette entre le montant moyen des aides versées et le nombre moyen dentreprises dans une région (cest-à-dire plus il y a dentreprises dans une région, plus le montant moyen sera important), on pourrait construire un indicateur rapportant le montant total des aides versées au nombre dentreprises de la région, pour en faire un montant moyen par entreprise pour chaque région. 11.2.4 Montant moyen des aides versées par entreprise dans chaque région ou chaque secteur dactivité Construisez donc de nouveau un graphique en bâtons, mais avec cette fois la valeur de cet indicateur (rapport de la somme totale des aides par le nombre total dentreprises) par région : dt_aidesCovid %&gt;% group_by(reg_name) %&gt;% mutate(total_region = sum(total), nombre_entreprises_region = sum(nombre_entreprises), aides_par_entre = round(total_region / nombre_entreprises_region, 0)) %&gt;% select(aides_par_entre, reg_name) %&gt;% unique() %&gt;% ggplot() + aes(x = fct_reorder(reg_name, desc(aides_par_entre)), y = aides_par_entre) + geom_bar(stat=&quot;identity&quot;) + geom_text(aes(label = aides_par_entre), position = position_stack(vjust = 0.5), color=&quot;gray95&quot;, size=2.6) + labs(title = &quot;Montant moyen des aides versées par entreprise dans chaque région&quot;, x = &quot; &quot;, y= &quot; &quot;, caption = &quot;Source : Base &#39;aides-entreprises-covid-19-france&#39; téléchargée sur &#39;public.opendatasoft.com&#39; via l&#39;API. \\nCalculs : Camille Signoretto.&quot;) + theme(plot.caption = element_text(hjust = 0), plot.title = element_text(size=12), axis.text.x = element_text(angle=45, size=8, hjust=1)) On se rend alors compte que cest la Corse qui arrive en tête : en moyenne, chaque entreprise a obtenu 22 419 euros daides financières par le fonds de solidarité ; on retrouve ensuite lÎle-de-France avec en moyenne 22 281 euros par entreprise. Voici le même graphique par secteur dactivité : dt_aidesCovid %&gt;% group_by(naf_section_code) %&gt;% mutate(total_region = sum(total), nombre_entreprises_region = sum(nombre_entreprises), aides_par_entre = round(total_region / nombre_entreprises_region, 0)) %&gt;% select(aides_par_entre, naf_section_code) %&gt;% unique() %&gt;% ggplot() + aes(x = fct_reorder(naf_section_code, desc(aides_par_entre)), y = aides_par_entre) + geom_bar(stat=&quot;identity&quot;) + geom_text(aes(label = aides_par_entre), position = position_stack(vjust = 0.5), color=&quot;gray95&quot;, size=2.6) + labs(title = &quot;Montant moyen des aides versées par entreprise dans chaque secteur d&#39;activité&quot;, x = &quot;Secteur d&#39;activité&quot;, y= &quot; &quot;, caption = &quot;Source : Base &#39;aides-entreprises-covid-19-france&#39; téléchargée sur &#39;public.opendatasoft.com&#39; via l&#39;API. \\nCalculs : Camille Signoretto.&quot;) + theme(plot.caption = element_text(hjust = 0), plot.title = element_text(size=12), axis.title.x = element_text(size=9)) Ici, cest de nouveau le secteur de lhébergement-restauration qui apparaît premier : en moyenne, chaque entreprise de ce secteur a reçu 57 755 euros daides financières. En revanche, le second secteur dont les entreprises ont reçu en moyenne le plus daides financières est celui de ladministration publique (O). 11.2.5 Top 5 des aides financières versées selon la région ou le secteur dactivité En vue de lapplication sur Shiny, construisez un graphique en bâtons indiquant les seules 5 premières régions totalisant le plus daides financières en millions deuros. dt_aidesCovid %&gt;% group_by(reg_name) %&gt;% summarise(montant_total = round(sum(total_meuros))) %&gt;% arrange(desc(montant_total)) %&gt;% slice(1:5) %&gt;% ggplot() + aes(x = montant_total, y = fct_reorder(reg_name, montant_total), fill=reg_name) + geom_bar(stat=&quot;identity&quot;) + geom_text(aes(label=montant_total), position = position_stack(vjust=0.5), size=3.5) + labs(title=&quot;Top 5 des aides financières versées par le fond de solidarité, \\nréparties par région&quot;, x = &quot;Montant total en millions d&#39;euros&quot;, y = &quot; &quot;) + scale_fill_brewer(palette=&quot;Set2&quot;) + theme_classic() + theme(legend.position = &quot;none&quot;, plot.title=element_text(size=13), axis.text.y = element_text(size=10), axis.text.x = element_text(size=10), axis.title.x = element_text(size=11)) 11.2.6 À vous de jouer ! Bien sûr, vous pouvez créer des fonctions sur ces graphiques ; puis jouez avec dautres variables, notamment les départements (dep_name) et le nombre daides (financial_support_count) ; ou encore construire des cartes sur le niveau département (même sil nest pas très fin) ; utiliser dautres types de graphiques ; etc. ; etc. "],["12-Retour-sur-Shiny.html", "Section 12 Application sur Shiny 12.1 Application avec un tableau et un graphique 12.2 Introduction dune réactivité appliquée à la table de données 12.3 Introduction dune réactivité sur les inputs sans changer les outputs (contexte réactif) 12.4 Introduction dune réactivité sur les inputs ET les outputs", " Section 12 Application sur Shiny Nous pouvons maintenant mettre en pratique ces connaissances plus approfondies acquises sur le package Ggplot, en créant une application Shiny dont nous avions vu les bases lors de séances précédentes. 12.1 Application avec un tableau et un graphique On va dabord créer une application en mettant en haut un tableau général récapitulant pour la France entière les informations suivantes : le montant total daides financières versées, le nombre total daides versées, et le nombre total dentreprises concernées ; puis en-dessous de ce tableau, on va ajouter un graphique (barplot) qui va représenter le top 5 des aides versées selon, soit la région, soit le secteur dactivité. Ainisi, le premier tableau ne sera pas à ce stade réactif, alors que le graphique le sera. Pour le tableau, vous pouvez utiliser le package gt() et la fonction gt_output() pour lappel du tableau dans la partie UI associée à la fonction render_gt() dans la partie server. Cela doit vous donner ceci : # Chargement des librairies library(shiny) library(tidyverse) library(gt) library(RColorBrewer) library(forcats) # Chargement du fichier final #dt_aidesCovid &lt;- readRDS(&quot;data/dt_aidesCovid.RData&quot;) # Définition UI et Server de l&#39;application Shiny ui &lt;- fluidPage( # Titre de l&#39;application titlePanel(&quot;Aides aux entreprises versées par le fond de solidarité durant la crise du Covid-19&quot;), # Définition du Widget sidebarLayout( sidebarPanel( selectInput(inputId = &quot;variable&quot;, label = &quot;Choix de la variable pour le graphique &#39;Top 5&#39; des aides versées&quot;, choices = list(&quot;Région&quot; = &quot;reg_name&quot;, &quot;Secteur d&#39;activité&quot; = &quot;naf_section_name&quot;), selected = &quot;Secteur d&#39;activité&quot;) ), # Tableau et graphe montré à l&#39;utilisateur mainPanel( gt_output(&quot;tab&quot;), br(), br(), br(), plotOutput(&quot;barplot&quot;, height = 550, width = 750) ) ) ) server &lt;- function(input, output) { output$tab &lt;- render_gt({ dt_aidesCovid %&gt;% summarise(&quot;Montant total en millions d&#39;euros&quot;=sum(total_meuros), &quot;Nombre total d&#39;aides versées&quot;=sum(financial_support_count), &quot;Nombre total d&#39;entreprises concernées&quot;=sum(nombre_entreprises)) %&gt;% gt() %&gt;% fmt_number(columns= 1:3, sep_mark = &quot; &quot;, decimals = 0) %&gt;% tab_header(title=md(&#39;**Principaux indicateurs nationaux**&#39;)) }) output$barplot &lt;- renderPlot({ dt_aidesCovid %&gt;% group_by(!!sym(input$variable)) %&gt;% # ou utiliser la fonction `group_by_at(input$variable)` summarise(montant_total = round(sum(total_meuros))) %&gt;% arrange(desc(montant_total)) %&gt;% slice(1:5) %&gt;% ggplot() + aes(x = montant_total, y = fct_reorder(!!sym(input$variable), montant_total), fill=!!sym(input$variable)) + geom_bar(stat=&quot;identity&quot;) + geom_text(aes(label=montant_total), position = position_stack(vjust=0.5), size=5) + labs(title=paste(&quot;Top 5 des aides financières versées par le fond de \\nsolidarité, réparties par&quot;, if(input$variable==&quot;reg_name&quot;){&quot;région&quot;} else {&quot;secteur d&#39;activité&quot;}), x = &quot;Montant total en millions d&#39;euros&quot;, y = &quot; &quot;) + scale_fill_brewer(palette=&quot;Set2&quot;) + theme_classic() + theme(legend.position = &quot;none&quot;, plot.title=element_text(size=18), axis.text.y = element_text(size=14), axis.text.x = element_text(size=13), axis.title.x = element_text(size=14.5)) }) } shinyApp(ui = ui, server = server) Dabord, comme lors dun précédent exemple Shiny, lorsque le nom de la variable était de type string (chaîne de caractères) dans les choix du widget on avait dû utiliser la fonction aes_string() au lieu du simple aes() dans Ggplot ; ici, de même, on a dû utiliser un autre code quhabituellement pour appeler la variable input$variable dans la fonction group_by() : les doubles !! (appelés bang-bang) et la fonction sym(). Ce code fait plus précisément deux choses : il convertit dabord la chaîne de caractères fournie par input$variable en un symbole en utilisant la fonction sym(), puis il utilise lopérateur !! qui est une syntaxe dévaluation qui permet ici denlever les guillemets (unquoting), en gros il permet ici de dire à la fonction group_by OK, maintenant évalue lexpression que je tai donnée et substitue le bon résultat à la place. À savoir, on aurait pu aussi utiliser, à la place de group_by(), la fonction group_by_at() en appelant directement dans ce cas linput$variable dans les parenthèses. Il faut donc faire attention à la manière dont sont définis les choix de variables dans la fonction UI : si ce sont des chaînes de caractères (string) alors certaines fonctions de **R-base** ou de **tidyverse** ne pourront pas sy appliquer directement, il faudra soit transformer ces variables à laide notamment de la double-fonction !!sym(), soit trouver une fonction proche qui fonctionne avec ce type de variable string comme aes_string() dans **Ggpplot** ou group_by_at(). Ensuite, on a utilisé du langage html pour mettre des espaces entre le tableau et le graphique. Et, pour que le graphique soit adapté à la fenêtre et donc modifier sa taille, on a utilisé les options height= et width= indiquées dans la fonction plotOutput() (il est possible également de les indiquer à la fin de la fonction renderPlot({}) entre le { et la dernière )). Enfin, on a mis une fonction à lintérieur du labs() de Ggplot pour que le titre change selon la variable utilisée et quelle affiche un nom plus parlant que le nom de la variable. 12.2 Introduction dune réactivité appliquée à la table de données On peut rendre maintenant la base de données réactive avec la fonction reactive({}). On lavait vu, la fonction reactive() permet de créer un objet réactif qui est à la fois une entrée réactive et une sortie réactive, lobjet va donc se mettre à jour automatiquement si les entrées quil utilise changent, et il va automatiquement déclencher la mise à jour des sorties où il est utilisé. La fonction permet techniquement de décomposer du code réactif et est utile lorsque certaines parties du code sont utilisées par plusieurs output car elle va permettre alors déviter des redondances. Cela peut être le cas lorsquon doit filtrer et/ou sélectionner des mêmes variables en input pour plusieurs outputs. Ici, on va décomposer la partie data du code précédent de la partie construction du graphique ; le rendu sera strictement le même ; mais cela peut être plus efficace en cas de long code et dapplication complexe car en gros on va exécuter quune seule fois lopération data réalisée ici. Attention, la base réactive créée est une fonction, il faut donc lappeler avec des parenthèses ! # Chargement des librairies library(shiny) library(tidyverse) library(gt) library(RColorBrewer) library(forcats) # Chargement du fichier final #dt_aidesCovid &lt;- readRDS(&quot;data/dt_aidesCovid.RData&quot;) # Définition UI et Server de l&#39;application Shiny ui &lt;- fluidPage( # Titre de l&#39;application titlePanel(&quot;Aides aux entreprises versées par le fond de solidarité durant la crise du Covid-19&quot;), # Définition du Widget sidebarLayout( sidebarPanel( selectInput(inputId = &quot;variable&quot;, label = &quot;Choix de la variable pour le graphique &#39;Top 5&#39; des aides versées&quot;, choices = list(&quot;Région&quot;=&quot;reg_name&quot;, &quot;Secteur d&#39;activité&quot;=&quot;naf_section_name&quot;), selected = &quot;Secteur d&#39;activité&quot;) ), # Tableau et graphe montré à l&#39;utilisateur mainPanel( gt_output(&quot;tab&quot;), br(), br(), br(), plotOutput(&quot;barplot&quot;, height = 550, width = 750) ) ) ) server &lt;- function(input, output) { output$tab &lt;- render_gt({ dt_aidesCovid %&gt;% summarise(&quot;Montant total en millions d&#39;euros&quot;=sum(total_meuros), &quot;Nombre total d&#39;aides versées&quot;=sum(financial_support_count), &quot;Nombre total d&#39;entreprises concernées&quot;=sum(nombre_entreprises)) %&gt;% gt() %&gt;% fmt_number(columns= 1:3, sep_mark = &quot; &quot;, decimals = 0) %&gt;% tab_header(title=md(&#39;**Principaux indicateurs nationaux**&#39;)) }) aidesCovid_react &lt;- reactive({ dt_aidesCovid %&gt;% group_by(!!sym(input$variable)) %&gt;% summarise(montant_total = round(sum(total_meuros))) %&gt;% arrange(desc(montant_total)) %&gt;% slice(1:5) }) output$barplot &lt;- renderPlot({ aidesCovid_react() %&gt;% ggplot() + aes(x = montant_total, y = fct_reorder(!!sym(input$variable), montant_total), fill=!!sym(input$variable)) + geom_bar(stat=&quot;identity&quot;) + geom_text(aes(label=montant_total), position = position_stack(vjust=0.5), size=5) + labs(title=paste(&quot;Top 5 des aides financières versées par le fond de \\nsolidarité, réparties par&quot;, if(input$variable==&quot;reg_name&quot;){&quot;région&quot;} else {&quot;secteur d&#39;activité&quot;}), x = &quot;Montant total en millions d&#39;euros&quot;, y = &quot; &quot;) + scale_fill_brewer(palette=&quot;Set2&quot;) + theme_classic() + theme(legend.position = &quot;none&quot;, plot.title=element_text(size=18), axis.text.y = element_text(size=14), axis.text.x = element_text(size=13), axis.title.x = element_text(size=14.5)) }) } shinyApp(ui = ui, server = server) 12.3 Introduction dune réactivité sur les inputs sans changer les outputs (contexte réactif) On va essayer dajouter un nouveau widget pour choisir le niveau danalyse : - national, où lon montre le tableau général précédent et le graphique selon la région ou le secteur dactivité ; - régional, où lon montre le tableau général en haut (qui reste identique) et le graphique en bas qui varie cette fois selon le département ou le secteur dactivité. On peut pour cela utiliser la fonction observe() : on lutilise donc quand un input change mais sans changer doutput. Il va falloir ici utiliser à lintérieur de la fonction observe() une condition if ... else ... car on veut que : on part du principe quon affiche dabord automatiquement le niveau National, puis lorsque lutilisateur appuie sur le bouton Régional du nouveau widget radioButtons, le widget selectInput doit être actualisé en permettant un choix entre cette fois le département ou le secteur dactivité, et enfin lorsquil revient sur le bouton National du radioButtons, le selectInput doit reprendre ses valeurs initiales. Il faut donc utiliser la fonction observe(), une condition if ... else ... et une actualisation des widgets avec la fonction updateSelectInput(). Limage suivante vous donne un aperçu de ce quon devrait avoir : # Chargement des librairies library(shiny) library(tidyverse) library(gt) library(RColorBrewer) library(forcats) # Chargement du fichier final #dt_aidesCovid &lt;- readRDS(&quot;data/dt_aidesCovid.RData&quot;) # Définition UI et Server de l&#39;application Shiny ui &lt;- fluidPage( # Titre de l&#39;application titlePanel(&quot;Aides aux entreprises versées par le fond de solidarité durant la crise du Covid-19&quot;), # Définition du Widget sidebarLayout( sidebarPanel( radioButtons(inputId = &quot;niveau_analyse&quot;, label = &quot;Choix du niveau d&#39;analyse pour le graphique &#39;Top 5 des aides versées&#39;&quot;, choices = c(&quot;National&quot;, &quot;Régional&quot;), selected = &quot;National&quot;), selectInput(inputId = &quot;variable&quot;, label=&quot;Choix de la variable pour le graphique &#39;Top 5 des aides versées&#39;&quot;, choices = list(&quot;Région&quot;=&quot;reg_name&quot;, &quot;Secteur d&#39;activité&quot;=&quot;naf_section_name&quot;), selected = &quot;Région&quot;) ), # Tableau et graphe montré à l&#39;utilisateur mainPanel( gt_output(&quot;tab&quot;), br(), br(), br(), plotOutput(&quot;barplot&quot;, height = 550, width = 750) ) ) ) server &lt;- function(input, output) { output$tab &lt;- render_gt({ dt_aidesCovid %&gt;% summarise(&quot;Montant total en millions d&#39;euros&quot;=sum(total_meuros), &quot;Nombre total d&#39;aides versées&quot;=sum(financial_support_count), &quot;Nombre total d&#39;entreprises concernées&quot;=sum(nombre_entreprises)) %&gt;% gt() %&gt;% fmt_number(columns= 1:3, sep_mark = &quot; &quot;, decimals = 0) %&gt;% tab_header(title=md(&#39;**Principaux indicateurs nationaux**&#39;)) }) observe({ input$niveau_analyse if(input$niveau_analyse == &quot;Régional&quot;){ updateSelectInput(inputId = &quot;variable&quot;, choices = list(&quot;Département&quot;=&quot;dep_name&quot;,&quot;Secteur d&#39;activité&quot;=&quot;naf_section_name&quot;), selected = &quot;Département&quot;) } else {updateSelectInput(inputId = &quot;variable&quot;, choices = list(&quot;Région&quot;=&quot;reg_name&quot;, &quot;Secteur d&#39;activité&quot;=&quot;naf_section_name&quot;), selected = input$variable) } }) aidesCovid_react &lt;- reactive({ dt_aidesCovid %&gt;% group_by(!!sym(input$variable)) %&gt;% summarise(montant_total = round(sum(total_meuros))) %&gt;% arrange(desc(montant_total)) %&gt;% slice(1:5) }) output$barplot &lt;- renderPlot({ aidesCovid_react() %&gt;% ggplot() + aes(x = montant_total, y = fct_reorder(!!sym(input$variable), montant_total), fill=!!sym(input$variable)) + geom_bar(stat=&quot;identity&quot;) + geom_text(aes(label=montant_total), position = position_stack(vjust=0.5), size=5) + labs(title=paste(&quot;Top 5 des aides financières versées par le fond de \\nsolidarité, réparties par&quot;, if(input$variable==&quot;reg_name&quot;){&quot;région&quot;} else if (input$variable==&quot;naf_section_name&quot;){&quot;secteur d&#39;activité&quot;} else{&quot;département&quot;}), x = &quot;Montant total en millions d&#39;euros&quot;, y = &quot; &quot;) + scale_fill_brewer(palette=&quot;Set2&quot;) + theme_classic() + theme(legend.position = &quot;none&quot;, plot.title=element_text(size=18), axis.text.y = element_text(size=14), axis.text.x = element_text(size=13), axis.title.x = element_text(size=14.5)) }) } shinyApp(ui = ui, server = server) 12.4 Introduction dune réactivité sur les inputs ET les outputs Dans la continuité, on souhaite changer le graphique pour que lorsquon se situe au niveau régional, on ait cette fois le graphique du Top 5 des aides versées selon les départements de la région choisie, alors que précédemment cela nous indiquait les 5 premiers départements toutes régions confondues. Il faut donc dabord ajouter un widget selectInput qui initialement (lorsquon est au niveau National) ne prenne aucune valeur, mais lorsquon sera sur le niveau régional, on lactualise pour avoir le choix dune région. Il faut donc dans la fonction observe() actualiser 2 widgets maintenant. Ensuite, on va modifier notre base de données réactive en ajoutant un filtre selon la région choisie : mais ce filtre ne doit sappliquer que lorsque lutilisateur est au niveau Régional, il faut pour cela introduire dans la fonction filter() une condition if(input$niveau_analyse == \"Régional\") (reg_name %in% input$choix_region) else TRUE. Limage suivante vous donne un aperçu de ce quon devrait avoir : # Chargement des librairies library(shiny) library(tidyverse) library(gt) library(RColorBrewer) library(forcats) # Chargement du fichier final #dt_aidesCovid &lt;- readRDS(&quot;data/dt_aidesCovid.RData&quot;) # Définition UI et Server de l&#39;application Shiny ui &lt;- fluidPage( # Titre de l&#39;application titlePanel(&quot;Aides aux entreprises versées par le fond de solidarité durant la crise du Covid-19&quot;), # Définition du Widget sidebarLayout( sidebarPanel( radioButtons(inputId = &quot;niveau_analyse&quot;, label = &quot;Choix du niveau d&#39;analyse pour le graphique &#39;Top 5 des aides versées&#39;&quot;, choices = c(&quot;National&quot;, &quot;Régional&quot;), selected = &quot;National&quot;), selectInput(inputId = &quot;choix_region&quot;, label = &quot;Choix de la région si le niveau d&#39;analyse est régional&quot;, choices = &quot; &quot;, selected = &quot; &quot;), selectInput(inputId = &quot;variable&quot;, label=&quot;Choix de la variable pour le graphique &#39;Top 5 des aides versées&#39;&quot;, choices = list(&quot;Région&quot;=&quot;reg_name&quot;, &quot;Secteur d&#39;activité&quot;=&quot;naf_section_name&quot;), selected = &quot;Région&quot;) ), # Tableau et graphe montré à l&#39;utilisateur mainPanel( gt_output(&quot;tab&quot;), br(), br(), br(), plotOutput(&quot;barplot&quot;, height = 550, width = 750) ) ) ) server &lt;- function(input, output) { output$tab &lt;- render_gt({ dt_aidesCovid %&gt;% summarise(&quot;Montant total en millions d&#39;euros&quot;=sum(total_meuros), &quot;Nombre total d&#39;aides versées&quot;=sum(financial_support_count), &quot;Nombre total d&#39;entreprises concernées&quot;=sum(nombre_entreprises)) %&gt;% gt() %&gt;% fmt_number(columns= 1:3, sep_mark = &quot; &quot;, decimals = 0) %&gt;% tab_header(title=md(&#39;**Principaux indicateurs nationaux**&#39;)) }) observe({ input$niveau_analyse if(input$niveau_analyse == &quot;Régional&quot;){ updateSelectInput(inputId = &quot;choix_region&quot;, label = &quot;Choix de la région si le niveau d&#39;analyse est régional&quot;, choices = unique(dt_aidesCovid$reg_name), selected = &quot;Île-de-France&quot;) updateSelectInput(inputId = &quot;variable&quot;, choices = list(&quot;Département&quot;=&quot;dep_name&quot;, &quot;Secteur d&#39;activité&quot;=&quot;naf_section_name&quot;), selected = &quot;Secteur d&#39;activité&quot;) } else { updateSelectInput(inputId = &quot;variable&quot;, choices = list(&quot;Région&quot;=&quot;reg_name&quot;, &quot;Secteur d&#39;activité&quot;=&quot;naf_section_name&quot;), selected = input$variable) updateSelectInput(inputId = &quot;choix_region&quot;, label = &quot;Choix de la région si le niveau d&#39;analyse est régional&quot;, choices = &quot; &quot;, selected = &quot; &quot;) } }) aidesCovid_reactfilt &lt;- reactive({ dt_aidesCovid %&gt;% filter(if(input$niveau_analyse == &quot;Régional&quot;) (reg_name %in% input$choix_region) else TRUE) %&gt;% group_by(!!sym(input$variable)) %&gt;% summarise(montant_total = round(sum(total_meuros))) %&gt;% arrange(desc(montant_total)) %&gt;% slice(1:5) }) output$barplot &lt;- renderPlot({ aidesCovid_reactfilt() %&gt;% ggplot() + aes(x = montant_total, y = fct_reorder(!!sym(input$variable), montant_total), fill=!!sym(input$variable)) + geom_bar(stat=&quot;identity&quot;) + geom_text(aes(label=montant_total), position = position_stack(vjust=0.5), size=5) + labs(title=paste(&quot;Top 5 des aides financières versées par le fond de \\nsolidarité, réparties par&quot;, if(input$variable==&quot;reg_name&quot;){&quot;région&quot;} else if (input$variable==&quot;naf_section_name&quot;){&quot;secteur d&#39;activité&quot;} else {&quot;département&quot;}), x = &quot;Montant total en millions d&#39;euros&quot;, y = &quot; &quot;) + scale_fill_brewer(palette=&quot;Set2&quot;) + theme_classic() + theme(legend.position = &quot;none&quot;, plot.title=element_text(size=18), axis.text.y = element_text(size=14), axis.text.x = element_text(size=13), axis.title.x = element_text(size=14.5)) }) } shinyApp(ui = ui, server = server) Pour que cela soit encore plus pertinent, on va également modifier le tableau général des indicateurs pour quil soit, lui aussi, réactif selon le niveau danalyse choisi. On va utiliser la fonction observeEvent() avec une condition if ... else ... pour que le tableau change selon le filtre de la région. Si lon ne veut pas mettre une telle condition dans la fonction observeEvent(), il faut créer un base réactive comme précédemment. Limage suivante vous donne un aperçu de ce quon devrait avoir : # Chargement des librairies library(shiny) library(tidyverse) library(gt) library(RColorBrewer) library(forcats) # Chargement du fichier final #dt_aidesCovid &lt;- readRDS(&quot;data/dt_aidesCovid.RData&quot;) # Définition UI et Server de l&#39;application Shiny ui &lt;- fluidPage( # Titre de l&#39;application titlePanel(&quot;Aides aux entreprises versées par le fond de solidarité durant la crise du Covid-19&quot;), # Définition du Widget sidebarLayout( sidebarPanel( radioButtons(inputId = &quot;niveau_analyse&quot;, label = &quot;Choix du niveau d&#39;analyse pour le graphique &#39;Top 5 des aides versées&#39;&quot;, choices = c(&quot;National&quot;, &quot;Régional&quot;), selected = &quot;National&quot;), selectInput(inputId = &quot;choix_region&quot;, label = &quot;Choix de la région si le niveau d&#39;analyse est régional&quot;, choices = &quot; &quot;, selected = &quot; &quot;), selectInput(inputId = &quot;variable&quot;, label=&quot;Choix de la variable pour le graphique &#39;Top 5 des aides versées&#39;&quot;, choices = list(&quot;Région&quot;=&quot;reg_name&quot;, &quot;Secteur d&#39;activité&quot;=&quot;naf_section_name&quot;), selected = &quot;Région&quot;) ), # Tableau et graphe montré à l&#39;utilisateur mainPanel( gt_output(&quot;tab&quot;), br(), br(), br(), plotOutput(&quot;barplot&quot;, height = 550, width = 750) ) ) ) server &lt;- function(input, output, session) { observe({ input$niveau_analyse if(input$niveau_analyse == &quot;Régional&quot;){ updateSelectInput(inputId = &quot;choix_region&quot;, label = &quot;Choix de la région si le niveau d&#39;analyse est régional&quot;, choices = unique(dt_aidesCovid$reg_name), selected = &quot;Île-de-France&quot;) updateSelectInput(inputId = &quot;variable&quot;, session = session, choices = list(&quot;Département&quot;=&quot;dep_name&quot;,&quot;Secteur d&#39;activité&quot;=&quot;naf_section_name&quot;), selected = &quot;Secteur d&#39;activité&quot;) } else {updateSelectInput(inputId = &quot;variable&quot;, session = session, choices = list(&quot;Région&quot;=&quot;reg_name&quot;, &quot;Secteur d&#39;activité&quot;=&quot;naf_section_name&quot;), selected = input$variable) updateSelectInput(inputId = &quot;choix_region&quot;, label = &quot;Choix de la région si le niveau d&#39;analyse est régional&quot;, choices = &quot; &quot;, selected = &quot; &quot;) } }) observeEvent(input$niveau_analyse, if(input$niveau_analyse == &quot;National&quot;){ output$tab &lt;- render_gt({ dt_aidesCovid %&gt;% summarise(&quot;Montant total en millions d&#39;euros&quot;=sum(total_meuros), &quot;Nombre total d&#39;aides versées&quot;=sum(financial_support_count), &quot;Nombre total d&#39;entreprises concernées&quot;=sum(nombre_entreprises)) %&gt;% gt() %&gt;% fmt_number(columns = 1:3, sep_mark = &quot; &quot;, decimals = 0) %&gt;% tab_header(title=md(&#39;**Principaux indicateurs nationaux**&#39;)) }) } else{output$tab &lt;- render_gt({ dt_aidesCovid %&gt;% filter(reg_name %in% input$choix_region) %&gt;% summarise(&quot;Montant total en millions d&#39;euros&quot;=sum(total_meuros), &quot;Nombre total d&#39;aides versées&quot;=sum(financial_support_count), &quot;Nombre total d&#39;entreprises concernées&quot;=sum(nombre_entreprises)) %&gt;% gt() %&gt;% fmt_number(columns = 1:3, sep_mark = &quot; &quot;, decimals = 0) %&gt;% tab_header(title=md(&#39;**Principaux indicateurs régionaux**&#39;)) }) } ) aidesCovid_reactfilt &lt;- reactive({ dt_aidesCovid %&gt;% filter(if(input$niveau_analyse == &quot;Régional&quot;) (reg_name %in% input$choix_region) else TRUE) %&gt;% group_by(!!sym(input$variable)) %&gt;% summarise(montant_total = round(sum(total_meuros))) %&gt;% arrange(desc(montant_total)) %&gt;% slice(1:5) }) output$barplot &lt;- renderPlot({ aidesCovid_reactfilt() %&gt;% ggplot() + aes(x = montant_total, y = fct_reorder(!!sym(input$variable), montant_total), fill=!!sym(input$variable)) + geom_bar(stat=&quot;identity&quot;) + geom_text(aes(label=montant_total), position = position_stack(vjust=0.5), size=5) + labs(title=paste(&quot;Top 5 des aides financières versées par le fond de \\nsolidarité, réparties par&quot;, if(input$variable==&quot;reg_name&quot;){&quot;région&quot;} else if (input$variable==&quot;naf_section_name&quot;){&quot;secteur d&#39;activité&quot;} else{&quot;département&quot;}), x = &quot;Montant total en millions d&#39;euros&quot;, y = &quot; &quot;) + scale_fill_brewer(palette=&quot;Set2&quot;) + theme_classic() + theme(legend.position = &quot;none&quot;, plot.title=element_text(size=18), axis.text.y = element_text(size=14), axis.text.x = element_text(size=13), axis.title.x = element_text(size=14.5)) }) } shinyApp(ui = ui, server = server) "],["13-Base-individus-RP.html", "Section 13 Nouvelle base de données individuelles à prendre en main : le RP 2018 13.1 Les données du Recensement de la Population (RP) 13.2 Prise en main rapide 13.3 Tableaux de contingence par IRIS (découpage territorial infracommunal)", " Section 13 Nouvelle base de données individuelles à prendre en main : le RP 2018 13.1 Les données du Recensement de la Population (RP) Il existe plusieurs fichiers disponibles sur le site de lInsee concernant lenquête du Recensement de la Population, la dernière année disponible datant de 2018. Ces fichiers sont lourds, ils peuvent être téléchargés par zone, cest ce que nous allons faire. On va ainsi sintéresser au fichier Individus localisés au canton-ou-ville pour la zone A, cest-à-dire lÎle-de-France. Soit vous téléchargez le fichier via internet et lenregistrez dans un de vos dossiers bien spécifiés et vous le dézippez, soit vous le téléchargez et dézipper directement dans R comme cela : download.file(url=&quot;https://www.insee.fr/fr/statistiques/fichier/5542859/RP2018_INDCVIZA_csv.zip&quot;, destfile = &quot;data/RP2018_INDCVIZA_csv.zip&quot;) # Le fichier a donc été téléchargé dans le dossier intitulé &quot;data&quot; du projet R, on va # maintenant le dézipper et enregistrer les fichiers extraits dans le même dossier. unzip(&quot;data/RP2018_INDCVIZA_csv.zip&quot;, exdir = &quot;data&quot;) Il nous reste plus quà charger les données dans R : pour cela on utilise la commande fread du package data.table (à installer avant) car cela va bien plus vite que les fonctions habituelles du type read.csv lorsquon a de gros fichiers comme cela ; on indique loption stringsAsFactors=TRUE pour que les variables caractères soient directement transformées en variables factor, et on transforme lobjet obtenu en data.frame. # install.packages(&quot;data.table&quot;) library(data.table) RP &lt;- fread(&quot;data/FD_INDCVIZA_2018.csv&quot;, stringsAsFactors=TRUE) RP &lt;- as.data.frame(RP) On a donc 65 variables et 4 355 977 observations. On va faire un premier tri dans les variables pour ne garder que celles concernant lindividu et le logement, ainsi que les variables géographiques, qui nous seront utiles pour la suite. RP &lt;- RP %&gt;% select(-c(&quot;AGED&quot;,&quot;AGEREV&quot;,&quot;ANAI&quot;, &quot;LPRF&quot;,&quot;ORIDT&quot;, &quot;NUMMI&quot;, &quot;DEROU&quot;, &quot;INFAM&quot;, &quot;INPER&quot;, &quot;NPERR&quot;, &quot;SFM&quot;, &quot;TYPMC&quot;, &quot;TYPMR&quot;, &quot;VOIT&quot;, &quot;INPERF&quot;, &quot;LIENF&quot;, &quot;NE17FR&quot;, &quot;NE24FR&quot;, &quot;NE3FR&quot;, &quot;NE5FR&quot;, &quot;NENFR&quot;, &quot;NUMF&quot;, &quot;TYPFC&quot;)) Certaines des variables ont été codées comme numériques alors que, selon le dictionnaire des variables, elles devraient être toutes en caractères ou ici dans R en factor, on va regarder quelles variables sont concernées et on va les transformer pour quelles soient dans le bon format. On peut utiliser la fonction select_if déjà vue précédemment. RP %&gt;% select_if(is.numeric) %&gt;% names() On en a 23 sur 88, mais attention il y a la variable de pondération IPONDI qui, elle, doit rester numérique, donc on peut procéder au changement de type pour lensemble de ces variables sauf celle de pondération, avec la fonction mutate_at en spécifiant lensemble des variables concernées (copiées-collées depuis la sortie précédente en veillant bien sûr à bien enlever IPONDI). RP &lt;- RP %&gt;% mutate_at(c(&quot;AGER20&quot;, &quot;AGEREVQ&quot;, &quot;CATPC&quot;, &quot;COUPLE&quot;, &quot;CS1&quot;, &quot;DEPT&quot;, &quot;ETUD&quot;, &quot;IMMI&quot;, &quot;INAI&quot;, &quot;INATC&quot;, &quot;MOCO&quot;, &quot;MODV&quot;, &quot;NAIDT&quot;, &quot;REGION&quot;, &quot;SEXE&quot;, &quot;STAT_CONJ&quot;,&quot;TACT&quot;, &quot;TACTD16&quot;), factor) On peut enregistrer ce fichier, ainsi que celui contenant les métadonnées, dans le dossier R au format RDS. saveRDS(object = RP, file = &quot;data/indiv2018.Rdata&quot;) # Lecture du fichier de métadonnées et enregistrement dans le dossier data # de notre projet library(data.table) meta &lt;- fread(&quot;data/varmod_INDCVI_2018.csv&quot;) # Enregistrement dans le dossier data saveRDS(object = meta, file = &quot;data/indiv_2018_meta.Rdata&quot;) 13.2 Prise en main rapide Lune des difficultés pour lanalyse de cette base de données réside dans les différents niveaux présents : individu pour la personne de référence du ménage ; ménage regroupant lensemble des occupants dune résidence principale, quils aient ou non des liens de parenté ; famille partie dun ménage comprenant au moins 2 personnes (par exemple, un couple, ou un adulte avec un enfant) ; et enfin logement qui comprend ici les résidences principales et rassemble des informations décrivant les types de logement. Avec le tri effectué précédemment, nous navons plus que les variables décrivant le logement, celles décrivant lindividu et les variables géographiques. Il faut bien comprendre comment utiliser à bon escient ces différents niveaux, en particulier ici le niveau logement : pour toute variable de ce niveau, il faudra utiliser un filtre, cest-à-dire ne prendre que la personne de référence du ménage (LPRM==\"1\"). Il faut également penser que les données sont pondérées, donc pour sortir des statistiques descriptives, il faut à chaque fois mettre la variable de pondération IPONDI. Par exemple, si lon souhaite décrire le type de logement existant dans cette région : #library(forcats) #library(gt) RP %&gt;% filter(LPRM==&quot;1&quot;) %&gt;% mutate(type_logement = case_when(TYPL==&quot;1&quot; ~ &quot;Maisons&quot;, TYPL==&quot;2&quot; ~ &quot;Appartements&quot;, TRUE ~ &quot;Autres&quot;)) %&gt;% count(type_logement, wt=IPONDI) %&gt;% mutate(pct=prop.table(n)*100, pct=round(pct, 1), n=round(n,0)) %&gt;% arrange(desc(n)) %&gt;% gt() %&gt;% fmt_number(columns = 2, sep_mark = &quot; &quot;, decimals = 0) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #qcvhnmuupf .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #qcvhnmuupf .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #qcvhnmuupf .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #qcvhnmuupf .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #qcvhnmuupf .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #qcvhnmuupf .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #qcvhnmuupf .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #qcvhnmuupf .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #qcvhnmuupf .gt_column_spanner_outer:first-child { padding-left: 0; } #qcvhnmuupf .gt_column_spanner_outer:last-child { padding-right: 0; } #qcvhnmuupf .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #qcvhnmuupf .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #qcvhnmuupf .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #qcvhnmuupf .gt_from_md > :first-child { margin-top: 0; } #qcvhnmuupf .gt_from_md > :last-child { margin-bottom: 0; } #qcvhnmuupf .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #qcvhnmuupf .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #qcvhnmuupf .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #qcvhnmuupf .gt_row_group_first td { border-top-width: 2px; } #qcvhnmuupf .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #qcvhnmuupf .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #qcvhnmuupf .gt_first_summary_row.thick { border-top-width: 2px; } #qcvhnmuupf .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #qcvhnmuupf .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #qcvhnmuupf .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #qcvhnmuupf .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #qcvhnmuupf .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #qcvhnmuupf .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #qcvhnmuupf .gt_footnote { margin: 0px; font-size: 90%; padding-left: 4px; padding-right: 4px; padding-left: 5px; padding-right: 5px; } #qcvhnmuupf .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #qcvhnmuupf .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #qcvhnmuupf .gt_left { text-align: left; } #qcvhnmuupf .gt_center { text-align: center; } #qcvhnmuupf .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #qcvhnmuupf .gt_font_normal { font-weight: normal; } #qcvhnmuupf .gt_font_bold { font-weight: bold; } #qcvhnmuupf .gt_font_italic { font-style: italic; } #qcvhnmuupf .gt_super { font-size: 65%; } #qcvhnmuupf .gt_two_val_uncert { display: inline-block; line-height: 1em; text-align: right; font-size: 60%; vertical-align: -0.25em; margin-left: 0.1em; } #qcvhnmuupf .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 75%; vertical-align: 0.4em; } #qcvhnmuupf .gt_asterisk { font-size: 100%; vertical-align: 0; } #qcvhnmuupf .gt_slash_mark { font-size: 0.7em; line-height: 0.7em; vertical-align: 0.15em; } #qcvhnmuupf .gt_fraction_numerator { font-size: 0.6em; line-height: 0.6em; vertical-align: 0.45em; } #qcvhnmuupf .gt_fraction_denominator { font-size: 0.6em; line-height: 0.6em; vertical-align: -0.05em; } type_logement n pct Appartements 3 732 340 71.5 Maisons 1 407 342 26.9 Autres 82 501 1.6 Ou connaître le nombre dhabitants de la région, puis selon le département : RP %&gt;% summarise(Nombre_habitants = sum(IPONDI)) %&gt;% gt() %&gt;% fmt_number(columns = 1, sep_mark = &quot; &quot;, decimals = 0) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #zbwssfffkx .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #zbwssfffkx .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #zbwssfffkx .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #zbwssfffkx .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #zbwssfffkx .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #zbwssfffkx .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #zbwssfffkx .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #zbwssfffkx .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #zbwssfffkx .gt_column_spanner_outer:first-child { padding-left: 0; } #zbwssfffkx .gt_column_spanner_outer:last-child { padding-right: 0; } #zbwssfffkx .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #zbwssfffkx .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #zbwssfffkx .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #zbwssfffkx .gt_from_md > :first-child { margin-top: 0; } #zbwssfffkx .gt_from_md > :last-child { margin-bottom: 0; } #zbwssfffkx .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #zbwssfffkx .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #zbwssfffkx .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #zbwssfffkx .gt_row_group_first td { border-top-width: 2px; } #zbwssfffkx .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #zbwssfffkx .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #zbwssfffkx .gt_first_summary_row.thick { border-top-width: 2px; } #zbwssfffkx .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #zbwssfffkx .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #zbwssfffkx .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #zbwssfffkx .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #zbwssfffkx .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #zbwssfffkx .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #zbwssfffkx .gt_footnote { margin: 0px; font-size: 90%; padding-left: 4px; padding-right: 4px; padding-left: 5px; padding-right: 5px; } #zbwssfffkx .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #zbwssfffkx .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #zbwssfffkx .gt_left { text-align: left; } #zbwssfffkx .gt_center { text-align: center; } #zbwssfffkx .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #zbwssfffkx .gt_font_normal { font-weight: normal; } #zbwssfffkx .gt_font_bold { font-weight: bold; } #zbwssfffkx .gt_font_italic { font-style: italic; } #zbwssfffkx .gt_super { font-size: 65%; } #zbwssfffkx .gt_two_val_uncert { display: inline-block; line-height: 1em; text-align: right; font-size: 60%; vertical-align: -0.25em; margin-left: 0.1em; } #zbwssfffkx .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 75%; vertical-align: 0.4em; } #zbwssfffkx .gt_asterisk { font-size: 100%; vertical-align: 0; } #zbwssfffkx .gt_slash_mark { font-size: 0.7em; line-height: 0.7em; vertical-align: 0.15em; } #zbwssfffkx .gt_fraction_numerator { font-size: 0.6em; line-height: 0.6em; vertical-align: 0.45em; } #zbwssfffkx .gt_fraction_denominator { font-size: 0.6em; line-height: 0.6em; vertical-align: -0.05em; } Nombre_habitants 12 213 147 RP %&gt;% group_by(DEPT) %&gt;% summarise(Nombre_habitants = sum(IPONDI)) %&gt;% gt() %&gt;% fmt_number(columns = 2, sep_mark = &quot; &quot;, decimals = 0) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #ptwzvivsuk .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #ptwzvivsuk .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #ptwzvivsuk .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #ptwzvivsuk .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #ptwzvivsuk .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ptwzvivsuk .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #ptwzvivsuk .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #ptwzvivsuk .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #ptwzvivsuk .gt_column_spanner_outer:first-child { padding-left: 0; } #ptwzvivsuk .gt_column_spanner_outer:last-child { padding-right: 0; } #ptwzvivsuk .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #ptwzvivsuk .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #ptwzvivsuk .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #ptwzvivsuk .gt_from_md > :first-child { margin-top: 0; } #ptwzvivsuk .gt_from_md > :last-child { margin-bottom: 0; } #ptwzvivsuk .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #ptwzvivsuk .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #ptwzvivsuk .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #ptwzvivsuk .gt_row_group_first td { border-top-width: 2px; } #ptwzvivsuk .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #ptwzvivsuk .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #ptwzvivsuk .gt_first_summary_row.thick { border-top-width: 2px; } #ptwzvivsuk .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ptwzvivsuk .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #ptwzvivsuk .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #ptwzvivsuk .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #ptwzvivsuk .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ptwzvivsuk .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #ptwzvivsuk .gt_footnote { margin: 0px; font-size: 90%; padding-left: 4px; padding-right: 4px; padding-left: 5px; padding-right: 5px; } #ptwzvivsuk .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #ptwzvivsuk .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #ptwzvivsuk .gt_left { text-align: left; } #ptwzvivsuk .gt_center { text-align: center; } #ptwzvivsuk .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #ptwzvivsuk .gt_font_normal { font-weight: normal; } #ptwzvivsuk .gt_font_bold { font-weight: bold; } #ptwzvivsuk .gt_font_italic { font-style: italic; } #ptwzvivsuk .gt_super { font-size: 65%; } #ptwzvivsuk .gt_two_val_uncert { display: inline-block; line-height: 1em; text-align: right; font-size: 60%; vertical-align: -0.25em; margin-left: 0.1em; } #ptwzvivsuk .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 75%; vertical-align: 0.4em; } #ptwzvivsuk .gt_asterisk { font-size: 100%; vertical-align: 0; } #ptwzvivsuk .gt_slash_mark { font-size: 0.7em; line-height: 0.7em; vertical-align: 0.15em; } #ptwzvivsuk .gt_fraction_numerator { font-size: 0.6em; line-height: 0.6em; vertical-align: 0.45em; } #ptwzvivsuk .gt_fraction_denominator { font-size: 0.6em; line-height: 0.6em; vertical-align: -0.05em; } DEPT Nombre_habitants 75 2 175 768 77 1 412 542 78 1 441 063 91 1 296 367 92 1 619 438 93 1 632 615 94 1 396 676 95 1 238 678 13.3 Tableaux de contingence par IRIS (découpage territorial infracommunal) Dans lanalyse de clustering que nous allons réaliser ensuite, nous souhaitons décrire la population dun département ou commune selon ses caractéristiques socio-démographiques et socio-professionnelles au niveau territorial le plus fin, autrement dit lIRIS. Pour cela, il faut établir des statistiques du nombre de personnes concernées pour chaque caractéristique par IRIS du département ou de la commune choisie : on crée ainsi des tableaux de contingence par IRIS pour chacune de ces caractéristiques. Par exemple, pour connaître le nombre de chômeurs par IRIS du 12ème arrondissement de Paris, il faut : i) utiliser le code IRIS et récupérer les 5 premiers chiffres pour avoir le niveau commune (pour Paris, Marseille ou Lyon, on peut également utiliser la variable ARM), ii) filtrer pour navoir que les personnes dont lactivité est chômeur (TACT == \"12\") et la commune correspondant au 12ème arrondissement, et iii) calculer la somme par IRIS : RP %&gt;% mutate(COM = substr(IRIS, 1, 5)) %&gt;% filter(TACT == &quot;12&quot; &amp; COM == &quot;75112&quot;) %&gt;% # ou ARM == &quot;75112&quot; group_by(IRIS) %&gt;% summarise(nb_chômeurs = round(sum(IPONDI))) # A tibble: 57 x 2 IRIS nb_chômeurs &lt;fct&gt; &lt;dbl&gt; 1 751124501 252 2 751124502 268 3 751124503 133 4 751124504 113 5 751124505 145 6 751124506 144 7 751124507 123 8 751124508 129 9 751124509 89 10 751124510 179 # ... with 47 more rows Si on veut englober les arrondissements de lEst parisien (11ème, 12ème et 20ème arrondissements de Paris) : RP %&gt;% mutate(COM = substr(IRIS, 1, 5)) %&gt;% filter(TACT == &quot;12&quot; &amp; COM %in% c(&quot;75111&quot;, &quot;75112&quot;, &quot;75120&quot;)) %&gt;% group_by(IRIS) %&gt;% summarise(nb_chômeurs = round(sum(IPONDI))) # A tibble: 192 x 2 IRIS nb_chômeurs &lt;fct&gt; &lt;dbl&gt; 1 751114101 274 2 751114102 215 3 751114103 143 4 751114104 133 5 751114105 111 6 751114106 132 7 751114107 185 8 751114108 136 9 751114109 216 10 751114110 171 # ... with 182 more rows Comme on va être amené à réaliser ces tableaux de contingence sur chaque caractéristique qui nous intéresse et que lon veut mettre en variable dentrée de lanalyse de clustering, on peut créer une fonction : cette fonction doit nous permettre davoir une somme par IRIS pour chaque variable quon utilisera dans notre analyse de clustering, selon que lon se situe au niveau du département ou au niveau de la commune pour se laisser ultérieurement le choix ; de même on utilisera les ... en argument de la fonction group_by car on pourra éventuellement avoir plusieurs variables de regroupement. La fonction que lon appelera sum_var_IRIS() pourra être la suivante : sum_var_IRIS &lt;- function(data, codedept, codecom, ..., nom_var) { var_sum &lt;- data %&gt;% mutate(COM = substr(IRIS,1,5)) %&gt;% filter(DEPT %in% codedept | COM %in% codecom) %&gt;% group_by(...) %&gt;% summarise({{ nom_var }} := round(sum(IPONDI))) return(var_sum) } Pour vérifier que la fonction tourne bien, on procède au même exemple que précédemment, pour Paris 12ème puis lEst parisien : RP %&gt;% sum_var_IRIS(codedept=&quot; &quot;, codecom = c(&quot;75111&quot;, &quot;75112&quot;, &quot;75120&quot;), IRIS, nom_var = nbhab) # A tibble: 193 x 2 IRIS nbhab &lt;fct&gt; &lt;dbl&gt; 1 751114101 3145 2 751114102 2335 3 751114103 1824 4 751114104 1547 5 751114105 1932 6 751114106 2622 7 751114107 2560 8 751114108 2333 9 751114109 2833 10 751114110 1646 # ... with 183 more rows RP %&gt;% filter(TACT == &quot;12&quot;) %&gt;% sum_var_IRIS(codedept=&quot; &quot;, codecom = c(&quot;75111&quot;, &quot;75112&quot;, &quot;75120&quot;), IRIS, nom_var = nbchom) # A tibble: 192 x 2 IRIS nbchom &lt;fct&gt; &lt;dbl&gt; 1 751114101 274 2 751114102 215 3 751114103 143 4 751114104 133 5 751114105 111 6 751114106 132 7 751114107 185 8 751114108 136 9 751114109 216 10 751114110 171 # ... with 182 more rows Il y a donc 193 IRIS dans lEst parisien et on voit bien quon a bien une ligne par IRIS (1ère colonne) et une (seconde) colonne renseignant du nombre dhabitants, puis du nombre de chômeurs. Mais pour des variables à plusieurs modalités, comme lâge ou la PCS, il faut ajouter une étape supplémentaire car on aura dabord plusieurs lignes (autant quil y a de modalités dans la variable) par IRIS. Par exemple, pour lâge avec la variable AGER20 : RP %&gt;% sum_var_IRIS(codedept = &quot; &quot;, codecom = c(&quot;75111&quot;, &quot;75112&quot;, &quot;75120&quot;), IRIS, AGER20, nom_var = Nb_age) `summarise()` has grouped output by &#39;IRIS&#39;. You can override using the `.groups` argument. # A tibble: 2,494 x 3 IRIS AGER20 Nb_age &lt;fct&gt; &lt;fct&gt; &lt;dbl&gt; 1 751114101 2 95 2 751114101 5 81 3 751114101 10 131 4 751114101 14 127 5 751114101 17 108 6 751114101 19 77 7 751114101 24 215 8 751114101 29 356 9 751114101 39 502 10 751114101 54 577 # ... with 2,484 more rows Il faut donc créer une autre fonction que lon va nommer tab_cont_n_iris pour créer un tableau de contingence avec une seule ligne par IRIS, et autant de colonnes quil y a de modalités dans cette variable. Pour cela, on peut utiliser la fonction pivot_wider() après la fonction déjà créée sum_var_IRIS(). sum_var_IRIS(RP, codedept = &quot; &quot;, codecom = c(&quot;75111&quot;, &quot;75112&quot;, &quot;75120&quot;), IRIS, AGER20, nom_var = Nb_age) %&gt;% pivot_wider(names_from = AGER20, values_from = Nb_age, values_fill = 0, names_prefix = &quot;age_&quot;) `summarise()` has grouped output by &#39;IRIS&#39;. You can override using the `.groups` argument. # A tibble: 193 x 14 IRIS age_2 age_5 age_10 age_14 age_17 age_19 age_24 age_29 age_39 age_54 &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; 1 751114101 95 81 131 127 108 77 215 356 502 577 2 751114102 60 34 42 39 39 38 205 407 531 429 3 751114103 54 33 80 59 43 63 123 301 354 315 4 751114104 54 23 72 40 21 23 146 277 323 288 5 751114105 60 77 54 45 36 24 128 274 377 375 6 751114106 71 96 115 58 62 61 151 362 480 595 7 751114107 74 50 73 57 34 43 167 519 550 483 8 751114108 75 72 75 75 76 38 147 290 456 535 9 751114109 61 55 89 67 64 93 348 428 562 535 10 751114110 56 30 69 52 36 30 120 275 332 334 # ... with 183 more rows, and 3 more variables: age_64 &lt;dbl&gt;, age_79 &lt;dbl&gt;, # age_80 &lt;dbl&gt; La fonction sécrira alors de cette façon : tab_cont_n_iris &lt;- function(data, codedept, codecom, ..., nom_var, var, prefix_var) { tab &lt;- sum_var_IRIS(data = data, codedept = codedept, codecom = codecom, ..., nom_var = nom_var) tab_n &lt;- tab %&gt;% pivot_wider(names_from = {{ var }}, values_from = nom_var, values_fill = 0, names_prefix = prefix_var) return(tab_n) } Pour la variable dâge, cela donnera : Nbage &lt;- tab_cont_n_iris(RP, codedept = &quot; &quot;, codecom = c(&quot;75111&quot;, &quot;75112&quot;, &quot;75120&quot;), IRIS, AGER20, nom_var = Nb_age, var = AGER20, prefix_var = &quot;age_&quot;) `summarise()` has grouped output by &#39;IRIS&#39;. You can override using the `.groups` argument. Nbage # A tibble: 193 x 14 IRIS age_2 age_5 age_10 age_14 age_17 age_19 age_24 age_29 age_39 age_54 &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; 1 751114101 95 81 131 127 108 77 215 356 502 577 2 751114102 60 34 42 39 39 38 205 407 531 429 3 751114103 54 33 80 59 43 63 123 301 354 315 4 751114104 54 23 72 40 21 23 146 277 323 288 5 751114105 60 77 54 45 36 24 128 274 377 375 6 751114106 71 96 115 58 62 61 151 362 480 595 7 751114107 74 50 73 57 34 43 167 519 550 483 8 751114108 75 72 75 75 76 38 147 290 456 535 9 751114109 61 55 89 67 64 93 348 428 562 535 10 751114110 56 30 69 52 36 30 120 275 332 334 # ... with 183 more rows, and 3 more variables: age_64 &lt;dbl&gt;, age_79 &lt;dbl&gt;, # age_80 &lt;dbl&gt; On se retrouve ainsi avec un tableau avec 193 lignes et 14 colonnes car la variable AGER20 a 13 modalités ; cest un peu trop, il faudra donc regrouper des modalités pour éviter davoir des catégories avec des effectifs trop faibles et parce que nous navons pas besoin dun niveau de détail si élevé. Avant de sélectionner les variables à partir desquelles on réalisera le clustering, revenons théoriquement sur les objectifs et la démarche de cette méthode danalyse de données. "],["14-Clustering-theorique.html", "Section 14 Clustering : aspects théoriques 14.1 La classification ascendante hiérarchique (CAH) 14.2 La méthode des centres mobiles et sa variante, les K-means", " Section 14 Clustering : aspects théoriques Les méthodes de clustering (ou typologie, ou segmentation, ou encore classification en français2) appartiennent à la famille des algorithmes dapprentissage non supervisé, car nous navons pas de variable de sortie ou variable-cible. Ce sont justement les algorithmes qui vont chercher à organiser les observations en groupes ou classes dit clusters en fonction de variables quantitatives choisies en entrée/input dans le modèle. Lalgorithme va ensuite chercher à ce que ces clusters soient à la fois le plus similaire possible à lintérieur/en leur sein (forte similarité intraclasse, on cherche alors à minimiser linertie intraclasse) et le plus distinctif/différent des autres groupes/classes (faible similarité interclasse, on parlera de maximisation de linertie interclasse). Ces observations peuvent être des individus, des entreprises, ou comme ici pour nous, un niveau territorial (lIRIS). Source : document de cours accessible ici http://iml.univ-mrs.fr/~reboul/ADD4-MAB.pdf Il y a deux principales méthodes de clustering : hiérarchique et non hiérarchique, la principale différence étant que pour la premiere on ne connaît pas par avance le nombre de groupes dans lesquels seront réparties nos observations ; alors que pour la seconde, on fixe au préalable le nombre de groupes. On va étudier ici deux exemples : pour le clustering hiérarchique, on va utiliser la méthode la plus courante - la classification ascendante hiérarchique (CAH) - qui utilise un algorithme ascendant, cest-à-dire agglomératif (les classes sont construites par agglomérations successives des objets deux à deux ; cette méthode soppose aux algorithmes descendants ou divisifs) ; et pour le clustering non hiérarchique, la méthode également la plus utilisée - les centres-mobiles ou la méthodes des K-means (très légèrement différente). Pour dautres exemples, vous pouvez vous référer respectivement aux pages 244-251, et 252-255, du manuel de référence du cours (Husson, 2018). 14.1 La classification ascendante hiérarchique (CAH) Voici une représentation générale dun clustering hiérarhique : Source : document de cours accessible ici https://perso.univ-rennes1.fr/valerie.monbet/ExposesM2/2013/Classification2.pdf Il y a en gros 3 grandes étapes : une première étape, facultative, car cela dépend de la nature des données : on centre et réduit les variables, on dit également quon standardise les variables. Cela est indispensable quand les variables ont des unités différentes (le poids et la taille dun individu) ; si elles ont des unités similaires (cest notre cas ici), il faut choisir de le faire ou non. Souvent, on va choisir de standardiser car on peut avoir des variables avec des écarts-types importants ce qui peut créer un biais (en faveur de ces variables, cest-à-dire en leur donnant un poids plus important dans lanalyse) lors de la construction de la matrice de distances. une seconde étape consiste à créer une matrice des distances (ou des dissimilarités) car la construction de larbre (cf. ci-dessous) repose sur les distances entre observations/individus : lidée est de chercher les individus les plus proches ou les plus ressemblants ; on commence donc par calculer la matrice des distances des individus deux à deux, puis on rassemble les deux plus proches dans un nouvel élément ce qui crée une matrice des distances sur les n-1 individus, ensuite on réitère le processus - on crée une matrice des distances rassemblant les deux individus les plus proches dans un nouveau groupe, etc. - jusquà ce quon nait plus quun seul élément. Dans cette étape, on choisit le type de distance utilisé, cest-à-dire le critère de ressemblance entre les individus. Sans rentrer ici plus dans les détails, la méthode de distance la plus utilisée et (ou car) la plus intuitive est la distance euclidienne. Mais par exemple, si nos variables ne sont pas mesurées en effectifs mais en proportion, il faudra plutôt utiliser la distance du khi-deux. Autre exemple, lorsque les variables seront qualitatives de type binaire (0/1), alors ce sera plutôt lindice de similarité de Jaccard qui sera utilisé. enfin, la troisième étape est la méthode dagrégation : dans la construction de la matrice de distance, après la 1ère étape (n-1 individus), ce seront progressivement des groupes dindividus dont on comparera la distance, il faut donc savoir comment calculer cette distance entre groupes (et non plus seulement entre individus) : est-ce quon prend le point représentant lindividu moyen du groupe ? Ou bien celui qui est à lextrêmité du groupe ? Etc. Là aussi, il faut donc choisir cette méthode dagrégation parmi un ensemble de méthodes (lien simple ou minimum, lien maximum, lien moyen, lien entre les centroïdes/centres de gravité ou barycentre, critère de Ward) : la plus utilisée est le critère de Ward, notamment lorsquon utilise une distance euclidienne dans létape précédente. Ce critère se base sur la décomposition de linertie totale (somme du carré des distances de chaque point au centre) en une inertie intraclasse et une inertie interclasse ; il consiste ensuite à minimiser la perte dinertie intraclasse à chaque agrégation de classes, pour que les classes restent le plus homogène possible. Un schéma de 3 de ces distances permet de mieux visualiser ce dont il sagit : Source : document de cours accessible ici https://r.developpez.com/tutoriels/programmation-graphe/livre-R-et-espace/?page=chapitre-7-methodes-de-classification On doit ainsi aboutir à un arbre appelé dendogramme, dont le haut ou la racine est constituée dune unique classe/cluster qui rassemble tous les individus, alors que le bas (lensemble des feuilles) constituent des clusters à un individu donc avec une homogénéité, par définition parfaite. Selon la méthode dagrégation utilisée, les dendogrammes pourront avoir des formes bien différentes (cest ce que nous verrons dans lexemple dapplication), il ne faut donc pas hésiter à tester différentes méthodes pour rendre plus robuste le résultat final cest-à-dire la classification, en gros elle sera robuste si le haut de larbre ne change pas trop (= on a toujours les même 3 ou 4 ou 5 grosses classes). Un exemple dapplication dun clustering hiérarchique avec 7 individus, basée sur une distance euclidienne et la méthode de Ward, est disponible ici. 14.2 La méthode des centres mobiles et sa variante, les K-means Lobjectif est cette fois de construire une partition dune population en k clusters, ce nombre k étant fixé avant ou a priori. Cest la principale différence en réalité par rapport à la méthode précédente, et le résultat en sera une partition unique des données (contrairement à la CAH qui donne une sorte de hiérarchie de partitions avec le dendogramme, à partir de laquelle il faut choisir le nombre de classes). Lalgorithme des centres mobiles repose sur un processus itératif de plusieurs étapes : on détermine aléatoirement (cest-à-dire au hasard) k individus/observations comme centres provisoires de classes, et on affecte chaque individu à la classe dont le centre est le plus proche, ce qui crée une première partition ; ensuite, on procède à un nouveau calcul des centres de gravité des classes de cette première partition, on redistribue les individus dans la classe dont le centre est le plus proche, ce qui permet daboutir à une seconde partition alternative ; on répète ce processus jusquà convergence (selon un critère que lon peut définir), cest-à-dire jusquà ce quaucun individu ne change de classe, ou lorsque linertie intra-classe ne diminue plus, ou encore lorsque les centres de classes sont stables, ou lorsque tout simplement on a atteint le nombre ditérations que lon avait fixé. Il y a donc, ici aussi (mais plus implicitement), une minimisation de linertie intra-classe. Une variante est quune actualisation ou un recalcul des centres de classe peut être fait dès quun individu change de classe ; néanmoins dans cette variance, lordre des individus joue dans le résultat final. Voici une représentation graphique illustrant la méthode : Légèrement différente, la méthode des k-means va recalculer le centre de classe à chaque fois quun nouvel individu y est introduit, alors que précédemment on attendait que tous les individus soient affectés dans des groupes pour recalculer le centre de classe. Le nouveau calcul du cente de classe est donc ici effectué dès quun individu change de classe. Lune des limites de cette méthode (et sa variante) est que la partition finale, résultat de ce processus itératif, dépend souvent des centres initiaux de classes qui ont été choisis, cest pourquoi en pratique il est préférable dexécuter plusieurs fois la procédure, et comme précédemment de choisir la partition la plus stable/robuste. Cette méthode est souvent utilisée lorsque lon a de grosses bases de données sur lesquelles faire tourner une CAH est très coûteuse en temps ; toutefois, le fait de devoir répéter plusieurs fois la procédure jusquà stabilité des classes peut atténuer cette avantage de rapidité de calcul pour les grandes bases. On peut lutiliser aussi en complément dune CAH là aussi sur de grosses bases de données, plus précisément comme étape préalable à une CAH, lidée étant de choisir un très grand nombre de centres de classes pour réaliser la CAH sur ces centres considérés comme les individus, et ensuite aboutir à un nombre plus petit de classes finales, cest ce quon appelle la méthode de classification ou clustering mixte. Attention néanmoins à lusage du terme classification car en anglais et dans la plupart des ouvrages de Data Science et de Machine Learning, ce terme renvoie aux techniques danalyse prédictive dont la variable cible (dintérêt) est qualitative (en opposition aux régressions pour lesquelles la variable cible est quantitative). Lusage du terme clustering est ainsi privilégié. "],["15-Clustering-application.html", "Section 15 Clustering : application sur le RP 2018 15.1 Choix des variables et préparation du tableau final 15.2 La méthode de la CAH appliquée à nos données", " Section 15 Clustering : application sur le RP 2018 15.1 Choix des variables et préparation du tableau final Notre objectif est ici de décrire une commune ou un groupe de communes, en rassemblant des zones infracommunales (IRIS) qui se ressemblent ou sont relativement homogènes, cest-à-dire qui ont des caractéristiques proches. Mais, bien sûr, les méthodes de clustering peuvent être appliquées à toutes sortes de problématiques et de données. Il faut ainsi dabord réfléchir à quelles caractéristiques on veut sintéresser, cest-à-dire quelles variables on veut mettre en entrées/input du clustering. Pour cela, on doit avoir un tableau avec n individus ou observations (lignes) et p variables (colonnes), la mesure des variables peut être des effectifs, mais aussi des proportions. Lidée étant de regrouper nos IRIS en classes homogènes (=clusters) en un nombre plus restreint, nos individus sont donc constitués ici par les IRIS. Il faut ensuite choisir sur quelles caractéristiques on va les regrouper et chercher une certaine homogénéité. Cela peut être à partir de plein de choses selon notre base de données : caractéristiques socio-démographiques de la population, caractéristiques demploi des seuls actifs occupés habitant la commune, caractéristiques des ménages habitant la commune, caractéristiques des logements, etc. 15.1.1 Variables socio-professionnelles caractérisant les individus/habitants de notre commune On va dans cet exemple (communes de lEst parisien constitué des 11ème, 12ème et 20ème arrondissements de Paris) sintéresser aux caractéristiques socio-professionnelles de la population : on aura en lignes nos n IRIS des 3 arrondissements et en colonnes nos variables dentrées, soient par exemple le nombre dhabitants, le nombre dindividus qui sont actuellement chômeurs, le nombre de cadres, le nombre dindividus qui ont moins de 15 ans, etc. On va alors réutiliser les deux fonctions créées précédemment sum_var_IRIS() et tab_cont_n_iris(). Pour caractériser la population par IRIS à partir de variables socio-professionnnelles, on peut choisir des variables classiques du type : - catégorie socio-professionnelle (CS1) ; - diplôme le plus élevé (DIPL, à recoder pour avoir moins de modalités) ; - type dactivités (TACT) dont nombre délèves ou étudiants ; - situation quant à limmigration (IMMI) ; - sexe (SEXE). Il faudra néanmoins faire attention à ce que certaines modalités ne se recoupent pas entre elles, notamment quand linformation sur la population de plus de 14 ans est rassemblée dans une modalité spécifique, ou quand linformation est trop proche - par exemple la CS et le diplôme. Mais on pourra le faire dans un second temps en étudiant la corrélation entre les variables finalement obtenues. Regardons dabord pour quelles variables un regroupement et recodage des modalités est nécessaire, avant dappliquer nos fonctions de tableaux de contingence. Pour la variable de CS, il faudra peut-être ne pas prendre en compte le nombre dagriculteurs exploitants qui risque dêtre très faible dans cette commune (et dans ce département de manière générale). meta %&gt;% select(COD_VAR, COD_MOD, LIB_MOD) %&gt;% filter(COD_VAR==&quot;CS1&quot;) # A tibble: 8 x 3 COD_VAR COD_MOD LIB_MOD &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 CS1 1 Agriculteurs exploitants 2 CS1 2 Artisans, commerÃ§ants et chefs d&#39;entreprise 3 CS1 3 Cadres et professions intellectuelles supÃ©rieures 4 CS1 4 Professions IntermÃ©diaires 5 CS1 5 EmployÃ©s 6 CS1 6 Ouvriers 7 CS1 7 RetraitÃ©s 8 CS1 8 Autres personnes sans activitÃ© professionnelle Pour la variable de diplôme : meta %&gt;% select(COD_VAR, COD_MOD, LIB_MOD) %&gt;% filter(COD_VAR==&quot;DIPL&quot;) # A tibble: 13 x 3 COD_VAR COD_MOD LIB_MOD &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 DIPL 01 Pas de scolaritÃ© ou arrÃªt avant la fin du primaire 2 DIPL 02 Aucun diplÃ´me et scolaritÃ© interrompue Ã la fin du primai~ 3 DIPL 03 Aucun diplÃ´me et scolaritÃ© jusquâÃ la fin du collÃ¨ge o~ 4 DIPL 11 CEP (certificat dâÃ©tudes primaires) 5 DIPL 12 BEPC, brevet Ã©lÃ©mentaire, brevet des collÃ¨ges, DNB 6 DIPL 13 CAP, BEP ou diplÃ´me de niveau Ã©quivalent 7 DIPL 14 BaccalaurÃ©at gÃ©nÃ©ral ou technologique, brevet supÃ©rieur,~ 8 DIPL 15 BaccalaurÃ©at professionnel, brevet professionnel, de techni~ 9 DIPL 16 BTS, DUT, Deug, Deust, diplÃ´me de la santÃ© ou du social de~ 10 DIPL 17 Licence, licence pro, maÃ®trise, diplÃ´me Ã©quivalent de niv~ 11 DIPL 18 Master, DEA, DESS, diplÃ´me grande Ã©cole niveau bac+5, doct~ 12 DIPL 19 Doctorat de recherche (hors santÃ©) 13 DIPL ZZ Hors champ (moins de 14 ans) Là aussi, il faut regrouper les modalités, par exemple comme ceci : Peu ou pas diplomés (en-dessous du Bac), Bac (quel que soit le type), Bac+2, Bac+3ou4, Bac+5ou+ Et enfin, pour la variable du type dactivités : meta %&gt;% select(COD_VAR, COD_MOD, LIB_MOD) %&gt;% filter(COD_VAR==&quot;TACT&quot;) # A tibble: 7 x 3 COD_VAR COD_MOD LIB_MOD &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 TACT 11 Actifs ayant un emploi, y compris sous apprentissage ou en st~ 2 TACT 12 ChÃ´meurs 3 TACT 21 RetraitÃ©s ou prÃ©retraitÃ©s 4 TACT 22 ÃlÃ¨ves, Ã©tudiants, stagiaires non rÃ©munÃ©rÃ© de 14 ans ou~ 5 TACT 23 Moins de 14 ans 6 TACT 24 Femmes ou hommes au foyer 7 TACT 25 Autres inactifs On pourra regrouper les 3 dernières modalités comme une catégorie large dinactifs (23,24,25). Par ailleurs, il faudra faire attention à certaines modalités qui peuvent être proches de celles de la variable de CS, par exemple pour les retraités, ou les inactifs. 15.1.2 Création des différents tableaux de contingence On crée maintenant nos différents tableaux de contingence. # Pour la variable du nombre d&#39;habitants Nbhab &lt;- RP %&gt;% sum_var_IRIS(codedept=&quot; &quot;, codecom = c(&quot;75111&quot;, &quot;75112&quot;, &quot;75120&quot;), IRIS, nom_var = nbhab) # Pour la variable d&#39;âge : Age &lt;- RP %&gt;% mutate(AGE=case_when(AGER20 %in% c(&quot;2&quot;,&quot;5&quot;,&quot;10&quot;,&quot;14&quot;,&quot;17&quot;) ~ &quot;Moins18ans&quot;, AGER20 %in% c(&quot;19&quot;,&quot;24&quot;,&quot;29&quot;) ~ &quot;18-29ans&quot;, AGER20 == &quot;39&quot; ~ &quot;30-39ans&quot;, AGER20 == &quot;54&quot; ~ &quot;40-54ans&quot;, AGER20 == &quot;64&quot; ~ &quot;55-64ans&quot;, AGER20 %in% c(&quot;79&quot;, &quot;80&quot;) ~ &quot;Plus64ans&quot;)) %&gt;% tab_cont_n_iris(codedept=&quot; &quot;, codecom = c(&quot;75111&quot;, &quot;75112&quot;, &quot;75120&quot;), IRIS, AGE, nom_var = nbage, var=AGE, prefix_var=&quot;nb_&quot;) # Pour la variable de sexe : Sexe &lt;- RP %&gt;% mutate(SEXE = factor(SEXE, labels=c(&quot;Homme&quot;, &quot;Femme&quot;))) %&gt;% tab_cont_n_iris(codedept=&quot; &quot;, codecom = c(&quot;75111&quot;, &quot;75112&quot;, &quot;75120&quot;), IRIS, SEXE, nom_var = nbsexe, var=SEXE, prefix_var=&quot;nb_&quot;) # Pour la variable de CS : CS &lt;- RP %&gt;% tab_cont_n_iris(codedept=&quot; &quot;, codecom = c(&quot;75111&quot;, &quot;75112&quot;, &quot;75120&quot;), IRIS, CS1, nom_var = nbCS, var=CS1, prefix_var=&quot;nbCS_&quot;) # Pour la variable de diplôme : Dipl &lt;- RP %&gt;% mutate(Dipl=case_when(DIPL %in% c(&quot;01&quot;,&quot;02&quot;,&quot;03&quot;,&quot;11&quot;,&quot;12&quot;,&quot;13&quot;) ~ &quot;Peu_pas diplomés&quot;, DIPL %in% c(&quot;14&quot;,&quot;15&quot;) ~ &quot;Bac&quot;, DIPL == &quot;16&quot; ~ &quot;Bacplus2&quot;, DIPL == &quot;17&quot; ~ &quot;Bacplus3ou4&quot;, DIPL %in% c(&quot;18&quot;,&quot;19&quot;) ~ &quot;Bacplus5ouplus&quot;, DIPL == &quot;ZZ&quot; ~ &quot;Moins14ans&quot;)) %&gt;% tab_cont_n_iris(codedept=&quot; &quot;, codecom = c(&quot;75111&quot;, &quot;75112&quot;, &quot;75120&quot;), IRIS, Dipl, nom_var = nbdipl, var=Dipl, prefix_var=&quot;nb_&quot;) # Pour la variable d&#39;activité activite &lt;- RP %&gt;% mutate(activite = case_when(TACT == &quot;11&quot; ~ &quot;actifs_occ&quot;, TACT == &quot;12&quot; ~ &quot;chômeurs&quot;, TACT == &quot;22&quot; ~ &quot;eleves_etudiants&quot;, TACT %in% c(&quot;21&quot;,&quot;23&quot;,&quot;24&quot;,&quot;25&quot;) ~ &quot;inactifs&quot;)) %&gt;% tab_cont_n_iris(codedept=&quot; &quot;, codecom = c(&quot;75111&quot;, &quot;75112&quot;, &quot;75120&quot;), IRIS, activite, nom_var = Nbactivite, var=activite, prefix_var=&quot;Nbactivite_&quot;) # Pour la variable de statut conjugual : statu_conj &lt;- RP %&gt;% mutate(statu_conj=case_when(STAT_CONJ %in% c(&quot;1&quot;,&quot;2&quot;) ~ &quot;1et2&quot;, STAT_CONJ == &quot;3&quot; ~ &quot;3&quot;, STAT_CONJ %in% c(&quot;4&quot;,&quot;5&quot;) ~ &quot;4&quot;, STAT_CONJ == &quot;6&quot; ~ &quot;6&quot;)) %&gt;% tab_cont_n_iris(codedept=&quot; &quot;, codecom = c(&quot;75111&quot;, &quot;75112&quot;, &quot;75120&quot;), IRIS, statu_conj, nom_var = NbStatuconj, var=statu_conj, prefix_var=&quot;NbStatuconj_&quot;) # Pour la variable d&#39;année d&#39;emménagement: ann_em &lt;- RP %&gt;% mutate(ann_em = case_when(ANEMR == &#39;00&#39; ~ &quot;Moins de 2 ans&quot;, ANEMR == &#39;01&#39; ~ &quot;De 2 à 4 ans&quot;, ANEMR == &#39;02&#39; ~ &quot;De 5 à 9 ans&quot;, ANEMR == &#39;03&#39; ~ &quot;De 10 à 19 ans&quot;, ANEMR == &#39;04&#39; ~ &quot;De 20 à 29 ans&quot;, TRUE ~ &quot;30 ou plus&quot;)) %&gt;% tab_cont_n_iris(codedept=&quot; &quot;, codecom = c(&quot;75111&quot;, &quot;75112&quot;, &quot;75120&quot;), IRIS, ann_em, nom_var = Nbann_em, var=ann_em, prefix_var=&quot;Nbann_em_&quot;) # Pour la variable de lieu de naissance lieu_naiss &lt;- RP %&gt;% mutate(lieu_naiss = case_when(INAI == &quot;1&quot; ~ &quot;même_dept&quot;, INAI == &quot;2&quot; ~ &quot;autre_dept&quot;, INAI %in% c(&quot;3&quot;, &quot;4&quot;, &quot;5&quot;) ~ &quot;autre_region&quot;, INAI == &quot;6&quot; ~ &quot;étranger&quot;)) %&gt;% tab_cont_n_iris(codedept=&quot; &quot;, codecom = c(&quot;75111&quot;, &quot;75112&quot;, &quot;75120&quot;), IRIS, lieu_naiss, nom_var = Nblieu_naiss, var=lieu_naiss, prefix_var=&quot;Nblieu_naiss_&quot;) # Pour la variable renseignant du nombre d&#39;immigrés : Immi &lt;- RP %&gt;% filter(IMMI==&quot;1&quot;) %&gt;% sum_var_IRIS(codedept=&quot; &quot;, codecom = c(&quot;75111&quot;, &quot;75112&quot;, &quot;75120&quot;), IRIS, nom_var = nbimmi) 15.1.3 Création du tableau final On va rassembler tous ces tableaux et donc ces informations en un seul tableau. Comme on a plus de 2 tableaux à fusionner, on utilise une liste dans laquelle on stocke lensemble de nos tableaux, et ensuite on utilise une jointure avec left_join, mais en passant par la fonction reduce() du package purr() qui est inclus dans tidyverse pour lappliquer à notre liste de tableaux. list_tab &lt;- list(data.frame(Nbhab), data.frame(Age), data.frame(Sexe), data.frame(CS), data.frame(Dipl), data.frame(activite), data.frame(statu_conj), data.frame(ann_em), data.frame(lieu_naiss), data.frame(Immi)) clust &lt;- data.frame(purrr::reduce(list_tab, left_join, by=&#39;IRIS&#39;)) head(clust) # A tibble: 6 x 43 IRIS nbhab nb_18~1 nb_30~2 nb_40~3 nb_55~4 nb_Mo~5 nb_Pl~6 nb_Ho~7 nb_Fe~8 &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; 1 7511141~ 3145 648 502 577 377 542 500 1543 1602 2 7511141~ 2335 650 531 429 240 214 272 1198 1138 3 7511141~ 1824 488 354 315 188 269 210 901 923 4 7511141~ 1547 447 323 288 136 210 143 773 774 5 7511141~ 1932 426 377 375 202 272 279 957 974 6 7511141~ 2622 575 480 595 227 402 342 1332 1289 # ... with 33 more variables: nbCS_2 &lt;dbl&gt;, nbCS_3 &lt;dbl&gt;, nbCS_4 &lt;dbl&gt;, # nbCS_5 &lt;dbl&gt;, nbCS_6 &lt;dbl&gt;, nbCS_7 &lt;dbl&gt;, nbCS_8 &lt;dbl&gt;, nbCS_1 &lt;dbl&gt;, # nb_Bac &lt;dbl&gt;, nb_Bacplus2 &lt;dbl&gt;, nb_Bacplus3ou4 &lt;dbl&gt;, # nb_Bacplus5ouplus &lt;dbl&gt;, nb_Moins14ans &lt;dbl&gt;, nb_Peu_pas.diplomés &lt;dbl&gt;, # Nbactivite_actifs_occ &lt;dbl&gt;, Nbactivite_chômeurs &lt;dbl&gt;, # Nbactivite_eleves_etudiants &lt;dbl&gt;, Nbactivite_inactifs &lt;dbl&gt;, # NbStatuconj_1et2 &lt;dbl&gt;, NbStatuconj_3 &lt;dbl&gt;, NbStatuconj_4 &lt;dbl&gt;, ... # i Use `colnames()` to see all variable names # On supprime les tables intermédiaires pour ne pas surchager notre environnement rm(Nbhab, Age, Sexe, CS, Dipl, activite, statu_conj, ann_em, lieu_naiss, Immi) On va rajouter le nom des IRIS pour cette commune et linclure comme identifiant dans le tableau, cest-à-dire dans le nom de la 1ère colonne (avec la fonction row.names()), cela peut être conseillé pour la procédure de clustering, afin que chaque IRIS soit bien identifié par son nom (label) ; on verra toutefois dans notre exemple que cela devient illisible si on a trop dIRIS/individus. Pour cela, on va récupérer le nom des IRIS dans le fichier de métadonnées meta, en changeant lencodage avec la fonction parse_character() et en supprimant linformation entre parenthèses avec la fonction str_replace() pour navoir que le numéro de lIRIS : # On récupère les noms des IRIS dans le fichier de métadonnées &quot;meta&quot; list_nom_IRIS &lt;- meta %&gt;% mutate(COM = substr(COD_MOD, 1, 5)) %&gt;% select(COD_VAR, COD_MOD, LIB_MOD, COM) %&gt;% filter(COD_VAR == &quot;IRIS&quot; &amp; COM %in% c(&quot;75111&quot;, &quot;75112&quot;, &quot;75120&quot;)) %&gt;% rename(IRIS = COD_MOD) %&gt;% select(LIB_MOD, IRIS) # On indique le bon encodage pour que R reconnaisse les accents list_nom_IRIS$LIB_MOD &lt;- parse_character(list_nom_IRIS$LIB_MOD, locale = locale(encoding = &quot;UTF-8&quot;)) # On supprime la fin du nom qui est entre parenthèse gràce à une expression régulière list_nom_IRIS$LIB_MOD &lt;- str_replace(list_nom_IRIS$LIB_MOD, &quot; \\\\s*\\\\([^\\\\)]+\\\\)&quot;, &quot;&quot;) clust &lt;- left_join(clust, list_nom_IRIS, by=&quot;IRIS&quot;) row.names(clust) &lt;- clust$LIB_MOD head(clust) # A tibble: 6 x 44 IRIS nbhab nb_18~1 nb_30~2 nb_40~3 nb_55~4 nb_Mo~5 nb_Pl~6 nb_Ho~7 nb_Fe~8 &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; 1 7511141~ 3145 648 502 577 377 542 500 1543 1602 2 7511141~ 2335 650 531 429 240 214 272 1198 1138 3 7511141~ 1824 488 354 315 188 269 210 901 923 4 7511141~ 1547 447 323 288 136 210 143 773 774 5 7511141~ 1932 426 377 375 202 272 279 957 974 6 7511141~ 2622 575 480 595 227 402 342 1332 1289 # ... with 34 more variables: nbCS_2 &lt;dbl&gt;, nbCS_3 &lt;dbl&gt;, nbCS_4 &lt;dbl&gt;, # nbCS_5 &lt;dbl&gt;, nbCS_6 &lt;dbl&gt;, nbCS_7 &lt;dbl&gt;, nbCS_8 &lt;dbl&gt;, nbCS_1 &lt;dbl&gt;, # nb_Bac &lt;dbl&gt;, nb_Bacplus2 &lt;dbl&gt;, nb_Bacplus3ou4 &lt;dbl&gt;, # nb_Bacplus5ouplus &lt;dbl&gt;, nb_Moins14ans &lt;dbl&gt;, nb_Peu_pas.diplomés &lt;dbl&gt;, # Nbactivite_actifs_occ &lt;dbl&gt;, Nbactivite_chômeurs &lt;dbl&gt;, # Nbactivite_eleves_etudiants &lt;dbl&gt;, Nbactivite_inactifs &lt;dbl&gt;, # NbStatuconj_1et2 &lt;dbl&gt;, NbStatuconj_3 &lt;dbl&gt;, NbStatuconj_4 &lt;dbl&gt;, ... # i Use `colnames()` to see all variable names tail(clust) # A tibble: 6 x 44 IRIS nbhab nb_18~1 nb_30~2 nb_40~3 nb_55~4 nb_Mo~5 nb_Pl~6 nb_Ho~7 nb_Fe~8 &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; 1 7512080~ 1751 229 183 312 178 262 588 728 1023 2 7512080~ 2119 314 297 439 287 473 310 965 1155 3 7512080~ 3191 535 423 692 351 651 538 1461 1730 4 7512080~ 2862 517 504 665 314 639 225 1382 1480 5 7512080~ 1843 351 343 360 261 197 331 939 904 6 75120XX~ 5 0 0 2 1 2 0 3 2 # ... with 34 more variables: nbCS_2 &lt;dbl&gt;, nbCS_3 &lt;dbl&gt;, nbCS_4 &lt;dbl&gt;, # nbCS_5 &lt;dbl&gt;, nbCS_6 &lt;dbl&gt;, nbCS_7 &lt;dbl&gt;, nbCS_8 &lt;dbl&gt;, nbCS_1 &lt;dbl&gt;, # nb_Bac &lt;dbl&gt;, nb_Bacplus2 &lt;dbl&gt;, nb_Bacplus3ou4 &lt;dbl&gt;, # nb_Bacplus5ouplus &lt;dbl&gt;, nb_Moins14ans &lt;dbl&gt;, nb_Peu_pas.diplomés &lt;dbl&gt;, # Nbactivite_actifs_occ &lt;dbl&gt;, Nbactivite_chômeurs &lt;dbl&gt;, # Nbactivite_eleves_etudiants &lt;dbl&gt;, Nbactivite_inactifs &lt;dbl&gt;, # NbStatuconj_1et2 &lt;dbl&gt;, NbStatuconj_3 &lt;dbl&gt;, NbStatuconj_4 &lt;dbl&gt;, ... # i Use `colnames()` to see all variable names On remarque que la dernière ligne représente une IRIS qui compte moins de 200 habitants, on va la supprimer. Par ailleurs, on va également supprimer les deux IRIS correspondant au bois de Vincennes, même sil y a des habitants, ces 2 IRIS sont bien trop particuliers pour être pris en compte dans notre analyse de clustering. Il y aura donc des données manquantes pour ces 2 quartiers dans la carte finale quon réalisera avec la répartition des IRIS selon les clusters obtenus clust &lt;- clust %&gt;% filter(!IRIS %in% c(&quot;75120XXXX&quot;, &quot;751124677&quot;, &quot;751124577&quot;)) # à voir aussi : Bercy 7 (751124707) et Quinze-Vingts 13 (751124813), voire Père Lachaise 5 (751207905) 15.1.4 choix des variables actives dans le clustering Il nous reste, en dernière étape, de choisir les variables à inclure dans le clustering et vérifier si certaines dentre elles ne sont pas corrélées, cest-à-dire ne donnent pas la même information. Cela est important car sinon dans la procédure de clustering, cela sapparente à donner un poids supérieur à une information si on la met en double voire en triple par exemple. Cest typiquement le cas pour la variable de CS Retraités et la variable dactivité Retraités ou préretraites : si on les laisse toutes les deux, la même information va peser 2 fois dans lanalyse. Pour simplifier la procédure et surtout linterprétation des résultats, on va réaliser un clustering avec quelques variables socio-professionnelles. On peut vérifier la corrélation à laide dune fonction comme cor() combinées avec la fonction symnum(), ou rcorr() du package Hmisc, ou corrplot() du package du même nom, ou encore pairs(). Attention toutefois, ces fonctions ne sappliquent que sur des variables numériques, il nous faut donc sélectionner les colonnes sans la première (code IRIS), ni la dernière (libellé IRIS), ou en sélectionnant les seules variables qui nous intéressent. On ne va utiliser ici que cor() et corrplot() qui permettent toutes deux des visualisations assez jolies en ajoutant quelques options. Attention bis (!) : comme ici nous avons beaucoup de variables, il vaut mieux sélectionner des variables par groupe de 10 ou 15 par exemple car sinon cela peut-être illisible selon les fonctions ! # Pour le clustering sur les variables socio-professionnelles : # - catégorie socio-professionnelle (`CS1`) ; - diplôme le plus élevé (`Dipl`) ; # - type d&#39;activités (`TACT`) ; - situation quant à l&#39;immigration (`IMMI`) ; # - sexe (`SEXE`). cor(clust[ , c(&quot;nbCS_1&quot;, &quot;nbCS_2&quot;, &quot;nbCS_3&quot;, &quot;nbCS_4&quot;, &quot;nbCS_5&quot;, &quot;nbCS_6&quot;, &quot;nbCS_7&quot;, &quot;nbCS_8&quot;, &quot;Nbactivite_actifs_occ&quot;, &quot;Nbactivite_chômeurs&quot;, &quot;Nbactivite_eleves_etudiants&quot;, &quot;Nbactivite_inactifs&quot;, &quot;nb_Bac&quot;, &quot;nb_Bacplus2&quot;, &quot;nb_Bacplus3ou4&quot;,&quot;nb_Bacplus5ouplus&quot;, &quot;nb_Moins14ans&quot;, &quot;nb_Peu_pas.diplomés&quot;, &quot;nbimmi&quot;, &quot;nb_Femme&quot;)]) nbCS_1 nbCS_2 nbCS_3 nbCS_4 nbCS_1 1.000000000 0.06913325 0.108685116 -0.008965482 nbCS_2 0.069133254 1.00000000 0.626901951 0.637284571 nbCS_3 0.108685116 0.62690195 1.000000000 0.670160776 nbCS_4 -0.008965482 0.63728457 0.670160776 1.000000000 nbCS_5 -0.039492923 0.28455999 -0.003294028 0.558951911 nbCS_6 -0.002830240 0.19636249 -0.154828264 0.403130103 nbCS_7 -0.041982333 0.33141774 0.412510409 0.536582081 nbCS_8 0.040575995 0.38333527 0.179518672 0.593562489 Nbactivite_actifs_occ 0.070741956 0.72150143 0.837689732 0.922600642 Nbactivite_chômeurs -0.052816797 0.43824731 0.180259876 0.644377699 Nbactivite_eleves_etudiants 0.028452507 0.44452185 0.340624024 0.614209703 Nbactivite_inactifs 0.006610515 0.37921070 0.288687550 0.620360776 nb_Bac -0.047894793 0.46905678 0.332125488 0.739370825 nb_Bacplus2 0.014476055 0.54524403 0.570130991 0.839901494 nb_Bacplus3ou4 0.075125803 0.66262686 0.828316296 0.857109044 nb_Bacplus5ouplus 0.092948904 0.62869585 0.982335398 0.652482454 nb_Moins14ans 0.055284559 0.36531900 0.212406380 0.587886856 nb_Peu_pas.diplomés -0.034273370 0.22202191 -0.104132977 0.456737498 nbimmi -0.025463692 0.36681469 0.033221328 0.517048062 nb_Femme 0.027458059 0.59244321 0.585826538 0.853281045 nbCS_5 nbCS_6 nbCS_7 nbCS_8 nbCS_1 -0.039492923 -0.00283024 -0.04198233 0.04057599 nbCS_2 0.284559989 0.19636249 0.33141774 0.38333527 nbCS_3 -0.003294028 -0.15482826 0.41251041 0.17951867 nbCS_4 0.558951911 0.40313010 0.53658208 0.59356249 nbCS_5 1.000000000 0.84445497 0.44614717 0.84694505 nbCS_6 0.844454970 1.00000000 0.22844112 0.74509062 nbCS_7 0.446147171 0.22844112 1.00000000 0.51816732 nbCS_8 0.846945049 0.74509062 0.51816732 1.00000000 Nbactivite_actifs_occ 0.512275639 0.34653810 0.56358020 0.59569304 Nbactivite_chômeurs 0.860710615 0.78637188 0.44210331 0.79316564 Nbactivite_eleves_etudiants 0.688518986 0.61053082 0.41981176 0.88250002 Nbactivite_inactifs 0.752127676 0.56928089 0.85925308 0.86930902 nb_Bac 0.839438819 0.70225253 0.63361922 0.87030447 nb_Bacplus2 0.651506338 0.46586711 0.70549762 0.70806976 nb_Bacplus3ou4 0.370480308 0.19414785 0.63611386 0.49758879 nb_Bacplus5ouplus -0.036199457 -0.19172131 0.39311819 0.14324210 nb_Moins14ans 0.777211723 0.65831113 0.54969794 0.95153288 nb_Peu_pas.diplomés 0.913755391 0.83727463 0.56931854 0.85908507 nbimmi 0.877968920 0.84956644 0.43416092 0.82122697 nb_Femme 0.733461744 0.53760529 0.76647778 0.83718765 Nbactivite_actifs_occ Nbactivite_chômeurs nbCS_1 0.07074196 -0.0528168 nbCS_2 0.72150143 0.4382473 nbCS_3 0.83768973 0.1802599 nbCS_4 0.92260064 0.6443777 nbCS_5 0.51227564 0.8607106 nbCS_6 0.34653810 0.7863719 nbCS_7 0.56358020 0.4421033 nbCS_8 0.59569304 0.7931656 Nbactivite_actifs_occ 1.00000000 0.5879678 Nbactivite_chômeurs 0.58796777 1.0000000 Nbactivite_eleves_etudiants 0.65579644 0.6709845 Nbactivite_inactifs 0.62656821 0.7077251 nb_Bac 0.73006988 0.8023773 nb_Bacplus2 0.84247508 0.6627568 nb_Bacplus3ou4 0.91504552 0.4826665 nb_Bacplus5ouplus 0.80872811 0.1523240 nb_Moins14ans 0.58682865 0.7320770 nb_Peu_pas.diplomés 0.39294034 0.8009845 nbimmi 0.49222054 0.8500333 nb_Femme 0.88326898 0.7602899 Nbactivite_eleves_etudiants Nbactivite_inactifs nbCS_1 0.02845251 0.006610515 nbCS_2 0.44452185 0.379210698 nbCS_3 0.34062402 0.288687550 nbCS_4 0.61420970 0.620360776 nbCS_5 0.68851899 0.752127676 nbCS_6 0.61053082 0.569280888 nbCS_7 0.41981176 0.859253082 nbCS_8 0.88250002 0.869309017 Nbactivite_actifs_occ 0.65579644 0.626568206 Nbactivite_chômeurs 0.67098451 0.707725129 Nbactivite_eleves_etudiants 1.00000000 0.688588835 Nbactivite_inactifs 0.68858883 1.000000000 nb_Bac 0.81813052 0.842875236 nb_Bacplus2 0.65301706 0.795123681 nb_Bacplus3ou4 0.58646714 0.604416352 nb_Bacplus5ouplus 0.32662754 0.251476958 nb_Moins14ans 0.77649671 0.876637069 nb_Peu_pas.diplomés 0.65288734 0.837879230 nbimmi 0.69219733 0.721561557 nb_Femme 0.78756255 0.898089245 nb_Bac nb_Bacplus2 nb_Bacplus3ou4 nbCS_1 -0.04789479 0.01447606 0.0751258 nbCS_2 0.46905678 0.54524403 0.6626269 nbCS_3 0.33212549 0.57013099 0.8283163 nbCS_4 0.73937082 0.83990149 0.8571090 nbCS_5 0.83943882 0.65150634 0.3704803 nbCS_6 0.70225253 0.46586711 0.1941478 nbCS_7 0.63361922 0.70549762 0.6361139 nbCS_8 0.87030447 0.70806976 0.4975888 Nbactivite_actifs_occ 0.73006988 0.84247508 0.9150455 Nbactivite_chômeurs 0.80237728 0.66275683 0.4826665 Nbactivite_eleves_etudiants 0.81813052 0.65301706 0.5864671 Nbactivite_inactifs 0.84287524 0.79512368 0.6044164 nb_Bac 1.00000000 0.78822354 0.6300673 nb_Bacplus2 0.78822354 1.00000000 0.7746082 nb_Bacplus3ou4 0.63006729 0.77460815 1.0000000 nb_Bacplus5ouplus 0.29409493 0.51898821 0.8017520 nb_Moins14ans 0.82068738 0.70949311 0.4929180 nb_Peu_pas.diplomés 0.77835912 0.60176204 0.2859801 nbimmi 0.77662150 0.56769143 0.3790835 nb_Femme 0.88987976 0.89271921 0.8250014 nb_Bacplus5ouplus nb_Moins14ans nb_Peu_pas.diplomés nbCS_1 0.09294890 0.05528456 -0.03427337 nbCS_2 0.62869585 0.36531900 0.22202191 nbCS_3 0.98233540 0.21240638 -0.10413298 nbCS_4 0.65248245 0.58788686 0.45673750 nbCS_5 -0.03619946 0.77721172 0.91375539 nbCS_6 -0.19172131 0.65831113 0.83727463 nbCS_7 0.39311819 0.54969794 0.56931854 nbCS_8 0.14324210 0.95153288 0.85908507 Nbactivite_actifs_occ 0.80872811 0.58682865 0.39294034 Nbactivite_chômeurs 0.15232401 0.73207697 0.80098445 Nbactivite_eleves_etudiants 0.32662754 0.77649671 0.65288734 Nbactivite_inactifs 0.25147696 0.87663707 0.83787923 nb_Bac 0.29409493 0.82068738 0.77835912 nb_Bacplus2 0.51898821 0.70949311 0.60176204 nb_Bacplus3ou4 0.80175198 0.49291797 0.28598013 nb_Bacplus5ouplus 1.00000000 0.16517971 -0.14911090 nb_Moins14ans 0.16517971 1.00000000 0.78697467 nb_Peu_pas.diplomés -0.14911090 0.78697467 1.00000000 nbimmi 0.01374279 0.71558091 0.87671473 nb_Femme 0.55329417 0.82538513 0.70742281 nbimmi nb_Femme nbCS_1 -0.02546369 0.02745806 nbCS_2 0.36681469 0.59244321 nbCS_3 0.03322133 0.58582654 nbCS_4 0.51704806 0.85328105 nbCS_5 0.87796892 0.73346174 nbCS_6 0.84956644 0.53760529 nbCS_7 0.43416092 0.76647778 nbCS_8 0.82122697 0.83718765 Nbactivite_actifs_occ 0.49222054 0.88326898 Nbactivite_chômeurs 0.85003327 0.76028986 Nbactivite_eleves_etudiants 0.69219733 0.78756255 Nbactivite_inactifs 0.72156156 0.89808925 nb_Bac 0.77662150 0.88987976 nb_Bacplus2 0.56769143 0.89271921 nb_Bacplus3ou4 0.37908348 0.82500141 nb_Bacplus5ouplus 0.01374279 0.55329417 nb_Moins14ans 0.71558091 0.82538513 nb_Peu_pas.diplomés 0.87671473 0.70742281 nbimmi 1.00000000 0.69205032 nb_Femme 0.69205032 1.00000000 # Pour voir plus rapidement avec des indications les fortes corrélations : symnum(cor(clust[ , c(&quot;nbCS_1&quot;, &quot;nbCS_2&quot;, &quot;nbCS_3&quot;, &quot;nbCS_4&quot;, &quot;nbCS_5&quot;, &quot;nbCS_6&quot;, &quot;nbCS_7&quot;, &quot;nbCS_8&quot;, &quot;Nbactivite_chômeurs&quot;, &quot;Nbactivite_eleves_etudiants&quot;, &quot;nbimmi&quot;, &quot;nb_Femme&quot;)])) nCS_1 nCS_2 nCS_3 nCS_4 nCS_5 nCS_6 nCS_7 nCS_8 Nb_ nbCS_1 1 nbCS_2 1 nbCS_3 , 1 nbCS_4 , , 1 nbCS_5 . 1 nbCS_6 . + 1 nbCS_7 . . . . 1 nbCS_8 . . + , . 1 Nbactivite_chômeurs . , + , . , 1 Nbactivite_eleves_etudiants . . , , , . + , nbimmi . . + + . + + nb_Femme . . + , . , + , N__ nb n_ nbCS_1 nbCS_2 nbCS_3 nbCS_4 nbCS_5 nbCS_6 nbCS_7 nbCS_8 Nbactivite_chômeurs Nbactivite_eleves_etudiants 1 nbimmi , 1 nb_Femme , , 1 attr(,&quot;legend&quot;) [1] 0 &#39; &#39; 0.3 &#39;.&#39; 0.6 &#39;,&#39; 0.8 &#39;+&#39; 0.9 &#39;*&#39; 0.95 &#39;B&#39; 1 # cor(clust[ , c(&quot;nbCS_1&quot;, &quot;nbCS_2&quot;, &quot;nbCS_3&quot;, &quot;nbCS_4&quot;, &quot;nbCS_5&quot;, &quot;nbCS_6&quot;, &quot;nbCS_7&quot;, # &quot;nbCS_8&quot;, &quot;Nbactivite_chômeurs&quot;, &quot;nbimmi&quot;, &quot;nb_Femme&quot;)]) # Pour info avec le package `Hmisc` # library(Hmisc) # rcorr(as.matrix(clust[, c(&quot;nbCS_1&quot;, &quot;nbCS_2&quot;, &quot;nbCS_3&quot;, &quot;nbCS_4&quot;, &quot;nbCS_5&quot;, &quot;nbCS_6&quot;, # &quot;nbCS_7&quot;, &quot;nbCS_8&quot;, &quot;Nbactivite_chômeurs&quot;, &quot;nbimmi&quot;, &quot;nb_Femme&quot;)])) # Et le package `corrplot` library(corrplot) corrplot(cor(clust[, c(&quot;nbCS_1&quot;, &quot;nbCS_2&quot;, &quot;nbCS_3&quot;, &quot;nbCS_4&quot;, &quot;nbCS_5&quot;, &quot;nbCS_6&quot;, &quot;nbCS_7&quot;, &quot;nbCS_8&quot;, &quot;Nbactivite_chômeurs&quot;, &quot;nbimmi&quot;, &quot;nb_Femme&quot;)]), type=&quot;upper&quot;, method=&quot;number&quot;, tl.col=&quot;black&quot;, tl.srt=45) corrplot(cor(clust[, c(&quot;nbCS_1&quot;, &quot;nbCS_2&quot;, &quot;nbCS_3&quot;, &quot;nbCS_4&quot;, &quot;nbCS_5&quot;, &quot;nbCS_6&quot;, &quot;nbCS_7&quot;, &quot;nbCS_8&quot;, &quot;nb_Bac&quot;,&quot;nb_Bacplus2&quot;, &quot;nb_Bacplus3ou4&quot;, &quot;nb_Bacplus5ouplus&quot;, &quot;nb_Moins14ans&quot;, &quot;nb_Peu_pas.diplomés&quot;)]), type=&quot;upper&quot;, method=&quot;number&quot;, tl.col=&quot;black&quot;, tl.srt=45) Pour le dernier graphique, si la couleur est bleu foncé, ou si le coefficient est proche de 1, cela signifie que les variables sont corrélées (la statistique utilisée est le coefficient de corrélation de Pearson qui indique une relation linéaire entre deux variables continues, il varie entre -1 et 1 comme on peut le remarquer sur les premières matrices obtenues avec corrplot()). On remarque ainsi que les variables de CS et de diplôme sont trop corrélées, on va choisir de garder ici la variable de CS. Par ailleurs, cette dernière variable est aussi assez corrélé avec certaines modalités de la variable du type dactivités, par exemple :Nbactivite_actifs_occ et nbCS_4 ; Nbactivite_inactifs avecnbCS_7, nbCS_8 (cf. 1er tableau général des corrélations). On va donc procéder à la suppression de certaines colonnes de notre table finales. clust_socioprof &lt;- clust[, c(&quot;nbCS_2&quot;, &quot;nbCS_3&quot;, &quot;nbCS_4&quot;, &quot;nbCS_5&quot;, &quot;nbCS_6&quot;, &quot;nbCS_7&quot;, &quot;nbCS_8&quot;, &quot;Nbactivite_chômeurs&quot;, &quot;nbimmi&quot;, &quot;nb_Femme&quot;)] Il peut être également plus pertinent de ne pas raisonner en nombre mais plutôt en proportion, pour éviter de capter un effet taille du nombre dhabitants dans un quartier donné. Dans ce cas, on calcule les proportion pour chacune de nos variables finales et on crée un nouvel objet pour cela. clust_socioprof_prop &lt;- clust %&gt;% select(c(&quot;nbhab&quot;, &quot;nbCS_2&quot;, &quot;nbCS_3&quot;, &quot;nbCS_4&quot;, &quot;nbCS_5&quot;, &quot;nbCS_6&quot;, &quot;nbCS_7&quot;, &quot;nbCS_8&quot;, &quot;Nbactivite_chômeurs&quot;, &quot;nbimmi&quot;, &quot;nb_Femme&quot;)) %&gt;% mutate(pctCS_2 = (nbCS_2 / nbhab)*100, pctCS_3 = (nbCS_3 / nbhab)*100, pctCS_4 = (nbCS_4 / nbhab)*100, pctCS_5 = (nbCS_5 / nbhab)*100, pctCS_6 = (nbCS_6 / nbhab)*100, pctCS_7 = (nbCS_7 / nbhab)*100, pctCS_8 = (nbCS_8 / nbhab)*100, pctFemme = (nb_Femme / nbhab)*100, pctChomeurs = (Nbactivite_chômeurs / nbhab)*100, pctImmi = (nbimmi / nbhab)*100) %&gt;% select(pctFemme, pctCS_2, pctCS_3, pctCS_4, pctCS_5, pctCS_6, pctCS_7, pctCS_8, pctChomeurs, pctImmi) 15.2 La méthode de la CAH appliquée à nos données 15.2.1 Constitution des classes On reprend les étapes de la méthode décrite plus haut, une par une. Pour la classification réalisée sur le tableau de contingence en effectifs, on utilise la méthode euclidienne pour la matrice des distances ; mais pour la classification réalisée sur le tableau de contingence en pourcentage (pour éviter un effet taille de nos IRIS), il faut utiliser la distance du khi-2. Pour cette dernière, nous avons besoin du package **ade4** (à installer avant de le charger) et de sa fonction dist.dudi. Attention, cette fonction doit être utilisée sur un format particulier cest pourquoi on lutilise avec la fonction dudi.coa. Enfin, loption amongrow=TRUE de la fonction dist.dudi permet de préciser que les distances doivent être calculées entre lignes, cest-à-dire ici entre nos individus constitués par les IRIS (FALSE si on veut que la distance soit calculée entre colonnes). #Etape 1 : on centre et réduit les variables si on prend la table en nombre clust_socioprof_sc &lt;- as.data.frame(scale(clust_socioprof)) # on n&#39;applique pas cette procédure sur la table en proportion #install.packages(&quot;ade4&quot;) library(ade4) #Etape 2 : on crée la matrice de distance, en utilisant la distance euclidienne #standard pour la table en nombre, et la distance du khi-2 pour la table en % dist_mat_socioprof_n &lt;- dist(clust_socioprof_sc, method = &#39;euclidean&#39;) dist_mat_socioprof_p &lt;- dist.dudi(dudi.coa(clust_socioprof_prop, scannf=FALSE, nf=10), amongrow=TRUE) # si vous souhaitez voir et comparer les matrices de distances, # vous devez les transformer en matrix avec la fonction &#39;as.matrix&#39;, par exemple : # as.matrix(dist_mat_socioprof_n) #Etape 3 : on choisit la méthode d&#39;agrégation, ici la plus standard, le critère de Ward classif_socioprof_n &lt;- hclust(dist_mat_socioprof_n, method = &quot;ward.D2&quot;) classif_socioprof_p &lt;- hclust(dist_mat_socioprof_p, method = &quot;ward.D2&quot;) #Etape 4 : on visualise l&#39;arbre de classification ou dendogramme plot(classif_socioprof_n, xlab=&quot;IRIS&quot;, main=&quot;Dendogramme table effectifs&quot;) plot(classif_socioprof_p, xlab=&quot;IRIS&quot;, main=&quot;Dendogramme table proportion&quot;) # plot(classif_socioprof_n, xlab=&quot;IRIS&quot;, main=&quot;Dendogramme&quot;, labels=FALSE) On remarque ici que comme nous avons mis en label (row.names) le nom des IRIS, on peut tout de suite savoir quels IRIS sont proches et vont former des classes. Toutefois, avec 190 IRIS ce nest absolument pas lisible !! Donc on peut aussi les enlever avec loption label=FALSE dans la fonction plot(). Il existe aussi une fonction via ggplot2 mais il faut installer avant le package ggdendro. library(ggdendro) ggdendrogram(classif_socioprof_n, labels=FALSE) ggdendrogram(classif_socioprof_p, labels=FALSE) Il faut maintenant prendre une décision : où coupe-t-on larbre pour obtenir une partition de la population (ici nos IRIS), autrement dit combien de classes choisissons-nous ? On peut dabord sappuyer sur la forme du dendogramme : plus une branche est haute et plus on perd en distance ou ici (critère de Ward) en inertie interclasse3, il faudra donc couper larbre au niveau de cette branche. Il faut également prendre en compte ce qui peut être le mieux pour lanalyse : si on aboutit à une classification en 2 classes, cela risque dêtre peu intéressant à analyser, mais si on a une classification en 5 classes ou plus, cela va devenir compliqué à interpréter Ici, dans les deux cas, il semble que choisir 2 classes soit très pertinent, mais on voit quon pourrait aussi choisir 4 classes pour le premier clustering, et 3 ou 4 classes pour le second si lon veut rentrer un peu plus dans le détail de lanalyse. On peut également saider de représentations des sauts dinertie du dendrogramme selon le nombre de classes qui peut être retenu, avec la fonction plot et en récupérant linformation sur linertie (height). Ci-dessous, trois types de graphes qui représentent exactement la même chose, mais selon des formes différentes : retenez celle que vous préférez et qui vous parle le plus ! #on stocke l&#39;attribut `$height` dans l&#39;objet `inertie` en triant les valeurs par ordre décroissant. inertie_socioprof_n &lt;- sort(classif_socioprof_n$height, decreasing=TRUE) plot(inertie_socioprof_n, type=&quot;s&quot;, xlab=&quot;Nombre de classes&quot;, ylab=&quot;Inertie&quot;, xlim = c(1,15), xaxp = c(1,15,14)) points(c(2, 4), inertie_socioprof_n[c(2, 4)], col = c(&quot;blue3&quot;, &quot;brown3&quot;, &quot;chartreuse3&quot;), cex = 2, lwd = 2) plot(inertie_socioprof_n, type=&quot;h&quot;, xlab=&quot;Nombre de classes&quot;, ylab=&quot;Inertie&quot;, xlim = c(1,15), xaxp = c(1,15,14)) plot(inertie_socioprof_n, type=&quot;b&quot;, xlab=&quot;Nombre de classes&quot;, ylab=&quot;Inertie&quot;, xlim = c(1,15), xaxp = c(1,15,14)) inertie_socioprof_p &lt;- sort(classif_socioprof_p$height, decreasing=TRUE) plot(inertie_socioprof_p, type=&quot;s&quot;, xlab=&quot;Nombre de classes&quot;, ylab=&quot;Inertie&quot;, xlim = c(1,15), xaxp = c(1,15,14)) points(c(2, 3, 4), inertie_socioprof_p[c(2, 3, 4)], col = c(&quot;blue3&quot;, &quot;brown3&quot;, &quot;chartreuse3&quot;), cex = 2, lwd = 2) Ou encore créer dautres indicateurs plus rigoureux, comme la part de la perte dinertie interclasse dans linertie totale (on parle aussi de semi-partial R-squared). #on crée un indicateur de part en % partinertie_socioprof_n &lt;- inertie_socioprof_n/sum(inertie_socioprof_n)*100 plot(partinertie_socioprof_n, type=&quot;b&quot;, xlab=&quot;Nombre de classes&quot;, ylab=&quot;Part dans l&#39;inertie totale en %&quot;, xlim = c(1,15), xaxp = c(1,15,14)) partinertie_socioprof_p &lt;- inertie_socioprof_p/sum(inertie_socioprof_p)*100 plot(partinertie_socioprof_p, type=&quot;b&quot;, xlab=&quot;Nombre de classes&quot;, ylab=&quot;Part dans l&#39;inertie totale en %&quot;, xlim = c(1,15), xaxp = c(1,15,14)) On voit que les graphiques sont assez proche, quils soient construits à partir de la mesure en valeur absolue ou en valeur relative. Enfin, à savoir que des fonctions existent qui donnent une indication de la meilleure partition à choisir, mais attention le choix se fait aussi (et peut-être surtout) en fonction de lanalyse que lon veut mener et de linterprétation que lon pourra faire des classes obtenues ! Pour lexemple, je vous mets ci-dessous le code de Julien Larmarange pour tester ce type de fonctions ; la meilleure partition selon la perte dinertie relative est représentée par un point noir et la seconde par un point gris. On voit quici il est bien indiqué dabord 2 classes, puis comme seconde meilleure partition 3 classes, ce qui correspond plutôt bien au premier graphique quon avait construit. library(devtools) source(url(&quot;https://raw.githubusercontent.com/larmarange/JLutils/master/R/clustering.R&quot;)) #On a choisit un maximum de 15 classes ici... best.cutree(classif_socioprof_n, min=2, max=15, graph = TRUE, xlab = &quot;Nombre de classes&quot;, ylab = &quot;Inertie relative&quot;) [1] 2 best.cutree(classif_socioprof_p, min=2, max=15, graph = TRUE, xlab = &quot;Nombre de classes&quot;, ylab = &quot;Inertie relative&quot;) [1] 2 Finalement, au vu de la forme du dendogramme et des graphes sur linertie (et de la fonction daide à la décision précédente), on choisit de prendre 4 classes pour une analyse plus fine, mais on va stocker également les résultats pour 2 classes pour les 2 analyses, et pour 3 classes pour la seconde. On peut de nouveau visualiser le dendogramme en matérialisant les différents choix du nombre de classes. par(mfrow = c(1, 1), mar=c(5, 9, 1, 1)) plot(classif_socioprof_n, xlab=&quot;IRIS&quot;, main=&quot;Dendogramme&quot;, label=FALSE) rect.hclust(classif_socioprof_n, k=2, border = &#39;blue3&#39;) rect.hclust(classif_socioprof_n, k=4, border = &#39;brown3&#39;) # On peut aussi couper l&#39;arbre vers la hauteur en ajoutant une ligne sur le graphe # avec la fonction `abline` et l&#39;option `h = 21` pour le graphe précédent : # abline(h = 21, col = &#39;darkred&#39;) par(mfrow = c(1, 1), mar=c(5, 9, 1, 1)) plot(classif_socioprof_p, xlab=&quot;IRIS&quot;, main=&quot;Dendogramme&quot;, label=FALSE) rect.hclust(classif_socioprof_p, k=2, border = &#39;blue3&#39;) rect.hclust(classif_socioprof_p, k=3, border = &#39;brown3&#39;) rect.hclust(classif_socioprof_p, k=4, border = &#39;chartreuse3&#39;) On peut également utiliser la fonction color_branches() du package dendextend(), mais il faut appeler de nouveau ggplot2 après. # On peut encore également utiliser la fonction `color_branches()` du package `dendextend()` # mais il faut appeler de nouveau `ggplot2` après library(dendextend) library(ggplot2) ggplot(color_branches(classif_socioprof_p, k = 4), labels = FALSE) On choisit donc dabord danalyser nos deux clustering en 3 ou 4 classes : pour découper larbre et obtenir la partition souhaitée, on utilise la fonction cutree(), et on peut ensuite visualiser quelle zone infracommunale IRIS est dans quelle classe et le nombre dIRIS par classe. On intègre ensuite la variable au tableau initial clust qui contient les variables utilisées (mais on pourra ensuite fusionner la table avec notre table initiale RP pour mener des analyses plus approfondies des classes, y compris avec des variables non utilisées dans le clustering). #Découpage en k classes classe4_soprof_n &lt;- cutree(classif_socioprof_n, k=4) classe2_soprof_n &lt;- cutree(classif_socioprof_n, k=2) classe4_soprof_p &lt;- cutree(classif_socioprof_p, k=4) classe3_soprof_p &lt;- cutree(classif_socioprof_p, k=3) classe2_soprof_p &lt;- cutree(classif_socioprof_p, k=2) #Liste des groupes #library(janitor) tabyl(classe4_soprof_n) %&gt;% adorn_pct_formatting() # A tibble: 4 x 3 classe4_soprof_n n percent &lt;int&gt; &lt;dbl&gt; &lt;chr&gt; 1 1 50 26.3% 2 2 61 32.1% 3 3 66 34.7% 4 4 13 6.8% tabyl(classe2_soprof_n) %&gt;% adorn_pct_formatting() # A tibble: 2 x 3 classe2_soprof_n n percent &lt;int&gt; &lt;dbl&gt; &lt;chr&gt; 1 1 63 33.2% 2 2 127 66.8% tabyl(classe4_soprof_p) %&gt;% adorn_pct_formatting() # A tibble: 4 x 3 classe4_soprof_p n percent &lt;int&gt; &lt;dbl&gt; &lt;chr&gt; 1 1 56 29.5% 2 2 70 36.8% 3 3 34 17.9% 4 4 30 15.8% tabyl(classe3_soprof_p) %&gt;% adorn_pct_formatting() # A tibble: 3 x 3 classe3_soprof_p n percent &lt;int&gt; &lt;dbl&gt; &lt;chr&gt; 1 1 56 29.5% 2 2 100 52.6% 3 3 34 17.9% tabyl(classe2_soprof_p) %&gt;% adorn_pct_formatting() # A tibble: 2 x 3 classe2_soprof_p n percent &lt;int&gt; &lt;dbl&gt; &lt;chr&gt; 1 1 156 82.1% 2 2 34 17.9% sort(classe4_soprof_p) Folie Méricourt 1 Folie Méricourt 9 Folie Méricourt 10 1 1 1 Folie Méricourt 13 Folie Méricourt 14 Saint-Ambroise 1 1 1 1 Roquette 7 Roquette 8 Roquette 15 1 1 1 Roquette 16 Roquette 20 Bel-Air 3 1 1 1 Bel-Air 5 Bel-Air 13 Picpus 2 1 1 1 Picpus 4 Picpus 6 Picpus 13 1 1 1 Picpus 22 Bercy 1 Bercy 2 1 1 1 Bercy 3 Bercy 4 Quinze-Vingts 10 1 1 1 Quinze-Vingts 13 Belleville 1 Belleville 2 1 1 1 Belleville 7 Belleville 9 Belleville 10 1 1 1 Belleville 12 Belleville 13 Belleville 14 1 1 1 Saint-Fargeau 2 Saint-Fargeau 6 Saint-Fargeau 8 1 1 1 Saint-Fargeau 9 Saint-Fargeau 11 Saint-Fargeau 12 1 1 1 Saint-Fargeau 15 Saint-Fargeau 16 Père Lachaise 2 1 1 1 Père Lachaise 5 Père Lachaise 7 Père Lachaise 9 1 1 1 Père Lachaise 11 Père Lachaise 12 Père Lachaise 16 1 1 1 Charonne 3 Charonne 13 Charonne 16 1 1 1 Charonne 17 Charonne 18 Charonne 23 1 1 1 Charonne 24 Charonne 25 Folie Méricourt 2 1 1 2 Folie Méricourt 3 Folie Méricourt 4 Folie Méricourt 5 2 2 2 Folie Méricourt 6 Folie Méricourt 7 Folie Méricourt 8 2 2 2 Folie Méricourt 15 Saint-Ambroise 2 Saint-Ambroise 3 2 2 2 Saint-Ambroise 4 Saint-Ambroise 5 Saint-Ambroise 6 2 2 2 Saint-Ambroise 9 Saint-Ambroise 11 Saint-Ambroise 13 2 2 2 Saint-Ambroise 14 Roquette 4 Roquette 5 2 2 2 Roquette 6 Roquette 10 Roquette 11 2 2 2 Roquette 12 Roquette 13 Roquette 14 2 2 2 Roquette 17 Roquette 18 Roquette 21 2 2 2 Sainte-Marguerite 1 Sainte-Marguerite 2 Sainte-Marguerite 3 2 2 2 Sainte-Marguerite 4 Sainte-Marguerite 5 Sainte-Marguerite 6 2 2 2 Sainte-Marguerite 7 Sainte-Marguerite 9 Sainte-Marguerite 11 2 2 2 Sainte-Marguerite 13 Bel-Air 2 Bel-Air 4 2 2 2 Bel-Air 6 Bel-Air 8 Bel-Air 9 2 2 2 Picpus 1 Picpus 5 Picpus 10 2 2 2 Picpus 11 Picpus 12 Picpus 17 2 2 2 Picpus 21 Quinze-Vingts 1 Quinze-Vingts 3 2 2 2 Quinze-Vingts 4 Quinze-Vingts 5 Quinze-Vingts 6 2 2 2 Quinze-Vingts 7 Quinze-Vingts 9 Belleville 4 2 2 2 Belleville 6 Saint-Fargeau 7 Père Lachaise 1 2 2 2 Père Lachaise 3 Père Lachaise 13 Père Lachaise 14 2 2 2 Père Lachaise 15 Charonne 2 Charonne 5 2 2 2 Charonne 14 Charonne 15 Charonne 26 2 2 2 Folie Méricourt 11 Folie Méricourt 12 Roquette 1 3 3 3 Roquette 3 Roquette 19 Bel-Air 1 3 3 3 Bel-Air 10 Bel-Air 11 Picpus 9 3 3 3 Bercy 5 Quinze-Vingts 2 Quinze-Vingts 12 3 3 3 Belleville 3 Belleville 5 Belleville 8 3 3 3 Belleville 11 Saint-Fargeau 1 Saint-Fargeau 3 3 3 3 Saint-Fargeau 4 Saint-Fargeau 10 Saint-Fargeau 13 3 3 3 Père Lachaise 6 Père Lachaise 8 Père Lachaise 10 3 3 3 Charonne 1 Charonne 7 Charonne 8 3 3 3 Charonne 9 Charonne 10 Charonne 11 3 3 3 Charonne 12 Charonne 19 Charonne 20 3 3 3 Charonne 21 Saint-Ambroise 7 Saint-Ambroise 8 3 4 4 Saint-Ambroise 10 Saint-Ambroise 12 Roquette 2 4 4 4 Roquette 9 Sainte-Marguerite 8 Sainte-Marguerite 10 4 4 4 Sainte-Marguerite 12 Bel-Air 7 Bel-Air 12 4 4 4 Bel-Air 14 Picpus 3 Picpus 8 4 4 4 Picpus 14 Picpus 15 Picpus 16 4 4 4 Picpus 18 Picpus 19 Picpus 20 4 4 4 Picpus 23 Picpus 24 Bercy 7 4 4 4 Quinze-Vingts 8 Saint-Fargeau 5 Saint-Fargeau 14 4 4 4 Père Lachaise 4 Charonne 4 Charonne 6 4 4 4 Charonne 22 4 #Ajout des variables de classe dans la table initiale de clustering clust_socioprof_n_cl &lt;- cbind.data.frame(clust, classe4_soprof_n=as.factor(classe4_soprof_n), classe2_soprof_n=as.factor(classe2_soprof_n)) clust_socioprof_p_cl &lt;- cbind.data.frame(clust, classe4_soprof_p=as.factor(classe4_soprof_p), classe3_soprof_p=as.factor(classe3_soprof_p), classe2_soprof_p=as.factor(classe2_soprof_p)) 15.2.2 Visualisation sur la carte de la commune Enfin, on peut visualiser sur la carte de la commune - ici 3 arrondissement de Paris - les trois classes construites et choisies. library(geojsonsf) library(sf) library(mapsf) map_iris &lt;- geojson_sf(&quot;data/iris.geojson&quot;) # on charge le fonds de carte des IRIS map_arrdt &lt;- geojson_sf(&quot;data/arrondissements.geojson&quot;) # on charge le fonds de carte des arrdts de Paris map_iris &lt;- map_iris %&gt;% filter(insee_com %in% c(&quot;75111&quot;, &quot;75112&quot;, &quot;75120&quot;)) %&gt;% mutate(code_iris = as.character(code_iris)) %&gt;% rename(IRIS = code_iris) %&gt;% select(IRIS, nom_iris, typ_iris, nom_com, geometry) map_arrdt &lt;- map_arrdt %&gt;% filter(c_arinsee %in% c(&quot;75111&quot;, &quot;75112&quot;, &quot;75120&quot;)) %&gt;% mutate(c_arinsee = as.character(c_arinsee)) %&gt;% select(c_arinsee, geometry) coord &lt;- st_coordinates(st_centroid(map_iris)) map_iris &lt;- cbind(map_iris, coord) clust_map_socioprof_n &lt;- clust_socioprof_n_cl %&gt;% select(IRIS, classe4_soprof_n) %&gt;% left_join(map_iris) clust_map_socioprof_n &lt;- st_as_sf(clust_map_socioprof_n) mf_theme(&quot;agolalight&quot;) mf_map(clust_map_socioprof_n, type=&quot;typo&quot;, var=&quot;classe4_soprof_n&quot;, col = &quot;lightyellow&quot;, border=&quot;gray80&quot;, lwd=0.4, pal = c(&quot;aquamarine3&quot;, &quot;coral&quot;, &quot;skyblue3&quot;, &quot;hotpink3&quot;), leg_pos = &quot;bottomleft&quot;, leg_title=&quot;Cluster&quot;) mf_map(map_arrdt, type = &quot;base&quot;, col = NA, border=&quot;gray41&quot;,lwd=1, add = TRUE) mf_layout(title = &quot;Quartiers de l&#39;Est parisien découpés selon le cluster obtenu&quot;, credits=&quot; &quot;) clust_map_socioprof_p &lt;- clust_socioprof_p_cl %&gt;% select(IRIS, classe4_soprof_p) %&gt;% left_join(map_iris) clust_map_socioprof_p &lt;- st_as_sf(clust_map_socioprof_p) mf_theme(&quot;agolalight&quot;) mf_map(clust_map_socioprof_p, type=&quot;typo&quot;, var=&quot;classe4_soprof_p&quot;, col = &quot;lightyellow&quot;, border=&quot;gray80&quot;, lwd=0.4, pal = c(&quot;aquamarine3&quot;, &quot;coral&quot;, &quot;skyblue3&quot;, &quot;hotpink3&quot;), leg_pos = &quot;bottomleft&quot;, leg_title=&quot;Cluster&quot;) mf_map(map_arrdt, type = &quot;base&quot;, col = NA, border=&quot;gray41&quot;,lwd=1, add = TRUE) mf_layout(title = &quot;Quartiers de l&#39;Est parisien découpés selon le cluster obtenu&quot;, credits=&quot; &quot;) On voit dores et déjà que les 2 cartes diffèrent pas mal, le 2nd clustering semble rassembler des quartiers proches géographiquement ce qui peut aider à linterprétation ensuite, alors que pour le 1er clustering rien napparaît comme ça, ce qui peut confirmer un effet nombre dhabitants avant toute autre chose ; mais il nous reste à comprendre les classes, cest-à-dire à les interpréter, à partir des variables mises en input dans un premier temps. 15.2.3 Interprétation Il faut maintenant comprendre la partition obtenue et interpréter nos 4 classes en les décrivant dabord à partir des variables utilisées dans le clustering. On peut pour cela utiliser le package FactoMiner qui permet avec la fonction catdes de sortir des résultats sur, dune part, les liens les plus significatifs entre les variables actives de la CAH et la variable globale de cluster/classes, et, dautre part de manière plus précise, sur les liens les plus significatifs entre les variables et chacune des classes. library(FactoMineR) desc_cl_soprof_n &lt;- catdes(clust_socioprof_n_cl[, c(&quot;nbCS_1&quot;, &quot;nbCS_2&quot;, &quot;nbCS_3&quot;, &quot;nbCS_4&quot;, &quot;nbCS_5&quot;, &quot;nbCS_6&quot;, &quot;nbCS_7&quot;, &quot;nbCS_8&quot;, &quot;Nbactivite_chômeurs&quot;, &quot;nbimmi&quot;, &quot;nb_Femme&quot;, &quot;classe4_soprof_n&quot;)], num.var = 12) desc_cl_soprof_n Link between the cluster variable and the quantitative variables ================================================================ Eta2 P-value nbCS_6 0.6960796 7.201720e-48 nbCS_5 0.6886940 6.682408e-47 nbimmi 0.6774716 1.785674e-45 Nbactivite_chômeurs 0.6683361 2.382425e-44 nb_Femme 0.6426751 2.391105e-41 nbCS_8 0.5800621 7.551910e-35 nbCS_4 0.5594484 6.394892e-33 nbCS_3 0.4089195 4.080394e-21 nbCS_2 0.3680380 1.947864e-18 nbCS_7 0.3494926 2.798078e-17 Description of each cluster by quantitative variables ===================================================== $`1` v.test Mean in category Overall mean sd in category nbCS_4 8.511019 479.34 356.04211 83.06205 nbCS_3 8.333854 893.20 632.62105 189.58871 nb_Femme 8.129340 1744.76 1332.15789 313.35798 nbCS_2 7.874702 91.74 65.95789 19.47286 nbCS_7 7.303216 555.80 401.92632 185.55689 Nbactivite_chômeurs 4.739070 218.76 176.06842 50.23288 nbimmi 4.035185 579.76 481.73158 116.19631 nbCS_8 3.793813 808.48 679.51579 205.19115 nbCS_5 3.303554 336.14 284.07368 75.92760 Overall sd p.value nbCS_4 119.02166 1.724121e-17 nbCS_3 256.88888 7.825225e-17 nb_Femme 416.99232 4.316354e-16 nbCS_2 26.89900 3.415547e-15 nbCS_7 173.10199 2.809687e-13 Nbactivite_chômeurs 74.01181 2.147018e-06 nbimmi 199.59078 5.455937e-05 nbCS_8 279.28342 1.483513e-04 nbCS_5 129.48735 9.546762e-04 $`2` v.test Mean in category Overall mean sd in category Overall sd nbCS_6 2.448080 120.65574 104.54737 37.96370 62.20522 nbCS_7 -2.619208 353.96721 401.92632 112.75317 173.10199 nb_Femme -2.643464 1215.55738 1332.15789 193.30470 416.99232 nbCS_4 -2.836719 320.32787 356.04211 74.64094 119.02166 nbCS_2 -3.442098 56.16393 65.95789 19.73694 26.89900 nbCS_3 -5.894673 472.44262 632.62105 196.78894 256.88888 p.value nbCS_6 1.436196e-02 nbCS_7 8.813426e-03 nb_Femme 8.206251e-03 nbCS_4 4.557970e-03 nbCS_2 5.772217e-04 nbCS_3 3.754251e-09 $`3` v.test Mean in category Overall mean sd in category nbCS_2 -4.639509 53.51515 65.95789 23.45676 nbCS_7 -5.275433 310.87879 401.92632 115.24092 nbCS_4 -7.126802 271.46970 356.04211 62.94038 nb_Femme -7.832590 1006.51515 1332.15789 195.15202 nbCS_6 -8.125685 54.15152 104.54737 22.21264 nbCS_8 -8.331202 447.53030 679.51579 103.97963 nbCS_5 -8.423953 175.31818 284.07368 50.98192 nbimmi -8.756972 307.46970 481.73158 78.74955 Nbactivite_chômeurs -8.836300 110.86364 176.06842 29.29158 Overall sd p.value nbCS_2 26.89900 3.492373e-06 nbCS_7 173.10199 1.324429e-07 nbCS_4 119.02166 1.027275e-12 nb_Femme 416.99232 4.779222e-15 nbCS_6 62.20522 4.448435e-16 nbCS_8 279.28342 8.002534e-17 nbCS_5 129.48735 3.639908e-17 nbimmi 199.59078 2.005660e-18 Nbactivite_chômeurs 74.01181 9.894055e-19 $`4` v.test Mean in category Overall mean sd in category nbCS_6 9.495095 263.0769 104.5474 62.26057 nbCS_5 9.006114 597.0769 284.0737 124.42573 nbimmi 8.402307 931.8462 481.7316 190.32961 Nbactivite_chômeurs 7.942562 333.8462 176.0684 77.55479 nbCS_8 7.561264 1246.3077 679.5158 285.17427 nb_Femme 5.481158 1945.6154 1332.1579 402.16674 nbCS_4 3.841762 478.7692 356.0421 135.73286 nbCS_7 2.054601 497.3846 401.9263 159.29920 Overall sd p.value nbCS_6 62.20522 2.200100e-21 nbCS_5 129.48735 2.134873e-19 nbimmi 199.59078 4.377919e-17 Nbactivite_chômeurs 74.01181 1.980467e-15 nbCS_8 279.28342 3.991697e-14 nb_Femme 416.99232 4.225497e-08 nbCS_4 119.02166 1.221541e-04 nbCS_7 173.10199 3.991752e-02 clust_socioprof_p_cl &lt;- clust_socioprof_p_cl %&gt;% mutate(pctCS_2 = (nbCS_2 / nbhab)*100, pctCS_3 = (nbCS_3 / nbhab)*100, pctCS_4 = (nbCS_4 / nbhab)*100, pctCS_5 = (nbCS_5 / nbhab)*100, pctCS_6 = (nbCS_6 / nbhab)*100, pctCS_7 = (nbCS_7 / nbhab)*100, pctCS_8 = (nbCS_8 / nbhab)*100, pctFemme = (nb_Femme / nbhab)*100, pctChomeurs = (Nbactivite_chômeurs / nbhab)*100, pctImmi = (nbimmi / nbhab)*100) desc_cl_soprof_p &lt;- catdes(clust_socioprof_p_cl[, c(&quot;pctFemme&quot;, &quot;pctCS_2&quot;, &quot;pctCS_3&quot;, &quot;pctCS_4&quot;, &quot;pctCS_5&quot;, &quot;pctCS_6&quot;, &quot;pctCS_7&quot;, &quot;pctCS_8&quot;, &quot;pctChomeurs&quot;, &quot;pctImmi&quot;, &quot;classe4_soprof_p&quot;)], num.var = 11) desc_cl_soprof_p Link between the cluster variable and the quantitative variables ================================================================ Eta2 P-value pctCS_3 0.7647355 3.432889e-58 pctCS_5 0.6607962 1.916490e-43 pctCS_8 0.5887787 1.081556e-35 pctImmi 0.5727208 3.761147e-34 pctCS_6 0.5583309 8.085891e-33 pctChomeurs 0.4315332 1.113099e-22 pctCS_7 0.3936732 4.278129e-20 pctCS_4 0.2795122 3.363215e-13 pctCS_2 0.2157313 7.921359e-10 Description of each cluster by quantitative variables ===================================================== $`1` v.test Mean in category Overall mean sd in category Overall sd pctCS_8 3.496347 28.843887 26.559051 4.020296 5.807818 pctCS_6 2.372088 4.666205 4.118972 1.658351 2.050281 pctCS_3 -2.217340 23.388311 25.467226 3.799921 8.332533 pctCS_7 -2.802379 14.380390 15.907889 4.234965 4.844249 p.value pctCS_8 0.0004716745 pctCS_6 0.0176878689 pctCS_3 0.0265998823 pctCS_7 0.0050727308 $`2` v.test Mean in category Overall mean sd in category Overall sd pctCS_3 8.370577 32.109903 25.467226 3.6436221 8.3325328 pctCS_4 5.697422 15.454414 14.148069 2.1100299 2.4075139 pctCS_2 4.347652 2.987978 2.632583 0.9175264 0.8583154 pctChomeurs -2.100574 6.550817 6.921285 1.3378948 1.8518333 pctCS_7 -4.073130 14.028722 15.907889 2.4593982 4.8442486 pctCS_5 -5.494399 9.401907 11.161953 1.9254399 3.3635133 pctCS_6 -5.571645 3.031026 4.118972 1.0087489 2.0502815 pctImmi -5.575297 16.110896 19.106201 2.7449134 5.6410816 pctCS_8 -6.485206 22.971918 26.559051 2.9131675 5.8078180 p.value pctCS_3 5.733678e-17 pctCS_4 1.216325e-08 pctCS_2 1.376026e-05 pctChomeurs 3.567839e-02 pctCS_7 4.638549e-05 pctCS_5 3.920434e-08 pctCS_6 2.523452e-08 pctImmi 2.471081e-08 pctCS_8 8.861046e-11 $`3` v.test Mean in category Overall mean sd in category Overall sd pctCS_5 10.228696 16.522454 11.161953 2.5021858 3.3635133 pctImmi 9.322733 27.300231 19.106201 4.1472642 5.6410816 pctCS_6 8.738647 6.910549 4.118972 1.7033525 2.0502815 pctCS_8 8.407635 34.167196 26.559051 5.1512533 5.8078180 pctChomeurs 8.022925 9.236155 6.921285 1.5341143 1.8518333 pctCS_4 -4.705981 12.382800 14.148069 2.5052311 2.4075139 pctCS_2 -5.812283 1.855288 2.632583 0.5870463 0.8583154 pctCS_3 -10.499413 11.836029 25.467226 4.8492740 8.3325328 p.value pctCS_5 1.474919e-24 pctImmi 1.133817e-20 pctCS_6 2.359195e-18 pctCS_8 4.183605e-17 pctChomeurs 1.032567e-15 pctCS_4 2.526481e-06 pctCS_2 6.162671e-09 pctCS_3 8.691878e-26 $`4` v.test Mean in category Overall mean sd in category Overall sd pctCS_7 8.308714 22.669165 15.907889 4.1154615 4.844249 pctCS_3 2.736057 29.296978 25.467226 4.3441065 8.332533 pctFemme 2.052770 53.481634 52.675916 2.1180857 2.336547 pctCS_4 -3.971486 12.541903 14.148069 1.2997615 2.407514 pctImmi -4.310565 15.021456 19.106201 3.0213388 5.641082 pctCS_8 -4.630498 22.041437 26.559051 2.7932936 5.807818 pctCS_5 -4.771516 8.465965 11.161953 1.8611696 3.363513 pctCS_6 -4.781284 2.472227 4.118972 0.9810427 2.050281 pctChomeurs -5.547852 5.195466 6.921285 1.1820873 1.851833 p.value pctCS_7 9.674498e-17 pctCS_3 6.218021e-03 pctFemme 4.009490e-02 pctCS_4 7.142578e-05 pctImmi 1.628381e-05 pctCS_8 3.647872e-06 pctCS_5 1.828449e-06 pctCS_6 1.741795e-06 pctChomeurs 2.892003e-08 Pour le 1er clustering, on peut voir que la 1ère classe est marquée par une surreprésentation du nombre de professions intermédiaires et de cadres, ainsi que de femmes, dartisans/commerçants/chefs dentreprises, de retraités, mais aussi dans une moindre mesure de chômeurs, dimmigrés, dautres inactifs et demployés. Au contraire, la 2ème classe se caractérise par une surreprésentation des ouvriers, et ensuite une sous-représentation des retraités, des femmes, des employés, des artisans/commerçants/chefs dentreprises et des cadres. La 3ème classe est particulière car elle est marquée par une sous-représentation de lensemble ou presque des variables. Et enfin, la classe 4 est marquée par une surreprésentation du nombre douvriers et demployés, ainsi que dimmigrés et de chômeurs, puis dautres inactifs, de femmes, de professions intermédiaires et de retraités. Pour la 2ème typo, la 1ère classe est caractérisée par une surreprésentation des CS dautres inactifs et douvriers et une sous-représentation des cadres et retraités ; sur la carte elle correspond à des quartiers particuliers car on retrouve le cimetière du Père Lachaise, le parc de Bercy - il aurait fallu peut-être retirer ces quartiers également en plus du Bois de Vincennes, sinon ce sont dautres quartiers principalement du 20ème et dans une moindre mesure du 12ème. Quant à la 2ème classe, elle est marquée par une surreprésentation des CS de cadres, professions intermédiaires et artisans/commerçants/chefs dentreprises, et au contraire par une sous-représentation des chômeurs, immigrés et des autres CS ; elle correspond par ailleurs principalement aux quartiers du 11ème et du nord-est du 12ème arrondissement. Ensuite, la classe 3 est caractérisée par une surreprésentation des employés, immigrés, ouvriers, autres inactifs et chômeurs, et une sous-représentation des autres CS ; et on a vu sur la carte quelle correspondait à des quartiers situés plutôt sur les boulevards périphériques intérieurs ou dans le nord du 20ème arrondissement. Enfin, la classe 4 est caractérisée par une surreprésentation des retraités, des cadres et des femmes, ses principaux IRIS se situent dans le 12ème. Cette typologie semble ainsi plus claire, la classe 2 correspond plutôt aux quartiers des catégories sociales supérieures ou moyennes-supérieures (professions intermédiaires), la classe 4 aux quartiers plutôt avec des retraités mais aussi des cadres ou encore des femmes, ces deux classes sopposent semble-t-il à la 3ème classe qui correspond plutôt aux quartiers plus modestes socialement ; la classe 1 peut rassembler les quartiers constitués des autres inactifs, comme les étudiants, et des ouvriers. Il nous faudrait nénmoins dautres variables pour arriver à davantage les caractériser. On peut recupérer les statistiques de la moyenne de ces variables pour les visualiser sur un graphique comparant les 4 classes, ainsi que lensemble des IRIS. stats_var_CAH &lt;- desc_cl_soprof_p$call$X mean_var_CAH_a &lt;- stats_var_CAH %&gt;% group_by(classe4_soprof_p) %&gt;% summarise_all(mean) mean_var_CAH_b &lt;- stats_var_CAH %&gt;% select(-classe4_soprof_p) %&gt;% summarise_all(mean) %&gt;% mutate(classe4_soprof_p=&quot;Ensemble&quot;) mean_var_CAH &lt;- rbind(mean_var_CAH_a, mean_var_CAH_b) rm(mean_var_CAH_a, mean_var_CAH_b) mean_var_CAH %&gt;% pivot_longer(cols=-classe4_soprof_p, names_to=&quot;Variable&quot;, values_to=&quot;Value&quot;) %&gt;% mutate(Value=round(Value, 0)) %&gt;% ggplot() + aes(x=Variable, y=Value, fill=classe4_soprof_p) + geom_bar(stat=&quot;identity&quot;) + facet_wrap(~classe4_soprof_p) + scale_fill_brewer(palette = &quot;Set2&quot;) + geom_text(aes(label = Value), position = position_stack(vjust = 0.5), color=&quot;gray35&quot;, size=2.5) + theme_grey() + labs(title = &quot;Moyenne des variables actives selon les classes et pour l&#39;ensemble&quot;, x=&quot; &quot;, y=&quot;&quot;) + scale_x_discrete(labels=c(&quot;% de chômeurs&quot;,&quot;% d&#39;artisans, ...&quot;, &quot;% de cadres&quot;, &quot;% de professions intermédiaires&quot;, &quot;% d&#39;employés&quot;,&quot;% d&#39;ouvriers&quot;,&quot;% de retraités&quot;, &quot;% d&#39;autres inactifs&quot;,&quot;% de femmes&quot;,&quot;% d&#39;immigrés&quot;)) + theme(legend.position = &quot;none&quot;, axis.text.x = element_text(angle = 80, hjust=1, size=7)) On peut aussi construire dautres graphiques plus généraux et sur dautres variables. library(scales) # Pour la variable d&#39;âge : tab_age_ens &lt;- clust_socioprof_p_cl %&gt;% select(nb_Moins18ans, nb_18.29ans, nb_30.39ans,nb_40.54ans,nb_55.64ans,nb_Plus64ans, classe4_soprof_p) %&gt;% summarise(nb_Moins18ans = sum(nb_Moins18ans), nb_18.29ans=sum(nb_18.29ans), nb_30.39ans=sum(nb_30.39ans), nb_40.54ans=sum(nb_40.54ans), nb_55.64ans=sum(nb_55.64ans), nb_Plus64ans=sum(nb_Plus64ans)) %&gt;% mutate(pct_Moins18ans = nb_Moins18ans / (nb_Moins18ans + nb_18.29ans + nb_30.39ans + nb_40.54ans + nb_55.64ans + nb_Plus64ans), pct_18.29ans = nb_18.29ans / (nb_Moins18ans + nb_18.29ans + nb_30.39ans + nb_40.54ans + nb_55.64ans + nb_Plus64ans), pct_30.39ans = nb_30.39ans / (nb_Moins18ans + nb_18.29ans + nb_30.39ans + nb_40.54ans + nb_55.64ans + nb_Plus64ans), pct_40.54ans = nb_40.54ans / (nb_Moins18ans + nb_18.29ans + nb_30.39ans + nb_40.54ans + nb_55.64ans + nb_Plus64ans), pct_55.64ans = nb_55.64ans / (nb_Moins18ans + nb_18.29ans + nb_30.39ans + nb_40.54ans + nb_55.64ans + nb_Plus64ans), pct_Plus64ans = nb_Plus64ans / (nb_Moins18ans + nb_18.29ans + nb_30.39ans + nb_40.54ans + nb_55.64ans + nb_Plus64ans), classe4_soprof_p = &quot;Ensemble&quot;) clust_socioprof_p_cl %&gt;% select(nb_Moins18ans, nb_18.29ans,nb_30.39ans,nb_40.54ans, nb_55.64ans,nb_Plus64ans, classe4_soprof_p) %&gt;% group_by(classe4_soprof_p) %&gt;% summarise(nb_Moins18ans = sum(nb_Moins18ans), nb_18.29ans=sum(nb_18.29ans), nb_30.39ans=sum(nb_30.39ans), nb_40.54ans=sum(nb_40.54ans), nb_55.64ans=sum(nb_55.64ans), nb_Plus64ans=sum(nb_Plus64ans)) %&gt;% mutate(pct_Moins18ans = nb_Moins18ans / (nb_Moins18ans + nb_18.29ans + nb_30.39ans + nb_40.54ans + nb_55.64ans + nb_Plus64ans), pct_18.29ans = nb_18.29ans / (nb_Moins18ans + nb_18.29ans + nb_30.39ans + nb_40.54ans + nb_55.64ans + nb_Plus64ans), pct_30.39ans = nb_30.39ans / (nb_Moins18ans + nb_18.29ans + nb_30.39ans + nb_40.54ans + nb_55.64ans + nb_Plus64ans), pct_40.54ans = nb_40.54ans / (nb_Moins18ans + nb_18.29ans + nb_30.39ans + nb_40.54ans + nb_55.64ans + nb_Plus64ans), pct_55.64ans = nb_55.64ans / (nb_Moins18ans + nb_18.29ans + nb_30.39ans + nb_40.54ans + nb_55.64ans + nb_Plus64ans), pct_Plus64ans = nb_Plus64ans / (nb_Moins18ans + nb_18.29ans + nb_30.39ans + nb_40.54ans + nb_55.64ans + nb_Plus64ans)) %&gt;% rbind(tab_age_ens) %&gt;% pivot_longer(cols=-c(classe4_soprof_p, nb_Moins18ans, nb_18.29ans, nb_30.39ans, nb_40.54ans, nb_55.64ans, nb_Plus64ans), names_to = &quot;age&quot;, values_to = &quot;pct&quot;) %&gt;% ggplot() + aes(x = pct, y=age , fill=classe4_soprof_p) + geom_bar(stat=&quot;identity&quot;, position=&quot;dodge&quot;) + scale_x_continuous(labels=percent) + scale_y_discrete(labels=c(&quot;Moins de 18 ans&quot;, &quot;18-29 ans&quot;, &quot;30-39 ans&quot;, &quot;40-54 ans&quot;, &quot;55-64 ans&quot;, &quot;Plus de 64 ans&quot;)) + labs(title = &quot;Classes d&#39;âge selon les classes&quot;, x=&quot; &quot;, y=&quot;&quot;, fill=&quot;Classe&quot;) + coord_flip() + scale_fill_brewer(palette=&quot;Set2&quot;) # Pour le lieu de naissance tab_lieunaiss_ens &lt;- clust_socioprof_p_cl %&gt;% select(Nblieu_naiss_autre_dept, Nblieu_naiss_autre_region, Nblieu_naiss_étranger, Nblieu_naiss_même_dept, classe4_soprof_p) %&gt;% summarise(Nblieu_naiss_autre_dept = sum(Nblieu_naiss_autre_dept), Nblieu_naiss_autre_region=sum(Nblieu_naiss_autre_region), Nblieu_naiss_étranger = sum(Nblieu_naiss_étranger), Nblieu_naiss_même_dept = sum(Nblieu_naiss_même_dept)) %&gt;% mutate(pct_autre_dept = Nblieu_naiss_autre_dept / (Nblieu_naiss_autre_dept + Nblieu_naiss_autre_region + Nblieu_naiss_étranger + Nblieu_naiss_même_dept), pct_autre_region = Nblieu_naiss_autre_region / (Nblieu_naiss_autre_dept + Nblieu_naiss_autre_region + Nblieu_naiss_étranger + Nblieu_naiss_même_dept), pct_etranger = Nblieu_naiss_étranger / (Nblieu_naiss_autre_dept + Nblieu_naiss_autre_region + Nblieu_naiss_étranger + Nblieu_naiss_même_dept), pct_même_dept = Nblieu_naiss_même_dept / (Nblieu_naiss_autre_dept + Nblieu_naiss_autre_region + Nblieu_naiss_étranger + Nblieu_naiss_même_dept), classe4_soprof_p = &quot;Ensemble&quot;) clust_socioprof_p_cl %&gt;% select(Nblieu_naiss_autre_dept, Nblieu_naiss_autre_region, Nblieu_naiss_étranger, Nblieu_naiss_même_dept, classe4_soprof_p) %&gt;% group_by(classe4_soprof_p) %&gt;% summarise(Nblieu_naiss_autre_dept = sum(Nblieu_naiss_autre_dept), Nblieu_naiss_autre_region=sum(Nblieu_naiss_autre_region), Nblieu_naiss_étranger = sum(Nblieu_naiss_étranger), Nblieu_naiss_même_dept = sum(Nblieu_naiss_même_dept)) %&gt;% mutate(pct_autre_dept = Nblieu_naiss_autre_dept / (Nblieu_naiss_autre_dept + Nblieu_naiss_autre_region + Nblieu_naiss_étranger + Nblieu_naiss_même_dept), pct_autre_region = Nblieu_naiss_autre_region / (Nblieu_naiss_autre_dept + Nblieu_naiss_autre_region + Nblieu_naiss_étranger + Nblieu_naiss_même_dept), pct_etranger = Nblieu_naiss_étranger / (Nblieu_naiss_autre_dept + Nblieu_naiss_autre_region + Nblieu_naiss_étranger + Nblieu_naiss_même_dept), pct_même_dept = Nblieu_naiss_même_dept / (Nblieu_naiss_autre_dept + Nblieu_naiss_autre_region + Nblieu_naiss_étranger + Nblieu_naiss_même_dept)) %&gt;% rbind(tab_lieunaiss_ens) %&gt;% pivot_longer(cols=-c(classe4_soprof_p,Nblieu_naiss_autre_dept, Nblieu_naiss_autre_region, Nblieu_naiss_étranger, Nblieu_naiss_même_dept), names_to = &quot;lieu_naiss&quot;, values_to = &quot;pct&quot;) %&gt;% mutate(lieu_naiss = fct_relevel(lieu_naiss, c(&quot;pct_même_dept&quot;, &quot;pct_autre_dept&quot;, &quot;pct_autre_region&quot;,&quot;pct_etranger&quot;))) %&gt;% ggplot() + aes(x = pct, y=lieu_naiss , fill=classe4_soprof_p) + geom_bar(stat=&quot;identity&quot;, position=&quot;dodge&quot;) + scale_x_continuous(labels=percent) + scale_y_discrete(labels=c(&quot;Dans le même département&quot; , &quot;Dans un autre département&quot;, &quot;Dans une autre région&quot;, &quot;A l&#39;étranger&quot;)) + coord_flip() + scale_fill_brewer(palette=&quot;Set2&quot;) + labs(title = &quot;Lieu de naissance selon les classes&quot;, x=&quot; &quot;, y=&quot;&quot;, fill=&quot;Classe&quot;) + theme(axis.text.x = element_text(angle = 45, hjust=1)) # Pour la variable de diplôme tab_dipl_ens &lt;- clust_socioprof_p_cl %&gt;% select(nb_Bac, nb_Bacplus2, nb_Bacplus3ou4, nb_Bacplus5ouplus, nb_Moins14ans, nb_Peu_pas.diplomés,classe4_soprof_p) %&gt;% summarise(nb_Bac = sum(nb_Bac), nb_Bacplus2=sum(nb_Bacplus2), nb_Bacplus3ou4 = sum(nb_Bacplus3ou4), nb_Bacplus5ouplus = sum(nb_Bacplus5ouplus), nb_Moins14ans = sum(nb_Moins14ans), nb_Peu_pas.diplomés=sum(nb_Peu_pas.diplomés)) %&gt;% mutate(pct_Bac = nb_Bac / (nb_Bac + nb_Bacplus2 + nb_Bacplus3ou4 + nb_Bacplus5ouplus + nb_Moins14ans + nb_Peu_pas.diplomés), pct_Bacplus2 = nb_Bacplus2 / (nb_Bac + nb_Bacplus2 + nb_Bacplus3ou4 + nb_Bacplus5ouplus + nb_Moins14ans + nb_Peu_pas.diplomés), pct_Bacplus3ou4 = nb_Bacplus3ou4 / (nb_Bac + nb_Bacplus2 + nb_Bacplus3ou4 + nb_Bacplus5ouplus + nb_Moins14ans + nb_Peu_pas.diplomés), pct_Bacplus5ouplus = nb_Bacplus5ouplus / (nb_Bac + nb_Bacplus2 + nb_Bacplus3ou4 + nb_Bacplus5ouplus + nb_Moins14ans + nb_Peu_pas.diplomés), pct_Moins14ans = nb_Moins14ans / (nb_Bac + nb_Bacplus2 + nb_Bacplus3ou4 + nb_Bacplus5ouplus + nb_Moins14ans + nb_Peu_pas.diplomés), pct_Peu_pas.diplomes = nb_Peu_pas.diplomés / (nb_Bac + nb_Bacplus2 + nb_Bacplus3ou4 + nb_Bacplus5ouplus + nb_Moins14ans + nb_Peu_pas.diplomés), classe4_soprof_p = &quot;Ensemble&quot;) clust_socioprof_p_cl %&gt;% select(nb_Bac, nb_Bacplus2, nb_Bacplus3ou4, nb_Bacplus5ouplus, nb_Moins14ans, nb_Peu_pas.diplomés,classe4_soprof_p) %&gt;% group_by(classe4_soprof_p) %&gt;% summarise(nb_Bac = sum(nb_Bac), nb_Bacplus2=sum(nb_Bacplus2), nb_Bacplus3ou4 = sum(nb_Bacplus3ou4), nb_Bacplus5ouplus = sum(nb_Bacplus5ouplus), nb_Moins14ans = sum(nb_Moins14ans), nb_Peu_pas.diplomés=sum(nb_Peu_pas.diplomés)) %&gt;% mutate(pct_Bac = nb_Bac / (nb_Bac + nb_Bacplus2 + nb_Bacplus3ou4 + nb_Bacplus5ouplus + nb_Moins14ans + nb_Peu_pas.diplomés), pct_Bacplus2 = nb_Bacplus2 / (nb_Bac + nb_Bacplus2 + nb_Bacplus3ou4 + nb_Bacplus5ouplus + nb_Moins14ans + nb_Peu_pas.diplomés), pct_Bacplus3ou4 = nb_Bacplus3ou4 / (nb_Bac + nb_Bacplus2 + nb_Bacplus3ou4 + nb_Bacplus5ouplus + nb_Moins14ans + nb_Peu_pas.diplomés), pct_Bacplus5ouplus = nb_Bacplus5ouplus / (nb_Bac + nb_Bacplus2 + nb_Bacplus3ou4 + nb_Bacplus5ouplus + nb_Moins14ans + nb_Peu_pas.diplomés), pct_Moins14ans = nb_Moins14ans / (nb_Bac + nb_Bacplus2 + nb_Bacplus3ou4 + nb_Bacplus5ouplus + nb_Moins14ans + nb_Peu_pas.diplomés), pct_Peu_pas.diplomes = nb_Peu_pas.diplomés / (nb_Bac + nb_Bacplus2 + nb_Bacplus3ou4 + nb_Bacplus5ouplus + nb_Moins14ans + nb_Peu_pas.diplomés)) %&gt;% rbind(tab_dipl_ens) %&gt;% pivot_longer(cols=-c(classe4_soprof_p,nb_Bac, nb_Bacplus2, nb_Bacplus3ou4, nb_Bacplus5ouplus, nb_Moins14ans,nb_Peu_pas.diplomés), names_to = &quot;dipl&quot;, values_to = &quot;pct&quot;) %&gt;% mutate(dipl = fct_relevel(dipl, c(&quot;pct_Moins14ans&quot;, &quot;pct_Peu_pas.diplomes&quot;, &quot;pct_Bac&quot;, &quot;pct_Bacplus2&quot;, &quot;pct_Bacplus3ou4&quot;, &quot;pct_Bacplus5ouplus&quot;))) %&gt;% ggplot() + aes(x = pct, y=dipl , fill=classe4_soprof_p) + geom_bar(stat=&quot;identity&quot;, position=&quot;dodge&quot;) + scale_x_continuous(labels=percent) + scale_y_discrete(labels=c(&quot;Moins de 14 ans&quot;, &quot;Peu ou pas diplomés&quot;,&quot;Bac&quot;, &quot;Bac+2&quot;, &quot;Bac+3 ou +4&quot;, &quot;Bac+5 ou plus&quot;)) + coord_flip() + scale_fill_brewer(palette=&quot;Set2&quot;) + labs(title = &quot;Diplôme selon les classes&quot;, x=&quot; &quot;, y=&quot;&quot;, fill=&quot;Classe&quot;) + theme(axis.text.x = element_text(angle = 45, hjust=1)) # Pour la variable d&#39;activite tab_act_ens&lt;- clust_socioprof_p_cl %&gt;% select(Nbactivite_actifs_occ, Nbactivite_chômeurs, Nbactivite_eleves_etudiants, Nbactivite_inactifs, classe4_soprof_p) %&gt;% summarise(Nbactivite_actifs_occ = sum(Nbactivite_actifs_occ), Nbactivite_chômeurs=sum(Nbactivite_chômeurs), Nbactivite_eleves_etudiants = sum(Nbactivite_eleves_etudiants), Nbactivite_inactifs = sum(Nbactivite_inactifs)) %&gt;% mutate(pct_actifs_occ = Nbactivite_actifs_occ / (Nbactivite_actifs_occ + Nbactivite_chômeurs + Nbactivite_eleves_etudiants + Nbactivite_inactifs), pct_chômeurs = Nbactivite_chômeurs / (Nbactivite_actifs_occ + Nbactivite_chômeurs + Nbactivite_eleves_etudiants + Nbactivite_inactifs), pct_eleves_etudiants = Nbactivite_eleves_etudiants / (Nbactivite_actifs_occ + Nbactivite_chômeurs + Nbactivite_eleves_etudiants + Nbactivite_inactifs), pct_inactifs = Nbactivite_inactifs / (Nbactivite_actifs_occ + Nbactivite_chômeurs + Nbactivite_eleves_etudiants + Nbactivite_inactifs), classe4_soprof_p = &quot;Ensemble&quot;) clust_socioprof_p_cl %&gt;% select(Nbactivite_actifs_occ, Nbactivite_chômeurs, Nbactivite_eleves_etudiants, Nbactivite_inactifs, classe4_soprof_p) %&gt;% group_by(classe4_soprof_p) %&gt;% summarise(Nbactivite_actifs_occ = sum(Nbactivite_actifs_occ), Nbactivite_chômeurs=sum(Nbactivite_chômeurs), Nbactivite_eleves_etudiants = sum(Nbactivite_eleves_etudiants), Nbactivite_inactifs = sum(Nbactivite_inactifs)) %&gt;% mutate(pct_actifs_occ = Nbactivite_actifs_occ / (Nbactivite_actifs_occ + Nbactivite_chômeurs + Nbactivite_eleves_etudiants + Nbactivite_inactifs), pct_chômeurs = Nbactivite_chômeurs / (Nbactivite_actifs_occ + Nbactivite_chômeurs + Nbactivite_eleves_etudiants + Nbactivite_inactifs), pct_eleves_etudiants = Nbactivite_eleves_etudiants / (Nbactivite_actifs_occ + Nbactivite_chômeurs + Nbactivite_eleves_etudiants + Nbactivite_inactifs), pct_inactifs = Nbactivite_inactifs / (Nbactivite_actifs_occ + Nbactivite_chômeurs + Nbactivite_eleves_etudiants + Nbactivite_inactifs)) %&gt;% rbind(tab_act_ens) %&gt;% pivot_longer(cols=-c(classe4_soprof_p,Nbactivite_actifs_occ, Nbactivite_chômeurs, Nbactivite_eleves_etudiants, Nbactivite_inactifs), names_to = &quot;activite&quot;, values_to = &quot;pct&quot;) %&gt;% ggplot() + aes(x = pct, y=activite , fill=classe4_soprof_p) + geom_bar(stat=&quot;identity&quot;, position=&quot;dodge&quot;) + scale_x_continuous(labels=percent) + scale_y_discrete(labels=c(&quot;Actifs occupés&quot;, &quot;Chômeurs&quot;,&quot;Elèves ou étudiants&quot;, &quot;Autres inactifs&quot;)) + coord_flip() + scale_fill_brewer(palette=&quot;Set2&quot;) + labs(title = &quot;Statut d&#39;activité selon les classes&quot;, x=&quot; &quot;, y=&quot;&quot;, fill=&quot;Classe&quot;) On observe en plus des résultats précédents que les jeunes de moins de 30 ans constituent une part plus importante de la population de la classe 2, alors quils constituent une part se situant dans la moyenne (ensemble) pour la classe 1. Cette dernière classe comptent un peu plus de 30-39 ans dans sa population.Deux autres classes se distinguent : la classe 3 comprend davantage de personnes âgés entre 40 et 64 ans ; alors que la classe 4 comprend beaucoup plus de personnes âgées de plus de 64 ans par rapport à lensemble, ce qui paraît logique puisquon a vu quelle était caractérisée par une surreprésentation des retraités. En revanche, contrairement à ce quon pouvait penser, cest davantage la classe 2 qui rassemble plus de jeunes par rapport à la classe 1 (alors quil y avait une surreprésentation des autres inactifs, laissant penser à plus détudiants). Par rapport au lieu de naissance des habitants de chaque classe, on confirme que la classe 3 comporte une part plus importante de personnes nées à létranger (plus de 30%, par rapport à environ 24% dans lensemble). Dans le même temps, cest aussi dans cette classe que lon note une part de personnées nées dans le même département, donc peu mobiles, plus importante par rapport à lensemble. Au contraire, la classe 2, et dans une moins mesure la classe 4, ont des part de personnées nées dans une autre région plus importante : cela est assez cohérent avec le fait que ce sont les 2 classes qui rassemblent une population plus favorisée, traditionnellement plus mobile. Ensuite, la répartition des habitants selon le diplôme confirme plutôt les résultats précédents notamment par rapport aux PCS. Le classe 3 se caractérise par une forte proportion de personnes peu ou pas diplômés, mais aussi de niveau Bac ou encore de jeunes (moins de 14 ans) ; alors quau contraire la classe 2, et dans une moindre mesure 4, rassemble une part plus importante de Bac+5 ou plus. La classe 1 comprend également un peu plus de jeunes de moins de 14 ans, et moins de Bac+5 ou plus. Enfin, on trouve une part plus importante dactifs occupés chez les habitants de la classe 2 ; une part plus importante dautres inactifs chez les habitants de la classe 3, mais également chez ceux de la classe 4 (retraités) ; une part plus importante de chômeurs dans la classe 3 ; et enfin une part un peu plus importante délèves ou étudiants dans les classe 1 et 3. Ainsi, ce 2nd clustering, qui semble plus pertinent que le 1er, a permis de regrouper les quartiers de lEst parisien en 4 grandes classes selon leurs caractéristiques socio-professionnelles : une 1ère classe rassemblant des habitants de quartiers présents surtout dans le 20ème et le 12ème arrondissement, qui sont un peu plus souvent inactifs hors retraités et ouvriers, et avec un peu plus denfants, elle rassemble également des quartiers particuliers avec le cimetière du Père Lachaise ou encore le Par de Bercy ; une seconde classe qui regrouperait donc des individus de milieux plutôt favorisés, plus jeunes, plus diplômés, dans des quartiers principalement du 11ème arrondissement, et du nord-est du 12ème arrondissement (Roquette, Charonne, Bastille - Sainte-Marguerite et Quinze-vingt) ; une troisième classe, qui soppose à cette 2ème classe ainsi que la dernière, rassemble au contraire desquartiers plus défavorisés qui se situent en majorité sur les boulevards périphériques et davantage dans le 20ème ; enfin une 4ème classe qui elle aussi rassemble une population plus favorisée avec surtout davantage de retraités dans des quartiers principalement du 12ème arrondissement (Bel-Air, Picpus). Plus précisément, à chaque étape dagrégation, la part de linertie interclasse passe en inertie intraclasse. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
